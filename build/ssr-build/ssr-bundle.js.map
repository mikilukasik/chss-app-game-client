{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////Users/mlukasik1/chss/msg/src/lib/cookies.js","webpack:///./routes/home/style.css","webpack:///external \"preact\"","webpack:///./components/header/index.js","webpack:///./routes/home/index.js","webpack:///./context/GameContext.js","webpack:///./engine/engine.js","webpack:///../src/index.js","webpack:///./model/Game.js","webpack:///./model/table.js","webpack:///./components/board/Board.js","webpack:///./components/game/index.js","webpack:///./routes/game/index.js","webpack:///./components/app.js","webpack:////Users/mlukasik1/chss/msg/src/client.js","webpack:///./index.js","webpack:///./worker/initWorkers.js","webpack:///./components/board/style.scss?d5fc","webpack:////Users/mlukasik1/chss/msg/src/lib/isfunction.js","webpack:////Users/mlukasik1/chss/msg/src/lib/createSocketRule.js","webpack:///../src/util.js","webpack:////Users/mlukasik1/chss/msg/src/lib/getargs.js","webpack:///../node_modules/preact-router/match.js","webpack:///./components/header/style.css"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","cookies","set","cname","cvalue","exdays","document","cookie","Date","setTime","getTime","expires","toUTCString","delete","ca","split","length","charAt","substring","indexOf","require","Header","class","style","header","activeClassName","active","href","Home","home","GameContext","createContext","evalFuncs","getPieceValues","dbTable","result","wVal","bVal","table","forEach","x","y","shouldIDraw","pieceVals","this","wNext","checkIfLooped","newTable","allPastTables","seenCount","thisState","createState","pastTable","addMovesToTable","originalTable","whiteNext","dontClearInvalid","returnMoveCoords","myCol","j","canMove","getTableData","origTable","isWhite","oppKingPos","lSancVal","rSancVal","tableValue","rtnMyHitSum","rtnHisHitSum","rtnPushHimBack","rtnApproachTheKing","undefined","whereIsTheKing","origColor","sancolhat","myMostMoved","lookI","lookJ","Math","abs","getAllMoves","tableToMoveOn","hitItsOwn","allHitSum","removeCaptured","thisArray","hitSumPart","stepItem","protectPieces","whitePlayer","protectedSum","thisMoveCoords","protectTable","wn","k","moveTable","speedy","dontProt","hitSumm","dontRemoveInvalid","what","possibleMoves","pawnCanMove","bishopCanMove","horseCanMove","rookCanMove","hitSummm","canMoveTo","pushAidA","queenCanMove","kingCanMove","move","coordsToMoveCoords","captured","moveIt","splice","spliceCount","removeKmin2","removeKplus2","hitSummmm","fromTable","whatHits","whatsThereNN","target","thisHit","pushAidP","pushAidPH","nc","stateToRemember","String","fromCharCode","join","getPushString","moveCoords","whatM","whatsHit","toString","a","b","coordsToMoveString","moveInTable","isLearner","toPush","moves","push","pollNum","moveCount","pushThis","color","tempMoves","tempMoveCount","intable","dontProtect","hitValue","thistable","Array","ij","pushAidN","protectedArray","iHitMoves","protectScore","isThere","whatsThereN","pushAidXN","pushAidNN","fastMove","Int8Array","newCanMove","pawnCanMoveN","bishopCanMoveN","horseCanMoveN","rookCanMoveN","queenCanMoveN","kingCanMoveN","getHitScores","flipIt","wPlayer","mod","fwV","bHK","hKM","modType","modConst","pawnVal","iHitCoords","heHitsCoords","myprotectScore","Uint8Array","hisprotectScore","myAllHit","hisAllHit","myBestHit","hisBestHit","allMyMoves","hisKingMoves","hitCoords","thisValue","protecScore","allhitScore","hisKingMArr","keys","hisKingMoveScore","blockHisKingScore","reduce","Int32Array","MoveTaskN","id","random","sharedData","origWNext","desiredDepth","origProtect","origData","origDeepDatatt","origDeepDatatf","origDeepDataft","origDeepDataff","dontLoop","solveSmallDeepeningTask","sdt","resolverArray","newWNext","depth","SmallDeepeningTask","moveTree","gameNum","trItm","resolveDepth","ResolverItem","score","isNegative","newScore","movedTable","valueToSave","newMoveTree","concat","TriggerItem","solveDeepeningTask","deepeningTask","isSdt","retProgress","progress","startedAt","smallDeepeningTasks","p2","resultingSDTs","pop","timeItTook","ret","singleThreadAi","tempDbTable","cb","clone","obj","copy","len","attr","Error","moveTask","SplitMove","movesToSend","splitMove","moveIndex","done","expected","smallMoveTask","index","DeepeningTask","smallDeepeningTask","tempTasks","tempTask","smallDeepeningTasksCopy","slice","oneDeeper","res","res2","tempResolveArray","wouldLoop","pushAgain","pow","sort","finalResult","winningMove","raDm1","previousValue","currentValue","array","currentIndex","currentComponent","prevRaf","stopped","MoveToSend","moveCoord","dbTableWithMoveTask","splitMoveId","_id","splitMoveID","timer","history","started","splitMoveIndex","thinkers","origMoveTask","pendingMoveCount","initialWNext","moveStr","initialTreeMoves","startingTable","startingAllPastTables","allPast","thisTaskTable","firstDepthValue","actualDepth","tableTree","moveStrTree","smallDeepeningTaskCounts","initialSmallDeepeningTask","cfColor","solvedSmallDeepeningTasks","inscore","inmoveTree","GameModel","returnedMoves","gameIsOn","whiteWon","blackWon","isDraw","askWhiteDraw","askBlackDraw","whiteCanForceDraw","blackCanForceDraw","created","now","moved","getInitialTable","currentHook","afterPaintEffects","oldBeforeDiff","options","oldBeforeRender","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","getHookState","type","hooks","useState","initialState","reducer","init","hookState","_reducer","invokeOrReturn","nextValue","action","setState","useReducer","flushAfterPaintEffects","component","invokeCleanup","invokeEffect","e","vnode","requestAnimationFrame","callback","raf","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","setTimeout","commitQueue","some","filter","hook","comp","arg","f","Board","context","provider","state","sub","props","gameState","setGameState","firstClickedCellAddress","setFirstClickedCellAddress","cellSize","min","window","innerHeight","innerWidth","whiteState","cellClickHandler","rowIndex","colIndex","cell","moveToMake","game","map","row","9","clearHighlights","nextGameState","className","width","height","darker","square","onClick","src","selected","selected2","Game","Provider","GameRoute","App","path","gameSocket","optionalOptions","ws","do","getArgs","msgOptions","mySocketRules","waitingHandlersByConvId","serviceName","waitingCbsByConvId","waitingErrHandlersByConvId","wsRoutes","createSocketRule","serviceLongName","console","log","sharedWorker","scriptLocation","SharedWorker","route","wsOptions","onConnect","onReConnect","connectCount","waitForConnect","deadLine","Promise","rej","check","readyState","askGtw","command","data","res3","rej3","tempConversationId","reply","then","send","JSON","stringify","owner","ex","te","toGtw","conversationId","myCallBacks","doStarted","message","answer","error","errorHandler","thisHandler","argObj","cmd","args","cmdArgs","err","callbacks","callBacks","start","WebSocket","onopen","openEvent","onmessage","evt","parse","callBack","onerror","stack","onclose","objDo","cmd1","arguments","handlers","dataHandler","comms","onData","onDataCb","askRes","objOn","on","distObj","_options","gotInitValue","waitForInitValues","onChange","store","subDistObj","dontGetInitVal","Proxy","prop","re","fn","self","deleteProperty","deleted","waitForReady","PORT","functionToCheck","rule","publicSocket","publicSocketRoute","EMPTY","assign","let","exec","url","opts","reg","match","matches","decodeURIComponent","segmentize","replace","max","param","flags","plus","star","val","default","pathRankSort","rank","prepareVNodeForRanking","rankSegment","rankChild","segment","customHistory","ROUTERS","subscribers","getCurrentUrl","location","getCurrentLocation","pathname","search","canRoute","setUrl","routeTo","didRoute","routeFromLink","node","getAttribute","handleLinkClick","ctrlKey","metaKey","altKey","shiftKey","button","currentTarget","prevent","stopImmediatePropagation","stopPropagation","preventDefault","delegateLinkHandler","nodeName","toUpperCase","hasAttribute","parentNode","eventListenersInitialized","Router","super","addEventListener","shouldComponentUpdate","static","const","children","getMatchingChildren","updating","forceUpdate","componentWillMount","componentDidMount","unlisten","listen","componentWillUnmount","componentWillUpdate","componentDidUpdate","invoke","newProps","ref","Boolean","render","current","previous","previousUrl","router","Link","Route","isFunction","globOpts","tryParse","strObj","argsLen","cmdStr","insideObj","csI","splitCmd","splitCmdTemp","part","thisVal","cbi","cbs","Match","_extends","source","_preact","_preactRouter","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_Component","_temp","_this","_len","_key","apply","update","nextUrl","subClass","superClass","constructor","writable","configurable","setPrototypeOf","__proto__","_inherits","Component","_ref","_objectWithoutProperties","h","_ref2"],"mappings":"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","file":"ssr-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"QfWi\");\n","const cookies = {\n  set(cname, cvalue, exdays = 365) {\n    if (!exdays) return document.cookie = cname + '=' + cvalue;\n    var d = new Date();\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\n    var expires = 'expires=' + d.toUTCString();\n    document.cookie = cname + '=' + cvalue + ';' + expires + ';path=/';\n  },\n\n  delete(cname) {\n    var d = new Date(2000, 1, 1);\n    var expires = 'expires=' + d.toUTCString();\n    document.cookie = cname + '=' + ';' + expires + ';path=/';  },\n\n  get(cname) {\n    var name = cname + '=';\n    var ca = document.cookie.split(';');\n    for (var i = 0; i < ca.length; i += 1) {\n      var c = ca[i];\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return '';\n  }\n};\n\nmodule.exports = cookies;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"home__MseGd\"};","module.exports = require(\"preact\");","import { h } from 'preact';\nimport { Link } from 'preact-router/match';\nimport style from './style.css';\n\nconst Header = () => (\n\t<header class={style.header}>\n\t\t<h1>Preact App</h1>\n\t\t<nav>\n\t\t\t<Link activeClassName={style.active} href=\"/\">Home</Link>\n\t\t\t<Link activeClassName={style.active} href=\"/game\">Game</Link>\n\t\t\t{/* <Link activeClassName={style.active} href=\"/profile/john\">John</Link> */}\n\t\t</nav>\n\t</header>\n);\n\nexport default Header;\n","import { h } from 'preact';\nimport style from './style.css';\n\nconst Home = () => (\n\t<div class={style.home}>\n\t\t<h1>Home</h1>\n\t\t<p>This is the Home component.</p>\n\t</div>\n);\n\nexport default Home;\n","import { createContext } from 'preact';\n\nconst GameContext = createContext('test');\nexport default GameContext;","/////////////general////////////////////// \nvar objectToString = function (obj) {\n  var cache = [];\n  return JSON.stringify(obj, function (key, value) {\n    if (typeof value === 'object' && value !== null) {\n      if (cache.indexOf(value) !== -1) {\n        // Circular reference found, discard key\n        return;\n      }\n      // Store value in our collection\n      cache.push(value);\n    }\n    return value;\n  });\n};\n\n///////////////////evalgame////////////////\nvar evalFuncs = {\n  getPieceValues: function (dbTable) {\n\n    var result = {\n      wVal: 0,\n      bVal: 0\n    };\n\n    var table = dbTable.table;\n\n    table.forEach(function (x) {\n      x.forEach(function (y) {\n        switch (y[0]) {\n          case 1:\n\n            result.bVal += y[1];\n\n            break;\n\n          case 2:\n\n            result.wVal += y[1];\n\n            break;\n\n          default:\n            break;\n        }\n      });\n    });\n\n    return result;\n\n  },\n\n  shouldIDraw: function (dbTable) {\n    var pieceVals = this.getPieceValues(dbTable);\n\n    if (dbTable.wNext) {\n      if (pieceVals.wVal < pieceVals.bVal) return true;\n    } else {\n      if (pieceVals.wVal > pieceVals.bVal) return true;\n    }\n\n    return false;\n  },\n\n  checkIfLooped: function (newTable, allPastTables) {\n\n    var seenCount = 0;\n    var thisState = createState(newTable);\n\n    allPastTables.forEach(function (pastTable) {\n      if (pastTable === thisState) seenCount += 1;\n    });\n\n    return seenCount;\n\n  },\n};\n\n\n\nfunction canIMove(winTable, winColor) {\n  var winRetMoves = [];\n  getAllMoves(winTable, winColor).forEach(function (thisMove) { //get all his moves in array of strings\n    winRetMoves.push(coordsToMoveCoords(thisMove[0], thisMove[1], thisMove[2], thisMove[3]));\n  });\n\n  for (var i = winRetMoves.length - 1; i >= 0; i -= 1) { //sakkba \n    if (captured(moveIt(winRetMoves[i], winTable), winColor)) { //sakkba lepne valaszkent\t//moveit retmove ittis ottis\n      winRetMoves.splice(i, 1);\n    }\n  }\n  return (winRetMoves.length > 0);\n}\n\n\nfunction checkIfFinished(dbTable) {\n\n  var result = {\n    goOn: true,\n    result: {}\n  };\n\n  if (!canIMove(dbTable.table, dbTable.wNext) || dbTable.moveCount > 300) { // for learner, finish game at 300 moves\n\n    result.goOn = false;\n    result.looped = dbTable.moveCount > 300;\n\n    dbTable.gameIsOn = false;\n    dbTable.result = {\n\n      blackWon: false,\n      whiteWon: false,\n      isDraw: false,\n\n      whiteValue: 0,\n      blackValue: 0,\n\n      totalMoves: 0,\n      moveLog: dbTable.moves,\n\n      _id: dbTable._id\n\n    };\n\n    if (captured(dbTable.table, dbTable.wNext)) {\n\n      if (dbTable.wNext) {\n\n        dbTable.result.blackWon = true;\n\n      } else {\n        dbTable.result.whiteWon = true;\n\n      }\n\n    } else {\n      dbTable.result.isDraw = true;\n    }\n\n    var pieceVals = evalFuncs.getPieceValues(dbTable);\n\n    dbTable.result.whiteValue = pieceVals.wVal;\n    dbTable.result.blackValue = pieceVals.bVal;\n\n    dbTable.result.totalMoves = dbTable.moveCount;\n\n  }\n\n  result.result = dbTable.result;\n\n  return result;\n\n}\n\n/////////////////////// from old ai //////////////////////////\n\nfunction getMcFromMv(modVal) {\n\n  var modConst = 1;\n\n  if (modVal <= 50) {\n    modConst = modVal / 50;\n  } else {\n    modConst = 50 / (100 - modVal);\n  }\n  modConst = Math.pow(modConst, 3);\n\n  return modConst;\n\n}\n\nfunction getMvFromMc(modConst) {\n\n  modConst = Math.pow(modConst, 1 / 3);\n\n  var modVal = 0;\n\n  if (modConst <= 1) {\n    modVal = modConst * 50;\n  } else {\n    modVal = 100 - 50 / modConst;\n  }\n\n  return modVal;\n\n}\n\nexport function addMovesToTable(originalTable, whiteNext, dontClearInvalid, returnMoveCoords) {\n  var myCol = whiteNext ? 2 : 1;\n  for (var i = 0; i < 8; i += 1) {\n    for (var j = 0; j < 8; j += 1) {\n      if (originalTable[i][j][0] === myCol) {\n        // var returnMoveCoords = [];\n        originalTable[i][j][5] = canMove(i, j, whiteNext, originalTable, false, false, [0], dontClearInvalid, returnMoveCoords); //:  canMove(k, l, isWhite, moveTable, speedy, dontProt, hitSumm, dontRemoveInvalid) { //, speedy) {\n      } else {\n        originalTable[i][j][5] = [];\n      }\n    }\n  }\n  return originalTable;\n}\n\nfunction getTableData(origTable, isWhite, oppKingPos) { //, rtnSimpleValue) {\n\n  var lSancVal = 0;\n  var rSancVal = 0;\n\n  var tableValue = 0;\n\n  var rtnMyHitSum = [0]; //this pointer will be passed to canmove \n  var rtnHisHitSum = [0];\n\n  var rtnMyBestHit = 0;\n  var rtnHisBestHit = 0;\n\n  var rtnHisMoveCount = 0;\n\n  var rtnPushHimBack = 0;\n\n  var rtnApproachTheKing = 0;\n\n  if (oppKingPos === undefined) oppKingPos = whereIsTheKing(origTable, !isWhite);\n\n  var origColor = 1;\n  if (isWhite) origColor = 2;\n\n  if (isWhite && origTable[4][0][3]) { //we play with white and have not moved the king yet\n\n    var sancolhat = false;\n\n    if (origTable[0][0][3]) {\n      lSancVal += 3; //unmoved rook worth more than moved\n      sancolhat = true;\n\n      if (origTable[3][0][0] === 0) lSancVal += 1; //trying to empty between\n      if (origTable[2][0][0] === 0) lSancVal += 3;\n      if (origTable[1][0][0] === 0) lSancVal += 1;\n\n      if (origTable[2][1][0] === 2) { //trying to keep my pieces  there to cover\n        lSancVal += 1;\n        if (origTable[2][1][1] === 1) lSancVal += 4;\n      }\n      if (origTable[1][1][0] === 2) { //trying to keep my pieces  there to cover\n        lSancVal += 1;\n        if (origTable[1][1][1] === 1) lSancVal += 4;\n      }\n      if (origTable[0][1][0] === 2) { //trying to keep my pieces  there to cover\n        lSancVal += 1;\n        if (origTable[0][1][1] === 1) lSancVal += 4;\n      }\n\n    }\n\n    if (origTable[7][0][3]) {\n      sancolhat = true;\n      rSancVal += 3;\n\n      if (origTable[6][0][0] === 0) rSancVal += 1;\n      if (origTable[5][0][0] === 0) rSancVal += 3;\n\n      if (origTable[7][1][0] === 2) { //trying to keep my pieces  there to cover\n        rSancVal += 1;\n        if (origTable[7][1][1] === 1) rSancVal += 4;\n      }\n      if (origTable[6][1][0] === 2) { //trying to keep my pieces  there to cover\n        rSancVal += 1;\n        if (origTable[6][1][1] === 1) rSancVal += 4;\n      }\n      if (origTable[5][1][0] === 2) { //trying to keep my pieces  there to cover\n        rSancVal += 1;\n        if (origTable[5][1][1] === 1) rSancVal += 4;\n      }\n\n    }\n\n    if (sancolhat) {\n      if (origTable[3][1][1] === 1 && origTable[3][1][0] === 2) lSancVal -= 6; //try to move d2 or e2 first\n      if (origTable[4][1][1] === 1 && origTable[4][1][0] === 2) rSancVal -= 6;\n\n      if (origTable[2][0][1] === 2 && origTable[2][0][0] === 2) lSancVal -= 6; //try to move out bishops\n      if (origTable[5][0][1] === 2 && origTable[5][0][0] === 2) rSancVal -= 6;\n    }\n\n  }\n\n  if (!isWhite && origTable[4][7][3]) { //we play with black and have not moved the king yet\n    sancolhat = false;\n\n    if (origTable[0][7][3]) {\n      sancolhat = true;\n      lSancVal += 3; //unmoved rook worth more than moved\n\n      if (origTable[3][7][0] === 0) lSancVal += 1;\n      if (origTable[2][7][0] === 0) lSancVal += 3;\n      if (origTable[1][7][0] === 0) lSancVal += 1;\n\n      if (origTable[2][6][0] === 1) { //trying to keep my pieces  there to cover\n        lSancVal += 1;\n        if (origTable[2][6][1] === 1) lSancVal += 4;\n      }\n      if (origTable[1][6][0] === 1) { //trying to keep my pieces  there to cover\n        lSancVal += 1;\n        if (origTable[1][6][1] === 1) lSancVal += 4;\n      }\n      if (origTable[0][6][0] === 1) { //trying to keep my pieces  there to cover\n        lSancVal += 1;\n        if (origTable[0][6][1] === 1) lSancVal += 4;\n      }\n    }\n\n    if (origTable[7][7][3]) {\n      sancolhat = true;\n      rSancVal += 3;\n\n      if (origTable[6][7][0] === 0) rSancVal += 1;\n      if (origTable[5][7][0] === 0) rSancVal += 3;\n\n      if (origTable[7][6][0] === 1) { //trying to keep my pieces  there to cover\n        rSancVal += 1;\n        if (origTable[7][6][1] === 1) rSancVal += 4;\n      }\n      if (origTable[6][6][0] === 1) { //trying to keep my pieces  there to cover\n        rSancVal += 1;\n        if (origTable[6][6][1] === 1) rSancVal += 4;\n      }\n      if (origTable[5][6][0] === 1) { //trying to keep my pieces  there to cover\n        rSancVal += 1;\n        if (origTable[5][6][1] === 1) rSancVal += 4;\n      }\n\n    }\n    //\t\n    if (sancolhat) {\n      if (origTable[3][6][1] === 1 && origTable[3][6][0] === 1) lSancVal -= 4;\n      if (origTable[4][6][1] === 1 && origTable[4][6][0] === 1) rSancVal -= 4;\n\n      if (origTable[2][7][1] === 2 && origTable[2][7][0] === 1) lSancVal -= 4;\n      if (origTable[5][7][1] === 2 && origTable[5][7][0] === 1) rSancVal -= 4;\n\n    }\n\n  }\n  var myMostMoved = 0;\n\n  var getToMiddle = 0;\n  for (var lookI = 0; lookI < 8; lookI += 1) { //\n    for (var lookJ = 0; lookJ < 8; lookJ += 1) { //look through the table\n\n      if (origTable[lookI][lookJ][0] === origColor) { //ha sajat babum\n\n        //below:\tminnel nagyobb erteku babum minnel kozelebb az ellenfel kiralyahoz\n\n        rtnApproachTheKing += ((7 - Math.abs(oppKingPos[0] - lookI)) + (7 - Math.abs(oppKingPos[1] - lookJ))) * origTable[lookI][lookJ][1];\n\n        canMove(lookI, lookJ, isWhite, origTable, true, true, rtnMyHitSum); //this can give back the moves, should use it\n        if (origTable[lookI][lookJ][2] > myMostMoved) myMostMoved = origTable[lookI][lookJ][2]; //get the highest number any piece moved\n\n        if (isWhite) {\n          rtnPushHimBack += lookJ;\n        } else {\n          rtnPushHimBack += 7 - lookJ;\n        }\n\n        tableValue += origTable[lookI][lookJ][1];\n\n      } else {\n\n        if (!(origTable[lookI][lookJ][0] === 0)) { //ha ellenfele\n\n          rtnHisMoveCount += (canMove(lookI, lookJ, !isWhite, origTable, true, true, rtnHisHitSum)\n            .length - 2);\n          if (!isWhite) {\n            rtnPushHimBack -= lookJ / 10;\n          } else {\n            rtnPushHimBack -= (7 - lookJ) / 10;\n          }\n          //or this tblevalue:\n          tableValue -= origTable[lookI][lookJ][1];\n        }\n      }\n    }\n  }\n\n  return [tableValue, rtnMyHitSum[0], rtnHisHitSum[0], // rtnHisMoveCount, \n    lSancVal, rSancVal, getToMiddle, rtnPushHimBack, myMostMoved, rtnApproachTheKing\n  ];\n\n}\n\nfunction findMyPieces(origTable, isWhite) {\n  var myTempPieces = [];\n  var origColor = isWhite ? 2 : 1;\n\n  for (var lookI = 0; lookI < 8; lookI += 1) { //\n    for (var lookJ = 0; lookJ < 8; lookJ += 1) { //look through the table\n      if (origTable[lookI][lookJ][0] === origColor) { //ha sajat babum\n        myTempPieces[myTempPieces.length] = [lookI, lookJ, origTable[lookI][lookJ][1]]; //itt kene szamitott erteket is adni a babuknak \n      }\n    }\n  }\n  return [0, myTempPieces]; //, hisTempPieces, rtnMyHitSum[0], rtnHisHitSum[0], rtnMyMovesCount] //returnArray // elso elem az osszes babu ertekenek osszge, aztan babkuk\n}\n\nfunction getAllMoves(tableToMoveOn, whiteNext, hitItsOwn, allHitSum, removeCaptured) { //shouldn't always check hitsum\n  var origColor = whiteNext ? 2 : 1;\n  var thisArray = [];\n\n  if (hitItsOwn) {\n    whiteNext = !whiteNext;\n  }\n  var hitSumPart = [0];\n\n  for (var lookI = 0; lookI < 8; lookI += 1) { //\n    for (var lookJ = 0; lookJ < 8; lookJ += 1) { //look through the table\n      if (tableToMoveOn[lookI][lookJ][0] === origColor) { //ha sajat babum\n        canMove(lookI, lookJ, whiteNext, tableToMoveOn, !removeCaptured, true, hitSumPart) //true,true for speedy(sakkba is lep),dontProtect\n          .forEach(function (stepItem) {\n            thisArray[thisArray.length] = [lookI, lookJ, stepItem[0], stepItem[1]];\n          });\n      }\n    }\n  }\n  return thisArray;\n}\n\nfunction protectPieces(originalTable, whitePlayer) {\n  var myCol = 1;\n  if (whitePlayer) myCol = 2; //myCol is 2 when white\n  var protectedSum = 0;\n  getAllMoves(originalTable, whitePlayer, true)\n    . //moves include to hit my own \n    //true stands for letMeHitMyOwn\n\n    forEach(function (thisMoveCoords) {\n      //we'll use the 2nd part of the moves [2][3]\n      if (originalTable[thisMoveCoords[2]][thisMoveCoords[3]][0] === myCol) { //if i have sg there\n        originalTable[thisMoveCoords[2]][thisMoveCoords[3]][6] = true; //that must be protected\n\n        if (originalTable[thisMoveCoords[0]][thisMoveCoords[1]][1] === 9) {\n          protectedSum += (9 - originalTable[thisMoveCoords[2]][thisMoveCoords[3]][1]) * 2; //king protects double\n\n        } else {\n\n          protectedSum += 9 - originalTable[thisMoveCoords[2]][thisMoveCoords[3]][1];\n        }\n\n      }\n    });\n  return protectedSum;\n}\n\nfunction protectTable(table, myCol) {\n  return protectPieces(table, myCol) - protectPieces(table, !myCol);\n}\n\nfunction whereIsTheKing(table, wn) {\n  var myCol = 1;\n  if (wn) myCol += 1; //myCol is 2 when white\n\n  for (var i = 0; i < 8; i += 1) {\n    for (var j = 0; j < 8; j += 1) {\n      if (table[i][j][1] === 9 && table[i][j][0] === myCol) {\n        //itt a kiraly\n        return [i, j];\n      }\n    }\n  }\n}\n\nfunction canMove(k, l, isWhite, moveTable, speedy, dontProt, hitSumm = [0], dontRemoveInvalid, returnMoveCoords) { //, speedy) {\n\n  var what = moveTable[k][l][1];\n  var possibleMoves = [];\n  var scndHitSum = [0];\n  switch (what) {\n    case 1:\n      possibleMoves = pawnCanMove(k, l, isWhite, moveTable, hitSumm);\n      break;\n    case 2:\n      possibleMoves = bishopCanMove(k, l, isWhite, moveTable, hitSumm);\n      break;\n    case 3:\n      possibleMoves = horseCanMove(k, l, isWhite, moveTable, hitSumm);\n      break;\n    case 4:\n      possibleMoves = rookCanMove(k, l, isWhite, moveTable, hitSumm);\n      break;\n    case 5:\n      possibleMoves = queenCanMove(k, l, isWhite, moveTable, hitSumm);\n      break;\n    case 9:\n      possibleMoves = kingCanMove(k, l, isWhite, moveTable, hitSumm);\n      break;\n    default:\n  }\n\n  if (typeof returnMoveCoords !== 'undefined') { //and not undefined..\n    possibleMoves.forEach(function (move) {\n      returnMoveCoords[returnMoveCoords.length] = coordsToMoveCoords(k, l, move[0], move[1]);\n    });\n\n  }\n\n  if (!speedy) { //     lefut.\n    for (var i = possibleMoves.length - 1; i >= 0; i -= 1) { //sakkba nem lephetunk\n      if (captured(moveIt(coordsToMoveCoords(k, l, possibleMoves[i][0], possibleMoves[i][1]), moveTable, dontProt), isWhite)) { //sakkba lepnenk\n        possibleMoves.splice(i, 1);\n      }\n    }\n\n    if (what === 9 && moveTable[k][l][3]) { //lesznek sanc lepesek is a possibleMoves tombben: kiraly nem mozdult meg\n\n      if (captured(moveTable, isWhite)) { // de sakkban allunk\n        for (var spliceCount = possibleMoves.length - 1; spliceCount >= 0; spliceCount -= 1) {\n          if (possibleMoves[spliceCount][1] === l && (possibleMoves[spliceCount][0] === k - 2 || possibleMoves[spliceCount][0] === k + 2)) {\n            possibleMoves.splice(spliceCount, 1); //remove\n          }\n        }\n      }\n\n      // remove the sakkot atugrani sem er sanc\n\n      var removeKmin2 = true; //alapbol leszedne\n      var removeKplus2 = true;\n\n      for (var i = possibleMoves.length - 1; i >= 0; i -= 1) { //\n        if (possibleMoves[i][1] === l && possibleMoves[i][0] === k - 1) removeKmin2 = false; //de ha van koztes lepes, ne szedd le\n        if (possibleMoves[i][1] === l && possibleMoves[i][0] === k + 1) removeKplus2 = false;\n      }\n\n      for (var i = possibleMoves.length - 1; i >= 0; i -= 1) { //itt szedi le a sanclepeseket\n        if (possibleMoves[i][1] === l &&\n          ((possibleMoves[i][0] === k - 2 && removeKmin2) ||\n            (possibleMoves[i][0] === k + 2 && removeKplus2))) {\n          possibleMoves.splice(i, 1);\n        }\n      }\n    }\n  }\n  return possibleMoves;\n}\n\nfunction whatsThere(i, j, aiTable) {\n  if (i > -1 && j > -1 && i < 8 && j < 8) {\n    return aiTable[i][j];\n  }\n  return [];\n}\n\nfunction pushAid(hitSummmm = [0], canMoveTo, x, y, hanyadik, milegyen, fromTable, isWhite, whatHits) {\n  if (whatsThere(x, y, fromTable)[hanyadik] !== milegyen) return false;\n\n  const target = fromTable[x][y];\n\n  canMoveTo[canMoveTo.length] = [x, y, target[1]];\n\n  var thisHit = 0;\n  if (target[6]) { //alert('protectedHit')\t//ha protectedre lep\n    thisHit = target[1] - //thisHitbol kivonja amivel lep\n      whatHits; //* whatHitsConst\n    if (thisHit < 0) thisHit = 0; //negaive is 0\n  } else {\n    thisHit = target[1]; //normal hivalue\n  }\n\n  if (hitSummmm[0] < thisHit) hitSummmm[0] = thisHit;\n  return true;\n}\n\n\nfunction pushAidA(hitSummmm, canMoveTo, x, y, fromTable, isWhite, whatHits) {\n  const pieceThere = whatsThereNN(x, y, fromTable);\n  if (pieceThere[0] === 3) return false;  // off the table, dont go further\n\n  const myCol = isWhite ? 2 : 1;\n  const target = fromTable[x][y];\n\n  if (target[0] === myCol) return false; // my piece, can't go there, dont go further\n\n  // opponents piece or empty sqare there, can move there\n  canMoveTo[canMoveTo.length] = [x, y, target[1]];\n\n  if (target[0] === 0) return true; // can go further if it was empty space, no hit\n\n  // we found a hit\n  var thisHit = target[1]; //normal hivalue\n  if (target[6]) thisHit -= whatHits; // protected\n\n  if (hitSummmm[0] < thisHit) hitSummmm[0] = thisHit;\n\n  return false; // can't go further\n}\n\nfunction pushAidP(hitSummmm, canMoveTo, x, y, fromTable, isWhite, whatHits) {\n  if (fromTable[x][y][0] === 0) canMoveTo[canMoveTo.length] = [x, y, 0];\n}\n\n\nfunction pushAidPH(hitSummmm, canMoveTo, x, y, fromTable, isWhite, whatHits) {\n  const nc = isWhite ? 1 : 2;\n  // if (x < 0 || x > 7 || y < 0 || y > 7) console.log(arguments)\n  if (x > 0 && fromTable[x - 1][y][0] === nc) canMoveTo[canMoveTo.length] = [x - 1, y, fromTable[x - 1][y][1]]\n  if (x < 7 && fromTable[x + 1][y][0] === nc) canMoveTo[canMoveTo.length] = [x + 1, y, fromTable[x + 1][y][1]]\n\n  if (fromTable[x][y][0] === 0) {\n    canMoveTo[canMoveTo.length] = [x, y, 0];\n    return true;\n  }\n}\n\n\nfunction rookCanMove(k, l, isWhite, moveTable, hitSummm = [0]) {\n  var canMoveTo = [];\n  var i = k + 1;\n  while (pushAidA(hitSummm, canMoveTo, i, l, moveTable, isWhite, 4)) i += 1;\n  i = k - 1;\n  while (pushAidA(hitSummm, canMoveTo, i, l, moveTable, isWhite, 4)) i -= 1;\n  i = l + 1;\n  while (pushAidA(hitSummm, canMoveTo, k, i, moveTable, isWhite, 4)) i += 1;\n  i = l - 1;\n  while (pushAidA(hitSummm, canMoveTo, k, i, moveTable, isWhite, 4)) i -= 1;\n  return canMoveTo;\n}\n\nfunction bishopCanMove(k, l, isWhite, moveTable, hitSummm = [0]) {\n  var canMoveTo = [];\n  var i = k + 1;\n  var j = l + 1;\n  while (pushAidA(hitSummm, canMoveTo, i, j, moveTable, isWhite, 2)) {\n    i += 1;\n    j += 1;\n  }\n  i = k - 1;\n  j = l - 1;\n  while (pushAidA(hitSummm, canMoveTo, i, j, moveTable, isWhite, 2)) {\n    i -= 1;\n    j -= 1;\n  }\n  i = k + 1;\n  j = l - 1;\n  while (pushAidA(hitSummm, canMoveTo, i, j, moveTable, isWhite, 2)) {\n    i += 1;\n    j -= 1;\n  }\n  i = k - 1;\n  j = l + 1;\n  while (pushAidA(hitSummm, canMoveTo, i, j, moveTable, isWhite, 2)) {\n    i -= 1;\n    j += 1;\n  }\n  return canMoveTo;\n}\n\n\nfunction queenCanMove(k, l, isWhite, moveTable, hitSummm = [0]) {\n  var canMoveTo = [];\n  var i = k + 1;\n  var j = l + 1;\n  while (pushAidA(hitSummm, canMoveTo, i, j, moveTable, isWhite, 5)) {\n    i += 1;\n    j += 1;\n  }\n  i = k - 1;\n  j = l - 1;\n  while (pushAidA(hitSummm, canMoveTo, i, j, moveTable, isWhite, 5)) {\n    i -= 1;\n    j -= 1;\n  }\n  i = k + 1;\n  j = l - 1;\n  while (pushAidA(hitSummm, canMoveTo, i, j, moveTable, isWhite, 5)) {\n    i += 1;\n    j -= 1;\n  }\n  i = k - 1;\n  j = l + 1;\n  while (pushAidA(hitSummm, canMoveTo, i, j, moveTable, isWhite, 5)) {\n    i -= 1;\n    j += 1;\n  }\n  i = k + 1;\n  while (pushAidA(hitSummm, canMoveTo, i, l, moveTable, isWhite, 5)) i += 1;\n  i = k - 1;\n  while (pushAidA(hitSummm, canMoveTo, i, l, moveTable, isWhite, 5)) i -= 1;\n  i = l + 1;\n  while (pushAidA(hitSummm, canMoveTo, k, i, moveTable, isWhite, 5)) i += 1;\n  i = l - 1;\n  while (pushAidA(hitSummm, canMoveTo, k, i, moveTable, isWhite, 5)) i -= 1;\n  return canMoveTo;\n}\n\n\nfunction pawnCanMove(k, l, isWhite, moveTable, hitSummm) {\n  var canMoveTo = [];\n\n  if (isWhite) {\n    if (pushAidPH(hitSummm, canMoveTo, k, l + 1, moveTable, true, 1) && l === 1) {\n      pushAidP(hitSummm, canMoveTo, k, l + 2, moveTable, true, 1);\n    }\n\n    //en pass\n    if (k > 0 && moveTable[k - 1][l][3]) {\n      pushAidA(hitSummm, canMoveTo, k - 1, l + 1, moveTable, true, 1);\n    }\n    if (k < 7 && moveTable[k + 1][l][3]) {\n      pushAidA(hitSummm, canMoveTo, k + 1, l + 1, moveTable, true, 1);\n    }\n    return canMoveTo;\n  }\n\n  if (pushAidPH(hitSummm, canMoveTo, k, l - 1, moveTable, false, 1) && l === 6) {\n    pushAidP(hitSummm, canMoveTo, k, l - 2, moveTable, false, 1);\n  }\n\n  //en pass\n  if (k > 0 && moveTable[k - 1][l][3]) {\n    pushAidA(hitSummm, canMoveTo, k - 1, l - 1, moveTable, false, 1);\n  }\n  if (k < 7 && moveTable[k + 1][l][3]) {\n    pushAidA(hitSummm, canMoveTo, k + 1, l - 1, moveTable, false, 1);\n  }\n  return canMoveTo;\n}\n\nfunction kingCanMove(k, l, isWhite, moveTable, hitSummm) {\n\n  var canMoveTo = [];\n\n  pushAidA(hitSummm, canMoveTo, k + 1, l + 1, moveTable, isWhite, 9);\n  pushAidA(hitSummm, canMoveTo, k - 1, l + 1, moveTable, isWhite, 9);\n  pushAidA(hitSummm, canMoveTo, k + 1, l - 1, moveTable, isWhite, 9);\n  pushAidA(hitSummm, canMoveTo, k - 1, l - 1, moveTable, isWhite, 9);\n  pushAidA(hitSummm, canMoveTo, k + 1, l, moveTable, isWhite, 9);\n  pushAidA(hitSummm, canMoveTo, k - 1, l, moveTable, isWhite, 9);\n  pushAidA(hitSummm, canMoveTo, k, l + 1, moveTable, isWhite, 9);\n  pushAidA(hitSummm, canMoveTo, k, l - 1, moveTable, isWhite, 9);\n\n  //sanc\n  if (moveTable[k][l][3]) { //if the king hasnt moved yet, \n\n    // !!!TODO!!!: ha nincs sakkban, nem is ugrik at sakkot\n\n    if (moveTable[0][l][3] && // unmoved rook on [0][l]\n      moveTable[1][l][0] === 0 && moveTable[2][l][0] === 0 && moveTable[3][l][0] === 0) { //empty between\n      pushAidA(hitSummm, canMoveTo, 2, l, moveTable, isWhite, 9); //mark that cell if empty\n    }\n    if (moveTable[7][l][3] && moveTable[5][l][0] === 0 && moveTable[6][l][0] === 0) { //empty between\n      pushAidA(hitSummm, canMoveTo, 6, l, moveTable, isWhite, 9); //mark that cell if empty\n    }\n  }\n  return canMoveTo;\n}\n\nfunction horseCanMove(k, l, isWhite, moveTable, hitSummm) {\n  var canMoveTo = [];\n  pushAidA(hitSummm, canMoveTo, k + 1, l + 2, moveTable, isWhite, 3);\n  pushAidA(hitSummm, canMoveTo, k + 1, l - 2, moveTable, isWhite, 3);\n  pushAidA(hitSummm, canMoveTo, k - 1, l + 2, moveTable, isWhite, 3);\n  pushAidA(hitSummm, canMoveTo, k - 1, l - 2, moveTable, isWhite, 3);\n  pushAidA(hitSummm, canMoveTo, k + 2, l + 1, moveTable, isWhite, 3);\n  pushAidA(hitSummm, canMoveTo, k + 2, l - 1, moveTable, isWhite, 3);\n  pushAidA(hitSummm, canMoveTo, k - 2, l + 1, moveTable, isWhite, 3);\n  pushAidA(hitSummm, canMoveTo, k - 2, l - 1, moveTable, isWhite, 3);\n  return canMoveTo;\n}\n\nfunction createState(table) {\n  // make this string and concat!!!!!!!!!!!!!!!!!!!!\n  var stateToRemember = [];\n  for (var i = 0; i < 8; i += 1) {\n    for (var j = 0; j < 8; j += 1) {\n\n      var x = 10 * (~~table[i][j][0]) + (~~table[i][j][1]) + 55; //  B vagy nagyobb\n      if (x < 65) x = 65; // ez egy nagy A\n\n      stateToRemember[8 * i + j] = String.fromCharCode(x);\n    }\n  }\n  return stateToRemember.join('');\n}\n\nfunction getPushString(table, moveCoords) {\n\n\n  const whatM = table[moveCoords[0]][moveCoords[1]];\n\n  // var cWhatMoves = String(whatM[0]); //color of whats moving\n  var pWhatMoves = String(whatM[1]); //piece\n\n  var whatsHit = table[moveCoords[2]][moveCoords[3]][0].toString() + //color of whats hit\n    table[moveCoords[2]][moveCoords[3]][1]; //piece\n\n  if (whatM[1] === 1 && //paraszt\n    moveCoords[0] !== moveCoords[2] && //keresztbe\n    whatsHit === '00' //uresre\n  ) { //akkor tuti enpass\n    if (whatM[0] === 1) { //fekete\n      whatsHit = '21'; //akkor feher parasztot ut\n    } else {\n      whatsHit = '11';\n    }\n\n  }\n\n  return whatM[0].toString() + whatM[1] + coordsToMoveString(moveCoords) + whatsHit;\n\n}\n\nexport function moveInTable(moveCoords, dbTable, isLearner) {\n  // console.log(new Error().stack)\n  // console.log(arguments)\n\n  var toPush = getPushString(dbTable.table, moveCoords); //piece\n\n  dbTable.moves.push(toPush);\n\n  dbTable.table = moveIt(moveCoords, dbTable.table); //\t<-= 1-= 1moves it\n\n  dbTable.wNext = !dbTable.wNext;\n\n  dbTable.pollNum += 1;\n\n  dbTable.moveCount += 1;\n\n  dbTable.table = addMovesToTable(dbTable.table, dbTable.wNext);\n\n  var pushThis = createState(dbTable.table);\n\n  dbTable.allPastTables.push(pushThis);\n\n  return dbTable;\n\n}\n\nfunction captured(table, color) {\n\n  var tempMoves = [];\n\n  var myCol = 1;\n\n  if (color) myCol += 1; //myCol is 2 when white\n\n  for (var i = 0; i < 8; i += 1) {\n    for (var j = 0; j < 8; j += 1) {\n\n      if (table[i][j][1] === 9 && table[i][j][0] === myCol) {\n        //itt a kiraly\n\n        tempMoves = bishopCanMove(i, j, color, table, [0]);\n\n        for (var tempMoveCount = 0; tempMoveCount < tempMoves.length; tempMoveCount += 1) {\n          if (table[tempMoves[tempMoveCount][0]][tempMoves[tempMoveCount][1]][1] === 5 ||\n            table[tempMoves[tempMoveCount][0]][tempMoves[tempMoveCount][1]][1] === 2) {\n            return true;\n          }\n\n        }\n\n        tempMoves = rookCanMove(i, j, color, table, [0]);\n\n        for (var tempMoveCount = 0; tempMoveCount < tempMoves.length; tempMoveCount += 1) {\n          if (table[tempMoves[tempMoveCount][0]][tempMoves[tempMoveCount][1]][1] === 5 ||\n            table[tempMoves[tempMoveCount][0]][tempMoves[tempMoveCount][1]][1] === 4) {\n            return true;\n          }\n\n        }\n\n        tempMoves = horseCanMove(i, j, color, table, [0]);\n\n        for (var tempMoveCount = 0; tempMoveCount < tempMoves.length; tempMoveCount += 1) {\n          if (table[tempMoves[tempMoveCount][0]][tempMoves[tempMoveCount][1]][1] === 3) {\n            return true;\n          }\n\n        }\n\n        if (color ? j < 7 : j > 0) {\n\n          tempMoves = pawnCanMove(i, j, color, table, [0]);\n\n          for (var tempMoveCount = 0; tempMoveCount < tempMoves.length; tempMoveCount += 1) {\n            if (table[tempMoves[tempMoveCount][0]][tempMoves[tempMoveCount][1]][1] === 1) {\n              return true;\n            }\n\n          }\n\n        }\n\n        tempMoves = kingCanMove(i, j, color, table, [0]);\n\n        for (var tempMoveCount = 0; tempMoveCount < tempMoves.length; tempMoveCount += 1) {\n          if (table[tempMoves[tempMoveCount][0]][tempMoves[tempMoveCount][1]][1] === 9) {\n            return true;\n          }\n\n        }\n\n      }\n    }\n  }\n  return false;\n}\n\nfunction moveIt(moveCoords, intable, dontProtect, hitValue) {\n\n  if (hitValue === undefined) var hitValue = [0];\n  var thistable = [];\n\n  for (var i = 0; i < 8; i += 1) {\n    thistable[i] = new Array(8);\n    for (var j = 0; j < 8; j += 1) {\n      // thistable[i][j] = intable[i][j].slice(0, 4)  //crashes in cordova, typedArray has no slice...\n      thistable[i][j] = new Array(4);\n      for (var k = 0; k < 4; k += 1) thistable[i][j][k] = intable[i][j][k];\n    }\n  }\n  //itt indil sanc bastyatolas\n  // console.log(arguments)\n  if (thistable[moveCoords[0]][moveCoords[1]][1] === 9 && thistable[moveCoords[0]][moveCoords[1]][3]) {\n    // moving a king that hasnt moved yet\n    switch (moveCoords[2]) {\n      case 2:\n        switch (moveCoords[3]) {\n          case 0:\n            thistable = moveIt([0, 0, 3, 0], thistable);\n            break;\n          case 7:\n            thistable = moveIt([0, 7, 3, 7], thistable);\n            break;\n          default:\n        }\n        break;\n      case 6:\n        switch (moveCoords[3]) {\n          case 0:\n            thistable = moveIt([7, 0, 5, 0], thistable);\n            break;\n          case 7:\n            thistable = moveIt([7, 7, 5, 7], thistable);\n            break;\n          default:\n        }\n        break;\n      default:\n    }\n  }\n  //es itt a vege\n\n  //itt indul en passant mark the pawn to be hit\n\n  //unmark all first\n\n  for (let ij = 0; ij < 8; ij += 1) {\n\n    thistable[ij][3][3] = false; //can only be in row 3 or 4\n\n    thistable[ij][4][3] = false;\n\n  }\n\n  if (thistable[moveCoords[0]][moveCoords[1]][1] === 1 &&\n    ((moveCoords[1] === 1 && moveCoords[3] === 3) ||\n      (moveCoords[1] === 6 && moveCoords[3] === 4))) { //ha paraszt kettot lep\n\n    thistable[moveCoords[0]][moveCoords[1]][3] = true; //[3]true for enpass\n  }\n  //es itt a vege\n\n  //indul en passt lepett\n  var enPass = false;\n  if (\n    thistable[moveCoords[0]][moveCoords[1]][1] === 1 && //paraszt\n    thistable[moveCoords[2]][moveCoords[3]][0] === 0 && //uresre\n    (moveCoords[0] !== moveCoords[2]) //keresztbe\n  ) {\n    enPass = true;\n    thistable[moveCoords[2]][moveCoords[3]] = thistable[moveCoords[2]][moveCoords[1]];\n    thistable[moveCoords[2]][moveCoords[1]] = [0, 0, false, false, false]; //ures\n  }\n\n  hitValue[0] = thistable[moveCoords[2]][moveCoords[3]][1]; //normal hivalue\n\n  if (thistable[moveCoords[0]][moveCoords[1]][1] === 1 && ( //ha paraszt es\n    // (thistable[moveCoords[0]][moveCoords[1]][0] === 2 && //es feher\n    moveCoords[3] === 7 || //es 8asra lep vagy\n    // (thistable[moveCoords[0]][moveCoords[1]][0] === 1 && //vagy fekete\n    moveCoords[3] === 0 //1re\n  )) {\n    //AKKOR\n    thistable[moveCoords[0]][moveCoords[1]][1] = 5; //kiralyno lett\n    hitValue[0] += 4; //this move worth the difference betwwen queen's and pawn's value (5-1)\n  }\n\n  // // if(enPass) {\n  // // \thitValue = 0.99\n  // // } else {\n  // hitValue[0] = thistable[moveCoords[2]][moveCoords[3]][1]; //normal hivalue\n  //   //- thistable[moveCoords[0]][moveCoords[1]][1] / 100 //whathits\n  //   //}\n\n  thistable[moveCoords[0]][moveCoords[1]][2] += 1; //times moved\n\n  thistable[moveCoords[2]][moveCoords[3]] =\n    thistable[moveCoords[0]][moveCoords[1]];\n  thistable[moveCoords[0]][moveCoords[1]] = [0, 0, 0]; //, false, false, false]\n  if (!(thistable[moveCoords[2]][moveCoords[3]][1] === 1)) {\n    thistable[moveCoords[2]][moveCoords[3]][3] = false;\n  }\n\n  return thistable;\n}\n\nfunction coordsToMoveCoords(a, b, c, d) {\n  return [a, b, c, d]\n}\n\n\nfunction coordsToMoveString(a, b, c, d) {\n  return String.fromCharCode(97 + a) + (b + 1) + String.fromCharCode(97 + c) + (d + 1);\n}\n\n/////////////////////// from old ai end //////////////////////////\n\nfunction pawnCanMoveN(k, l, moveTable, protectedArray, c, iHitMoves, protectScore, possibleMoves) {\n  if (c === 2) { //white pawn\n    pushAidXN(k, l, k + 1, l + 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n    pushAidXN(k, l, k - 1, l + 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n    return;\n  }\n  pushAidXN(k, l, k + 1, l - 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidXN(k, l, k - 1, l - 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n}\n\nfunction rookCanMoveN(k, l, moveTable, protectedArray, c, iHitMoves, protectScore, possibleMoves) {\n  var i = k + 1;\n  while (pushAidNN(k, l, i, l, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) i += 1;\n  i = k - 1;\n  while (pushAidNN(k, l, i, l, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) i -= 1;\n  i = l + 1;\n  while (pushAidNN(k, l, k, i, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) i += 1;\n  i = l - 1;\n  while (pushAidNN(k, l, k, i, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) i -= 1;\n}\n\nfunction bishopCanMoveN(k, l, moveTable, protectedArray, c, iHitMoves, protectScore, possibleMoves) {\n  var i = k + 1;\n  var j = l + 1;\n  while (pushAidNN(k, l, i, j, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) {\n    i += 1;\n    j += 1;\n  }\n\n  i = k - 1;\n  j = l - 1;\n  while (pushAidNN(k, l, i, j, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) {\n    i -= 1;\n    j -= 1;\n  }\n\n  i = k - 1;\n  j = l + 1;\n  while (pushAidNN(k, l, i, j, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) {\n    i -= 1;\n    j += 1;\n  }\n\n  i = k + 1;\n  j = l - 1;\n  while (pushAidNN(k, l, i, j, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) {\n    i += 1;\n    j -= 1;\n  }\n}\n\nfunction queenCanMoveN(k, l, moveTable, protectedArray, c, iHitMoves, protectScore, possibleMoves) {\n  var i = k + 1;\n  while (pushAidNN(k, l, i, l, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) i += 1;\n  i = k - 1;\n  while (pushAidNN(k, l, i, l, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) i -= 1;\n  i = l + 1;\n  while (pushAidNN(k, l, k, i, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) i += 1;\n  i = l - 1;\n  while (pushAidNN(k, l, k, i, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) i -= 1;\n  i = k + 1;\n  var j = l + 1;\n  while (pushAidNN(k, l, i, j, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) {\n    i += 1;\n    j += 1;\n  }\n  i = k - 1;\n  j = l - 1;\n  while (pushAidNN(k, l, i, j, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) {\n    i -= 1;\n    j -= 1;\n  }\n  i = k - 1;\n  j = l + 1;\n  while (pushAidNN(k, l, i, j, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) {\n    i -= 1;\n    j += 1;\n  }\n  i = k + 1;\n  j = l - 1;\n  while (pushAidNN(k, l, i, j, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) {\n    i += 1;\n    j -= 1;\n  }\n}\n\nfunction kingCanMoveN(k, l, moveTable, protectedArray, c, iHitMoves, protectScore, possibleMoves) {\n  pushAidN(k, l, k + 1, l, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k - 1, l, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k + 1, l + 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k - 1, l + 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k + 1, l - 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k - 1, l - 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k, l + 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k, l - 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n\n  //sanc\n  if (moveTable[k][l][3]) { //if the king hasnt moved yet, \n    // ha nincs sakkban, nem is ugrik at sakkot, minden ures kozotte\n    if (moveTable[0][l][3] && // unmoved rook on [0][l]\n      moveTable[1][l][0] === 0 && moveTable[2][l][0] === 0 && moveTable[3][l][0] === 0) { //empty between\n      pushAidN(k, l, 2, l, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n    }\n    if (moveTable[7][l][3] && moveTable[5][l][0] === 0 && moveTable[6][l][0] === 0) { // unmoved rook on [7][l] && empty between\n      pushAidN(k, l, 6, l, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n    }\n  }\n}\n\nfunction horseCanMoveN(k, l, moveTable, protectedArray, c, iHitMoves, protectScore, possibleMoves) {\n  pushAidN(k, l, k + 1, l + 2, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k + 1, l - 2, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k - 1, l + 2, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k - 1, l - 2, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n\n  pushAidN(k, l, k + 2, l + 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k + 2, l - 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k - 2, l + 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k - 2, l - 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n}\n\nfunction whatsThereN(i, j, table) {\n  if (i >= 0 && j >= 0 && i <= 7 && j <= 7) return table[i][j];\n  return [0];\n}\n\nfunction whatsThereNN(i, j, table) {\n  if (i >= 0 && j >= 0 && i <= 7 && j <= 7) return table[i][j];\n  return [3]; // off the table\n}\n\nfunction pushAidN(k, l, x, y, c, table, protectedArray, iHitMoves, protectScore, possibleMoves) {\n  var isThere = whatsThereN(x, y, table);\n  if (isThere[0] !== 0) { //van ott vmi\n    if (isThere[0] === c) {\n      //my piece is there\n      protectScore[0] += 1;\n      protectedArray[x][y] = true; //protected\t\t//moveit will clear, fastmove not???!!!\n    } else {\n      //opps piece is there\n      possibleMoves[8 * x + y] = true; // TODO: did this break the stats?\n      iHitMoves[iHitMoves.length] = [k, l, x, y, table[k][l][1], table[x][y][1]]; //[who k,l where to x,y who, hits]\n    }\n    return true;\n  }\n  possibleMoves[8 * x + y] = true;\n  return false;\n}\n\nfunction pushAidXN(k, l, x, y, c, table, protectedArray, iHitMoves, protectScore, possibleMoves) {\n  if (x < 0 || x > 7) return false; // off the table\n  if (table[x][y][0] !== 0) { //van ott vmi\n    if (table[x][y][0] === c) {\n      //my piece is there\n      protectScore[0] += 1;\n      protectedArray[x][y] = true; //protected\t\t//moveit will clear, fastmove not???!!!\n    } else {\n      //opps piece is there\n      possibleMoves[8 * x + y] = true; // TODO: did this break the stats?\n      iHitMoves[iHitMoves.length] = [k, l, x, y, table[k][l][1], table[x][y][1]]; //[who k,l where to x,y who, hits]\n    }\n    return true;\n  }\n  possibleMoves[8 * x + y] = true;\n  return false;\n}\n\nfunction pushAidNN(k, l, x, y, c, table, protectedArray, iHitMoves, protectScore, possibleMoves) {\n  // returns gofurther for rook, bishop or queen \n\n  var isThere = whatsThereNN(x, y, table);\n  if (isThere[0] === 3) return false; // off the table, dont go further\n  if (isThere[0] === 0) { //ures mezo\n    possibleMoves[8 * x + y] = true;\n    return true; // go further\n  }\n  if (isThere[0] === c) {\n    //my piece is there\n    protectScore[0] += 1;\n    protectedArray[x][y] = true; //protected\t\t//moveit will clear, fastmove not???!!!\n  } else {\n    //opps piece is there\n    possibleMoves[8 * x + y] = true;\n    iHitMoves[iHitMoves.length] = [k, l, x, y, table[k][l][1], table[x][y][1]]; //[who k,l where to x,y who, hits]\n  }\n  return false;\n}\n\nfunction fastMove(moveCoords, intable, dontProtect, hitValue) {\n\n  var thistable = new Array(8);\n  for (var i = 0; i < 8; i += 1) {\n    thistable[i] = new Array(8);\n    for (var j = 0; j < 8; j += 1) {\n      thistable[i][j] = new Int8Array(2);\n      thistable[i][j][0] = intable[i][j][0];\n      thistable[i][j][1] = intable[i][j][1];\n    }\n  }\n\n\n\n  if (thistable[moveCoords[0]][moveCoords[1]][1] === 9 && thistable[moveCoords[0]][moveCoords[1]][3]) {\n    // moving a king that hasnt moved yet\n    switch (moveCoords[2]) {\n      case 2:\n        switch (moveCoords[3]) {\n          case 0:\n            thistable = fastMove([0, 0, 3, 0], thistable);\n            break;\n          case 7:\n            thistable = fastMove([7, 0, 5, 0], thistable);\n            break;\n          default:\n        }\n        break;\n      case 7:\n        switch (moveCoords[3]) {\n          case 0:\n            thistable = fastMove([0, 7, 3, 7], thistable);\n            break;\n          case 7:\n            thistable = fastMove([7, 7, 5, 7], thistable);\n            break;\n          default:\n        }\n        break;\n      default:\n    }\n  }\n\n  if (thistable[moveCoords[0]][moveCoords[1]][1] === 1 && ( //ha paraszt es\n    moveCoords[3] === 7 || //es 8asra lep vagy\n    moveCoords[3] === 0 //1re\n  )) {\n    // THEN\n    thistable[moveCoords[0]][moveCoords[1]][1] = 5; //kiralyno lett\n  }\n\n  thistable[moveCoords[2]][moveCoords[3]] =\n    thistable[moveCoords[0]][moveCoords[1]];\n  thistable[moveCoords[0]][moveCoords[1]] = [0, 0, 0]; //, false, false, false]\n\n  return thistable;\n}\n\nfunction newCanMove(k, l, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves) {\n\n  //[who k,l where to x,y who, hits]\n\n  var what = moveTable[k][l][1];\n\n  switch (what) {\n\n    case 1:\n\n      pawnCanMoveN(k, l, moveTable, protectedArray, c, iHitMoves, protectScore, possibleMoves);\n\n      break;\n    case 2:\n      bishopCanMoveN(k, l, moveTable, protectedArray, c, iHitMoves, protectScore, possibleMoves);\n\n      break;\n    case 3:\n      horseCanMoveN(k, l, moveTable, protectedArray, c, iHitMoves, protectScore, possibleMoves);\n\n      break;\n    case 4:\n      rookCanMoveN(k, l, moveTable, protectedArray, c, iHitMoves, protectScore, possibleMoves);\n\n      break;\n    case 5:\n      queenCanMoveN(k, l, moveTable, protectedArray, c, iHitMoves, protectScore, possibleMoves);\n\n      break;\n    case 9:\n      kingCanMoveN(k, l, moveTable, protectedArray, c, iHitMoves, protectScore, possibleMoves);\n\n      break;\n\n  }\n\n}\n\nfunction getHitScores(origTable, wNext, flipIt, wPlayer, mod) {\n\n  var fwVdef = 1; //0.846;\n  var fwV = 1;\n\n  var bHKdef = 1;\n  var bHK = 1;\n\n  var hKMdef = 1;\n  var hKM = 1;\n\n  switch (mod && mod.modType) {\n    case 'fwV':\n      fwV = mod.modConst;\n      break;\n    case 'bHK':\n      bHK = mod.modConst;\n      break;\n    case 'hKM':\n      hKM = mod.modConst;\n      break;\n\n    default:\n  }\n\n  var pawnVal = 0;\n\n  var iHitCoords = []; //[who k,l where to x,y, who, hits]\n  var heHitsCoords = [];\n\n  var myprotectScore = new Uint8Array(1); //[0]\n  var hisprotectScore = new Uint8Array(1); //[0]\n\n  var myAllHit = 0;\n  var hisAllHit = 0;\n\n  var myBestHit = 0;\n  var hisBestHit = 0;\n\n  var myBestHitCoords = [];\n\n  var protectedArray = [ //new Array(8)\n\n    new Uint8Array(8),\n    new Uint8Array(8),\n    new Uint8Array(8),\n    new Uint8Array(8),\n\n    new Uint8Array(8),\n    new Uint8Array(8),\n    new Uint8Array(8),\n    new Uint8Array(8)\n\n  ];\n\n  var c;\n  var nc;\n\n  if (wNext) {\n    nc = 1;\n    c = 2;\n  } else {\n    c = 1;\n    nc = 2;\n  }\n\n  var allMyMoves = {};\n  var hisKingMoves = {};\n\n  for (var lookI = 0; lookI < 8; lookI += 1) {\n    for (var lookJ = 0; lookJ < 8; lookJ += 1) { //look through the table\n\n      if (origTable[lookI][lookJ][0] === c) {\n        ////////found my piece/////////\n        ////////get all my moves and places i protect\n        if (origTable[lookI][lookJ][1] === 1) {\n          if (c === 1) {\n            pawnVal += (7 - lookJ);\n          } else {\n            pawnVal += lookJ;\n          }\n        }\n        newCanMove(lookI, lookJ, c, origTable, protectedArray, iHitCoords, myprotectScore, allMyMoves); //newCanMove will protect the table\n        //and append all my hits to iHitCoords\n        //will increase myprotectscore, inaccurate!!!!!!!\t\t\t\t\n      } else {\n\n        if (origTable[lookI][lookJ][0] !== 0) { ////////found opponent's piece/////////\t\t\t\t\t\t\t\t\t\t\t\t\n          if (origTable[lookI][lookJ][1] === 1) {\n            if (nc === 1) {\n              pawnVal -= (7 - lookJ);\n            } else {\n              pawnVal -= lookJ;\n            }\n\n          }\n\n          newCanMove(lookI, lookJ, nc, origTable, protectedArray, heHitsCoords, hisprotectScore, origTable[lookI][lookJ][1] === 9 ? hisKingMoves : {});\n        }\n      }\n\n    }\n  }\n\n  iHitCoords.forEach(function (hitCoords) {\n    var thisValue = 0;\n\n    if (protectedArray[hitCoords[2]][hitCoords[3]]) { //if field is protected\n\n      thisValue = hitCoords[5] - hitCoords[4]; //kivonja amivel lep\n\n    } else {\n\n      thisValue = hitCoords[5]; //else normal hitvalue\n\n    }\n\n    if (thisValue > myBestHit) { //remember best\n\n      myBestHit = thisValue;\n\n      myBestHitCoords = hitCoords;\n    }\n\n    myAllHit += thisValue;\n\n  });\n\n  heHitsCoords.forEach(function (hitCoords) {\n\n    var thisValue = 0;\n\n    if (protectedArray[hitCoords[2]][hitCoords[3]]) { //if cell is protected\n\n      thisValue = hitCoords[5] - hitCoords[4]; //kivonja amivel lep\n\n    } else {\n\n      thisValue = hitCoords[5]; //normal hitvalue\n\n    }\n\n    if (thisValue > hisBestHit) { //remember best\n\n      hisBestHit = thisValue;\n      //\n    }\n\n    hisAllHit += thisValue;\n  });\n\n  var protecScore = myprotectScore[0] - hisprotectScore[0];\n  var allhitScore = myAllHit - hisAllHit;\n\n  var hisKingMArr = Object.keys(hisKingMoves);\n\n  var hisKingMoveScore = 8 - (hisKingMArr.length);\n  var blockHisKingScore = hisKingMArr.reduce((p, c) => allMyMoves[c] ? p + 1 : p, 0);\n\n\n  pawnVal *= fwV * fwVdef;\n  hisKingMoveScore *= hKM * hKMdef;\n  blockHisKingScore *= bHK * bHKdef;\n\n  var result = new Int32Array(1);\n  result[0] = (myBestHit * 65536) - (hisBestHit * 4096);\n\n  if (flipIt) {\n    result[0] -= (protecScore << 8) + (allhitScore << 4) + (pawnVal) + (hisKingMoveScore << 9) + (blockHisKingScore << 10); //*1633333\n  } else {\n    result[0] += (protecScore << 8) + (allhitScore << 4) + (pawnVal) + (hisKingMoveScore << 9) + (blockHisKingScore << 10); //*1633333\n  }\n\n  return result;\n\n}\n\n// if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') module.exports = {\n//   moveInTable: moveInTable\n// };\n\n\n////////////////http://stackoverflow.com/questions/728360/most-elegant-way-to-clone-a-javascript-object\nfunction clone(obj) {\n  var copy;\n\n  // Handle the 3 simple types, and null or undefined\n  if (null === obj || \"object\" !== typeof obj) return obj;\n\n  // Handle Date\n  if (obj instanceof Date) {\n    copy = new Date();\n    copy.setTime(obj.getTime());\n    return copy;\n  }\n\n  // Handle Array\n  if (obj instanceof Array) {\n    copy = [];\n    for (var i = 0, len = obj.length; i < len; i += 1) {\n      copy[i] = clone(obj[i]);\n    }\n    return copy;\n  }\n\n  // Handle Object\n  if (obj instanceof Object) {\n    copy = {};\n    for (var attr in obj) {\n      if (obj.hasOwnProperty(attr)) copy[attr] = clone(obj[attr]);\n    }\n    return copy;\n  }\n\n  throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n}\n\n////////////////////http://stackoverflow.com/questions/728360/most-elegant-way-to-clone-a-javascript-object end\n\nvar MoveTaskN = function (dbTable, mod) {\n  this.id = Math.random();\n\n  var shouldIDraw = evalFuncs.shouldIDraw(dbTable)\n  this.shouldIDraw = shouldIDraw\n\n  // console.log({shouldIDraw})\n\n  if (mod) this.mod = mod\n\n  this.sharedData = {\n\n    shouldIDraw: shouldIDraw,\n\n    origWNext: dbTable.wNext,\n\n    desiredDepth: dbTable.desiredDepth,\n    oppKingPos: whereIsTheKing(dbTable.table, !dbTable.wNext),\n    origProtect: protectTable(dbTable.table, dbTable.wNext),\n    origData: getTableData(dbTable.table, dbTable.wNext),\n    origDeepDatatt: getHitScores(dbTable.table, true, true, dbTable.wNext,\n      mod),\n    origDeepDatatf: getHitScores(dbTable.table, true, false, dbTable.wNext,\n      mod),\n    origDeepDataft: getHitScores(dbTable.table, false, true, dbTable.wNext,\n      mod),\n    origDeepDataff: getHitScores(dbTable.table, false, false, dbTable.wNext,\n      mod),\n  }\n\n  this.moveCoords = getAllMoves(dbTable.table, dbTable.wNext, false, 0, true)\n\n  var dontLoop = false\n  if (this.sharedData.origData[0] > 1) {\n    dontLoop = true\n  }\n\n  this.sharedData.dontLoop = dontLoop\n\n}\n\nfunction toTypedTable(table) {\n  var result = []; //new Array(8)\n  if (typeof table !== 'undefined') {\n    for (var i = 0; i < 8; i += 1) {\n      result[i] = []; //new Array(8)\n      if (typeof table[i] !== 'undefined') {\n        for (var j = 0; j < 8; j += 1) {\n          result[i][j] = new Int8Array(table[i][j])\n        }\n      }\n    }\n  }\n  return result\n}\n\n///////////////////////////// below the functions that run a million times ////////////////////////\n\nfunction solveSmallDeepeningTask(sdt, resolverArray) {\n\n  //**console.log(sdt.wPlayer)\n\n  //this is the function that runs a million times\n\n  // var sdt.depth = sdt.depth\n\n  // var sdt.table = sdt.table\n\n  // var sdt.score = new Int32Array(1)\n  // var sdt.score = sdt.score\n\n  //gets one task, produces an array of more tasks\n  //or empty array when done\n\n  var result = []\n\n  var newWNext = !sdt.wNext;\n\n  if (sdt.depth === 2) { //on 2nd level remove invalids\n    if (captured(sdt.table, newWNext)) {\n      //invalid move, sakkban maradt\n\n      result = [new SmallDeepeningTask(sdt.table, newWNext, sdt.depth + 1,\n        sdt.moveTree, sdt.desiredDepth, 100,\n        sdt.wPlayer, false, sdt.gameNum,\n        sdt.mod, sdt.shouldIDraw)]\n\n    }\n\n  }\n\n  //these new tasks go to a fifo array, we solve the tree bit by bit\n  //keeping movestrings only, not eating memory with tables\n\n  //get hitvalue for each move, keep best ones only\n  //end of tree check if we got it wrong and go back if treevalue gets less!!!!!!!!!!!!!!!!\n\n  if (sdt.trItm) { //we solved all moves for a table, time to go backwards\n\n    //do some work in resolverArray\t\t\n    //then clear that array\n\n    resolveDepth(sdt.depth, resolverArray)\n\n  } else {\n\n    if (sdt.depth > sdt.desiredDepth) { //depth +1\n\n      resolverArray[sdt.depth][resolverArray[sdt.depth].length] = new ResolverItem(sdt.score,\n        sdt.moveTree, sdt.wPlayer); //this will fill in and then gets reduced to best movevalue only\n\n    } else {\n\n      var isNegative = (sdt.depth & 1)\n\n      if (sdt.depth === sdt.desiredDepth) {\n        //////depth reached, eval table\n\n        var newScore;// = new Int32Array(1)\n\n        //**console.log(sdt.shouldIDraw)\n\n        if (isNegative) {\n\n          newScore = (sdt.score << 16) - getHitScores(sdt.table,\n            sdt.wNext, false, sdt.wPlayer,\n            sdt.mod, sdt.shouldIDraw)[0]\n\n        } else {\n\n          newScore = (sdt.score << 16) + getHitScores(sdt.table,\n            sdt.wNext, true, sdt.wPlayer,\n            sdt.mod, sdt.shouldIDraw)[0]\n        }\n\n        result[result.length] = new SmallDeepeningTask(\n          [], //no table\n          newWNext,\n          sdt.depth + 1,\n          sdt.moveTree,\n          sdt.desiredDepth,\n          newScore, //sdt.score + thisValue\n          sdt.wPlayer,\n          false,\n          sdt.gameNum,\n          sdt.mod,\n          sdt.shouldIDraw\n        )\n\n      } else {\n\n        //depth not solved, lets solve it further\n\n        var possibleMoves = []\n\n        //below returns a copied table, should opt out for speed!!!!!!!\n\n        addMovesToTable(sdt.table, sdt.wNext, true, possibleMoves) //this puts moves in strings, should keep it fastest possible\n\n        //true to \t\t\t\t//it will not remove invalid moves to keep fast \n        //keep illegal\t\t\t//we will remove them later when backward processing the tree\n\n        //here we have possiblemoves filled in with good, bad and illegal moves\n\n        for (var i = possibleMoves.length - 1; i >= 0; i -= 1) {\n\n          var moveCoords = possibleMoves[i]\n\n          var movedTable = []\n\n          movedTable = fastMove(moveCoords, sdt.table, true) //speed! put this if out of here, makeamove only false at the last run\n\n\n          var whatGetsHit = sdt.table[moveCoords[2]][moveCoords[3]];\n\n          var thisValue = whatGetsHit[1] //piece value, should += 1 when en-pass\n\n          var valueToSave\n\n          if (isNegative) { //does this work???!!!!!!!!!!!\n\n            valueToSave = sdt.score - thisValue\n          } else {\n\n            valueToSave = sdt.score + thisValue\n          }\n\n          var newMoveTree = sdt.moveTree.concat([moveCoords,\n            valueToSave])\n\n          result[result.length] = new SmallDeepeningTask(\n            movedTable,\n            newWNext,\n            sdt.depth + 1,\n            newMoveTree,\n            sdt.desiredDepth,\n            valueToSave, //sdt.score + thisValue\n            sdt.wPlayer,\n            false,\n            sdt.gameNum,\n            sdt.mod,\n            sdt.shouldIDraw\n          )\n\n\n        } //  )    //end of for each move\n\n      }\n\n      result[result.length] = new TriggerItem(sdt.depth + 1, sdt.moveTree,\n        sdt.wPlayer)\n      //this will trigger move calc when processing array (will be placed before each set of smalltasks)\n\n    }\n\n  }\n\n  return result\n\n}\n\nfunction solveDeepeningTask(deepeningTask, isSdt) { //designed to solve the whole deepening task on one thread\n  //will return number of smallTasks solved for testing??!!!!!!!!!!!!!!!\n  //var taskValue = deepeningTask.\n\n  var retProgress = deepeningTask.progress\n\n  var startedAt = new Date().getTime()\n\n  if (isSdt) {\n\n    //we are in worker, received 2nd depth table already processed with oneDeeper()\n    //this table is after his first return move\n    //not filtered move, could be that we can hit the king now\n    //if we can, then this is a wrong move, need to throw away the whole lot!!!!!!!!!!!!!!!!!\n\n    var tempDeepeningTask = {\n      desiredDepth: deepeningTask.desiredDepth,\n      smallDeepeningTasks: [deepeningTask],\n      wPlayer: deepeningTask.wPlayer,\n      mod: deepeningTask.mod,\n      shouldIDraw: deepeningTask.shouldIDraw\n    }\n    deepeningTask = tempDeepeningTask\n  }\n\n  var resolverArray = [] //multidim, for each depth the results, will be updated a million times\n\n  var p2 = deepeningTask.desiredDepth + 2;\n  for (var i = 0; i < p2; i += 1) {\n    resolverArray[i] = []\n  }\n\n  while (deepeningTask.smallDeepeningTasks.length > 0) {\n\n    //length is 1 at first, then just grows until all has reached the level. evetually there will be nothing to do and this loop exists\n\n    var smallDeepeningTask = deepeningTask.smallDeepeningTasks.pop()\n\n    // smallDeepeningTask.table = toTypedTable(smallDeepeningTask.table)\n\n    var resultingSDTs = solveSmallDeepeningTask(smallDeepeningTask, resolverArray)\n\n    for (var l = resultingSDTs.length - 1; l >= 0; l -= 1) {\n      deepeningTask.smallDeepeningTasks[deepeningTask.smallDeepeningTasks.length] = resultingSDTs[l]; //at the beginning the unsent array is just growing but then we run out\n    }\n\n    //call it again if there are tasks\n  }\n\n  var timeItTook = new Date()\n    .getTime() - startedAt\n\n  var ret = {\n\n    gameNum: deepeningTask.gameNum,\n    progress: retProgress,\n    timeItTook: timeItTook,\n    score: resolverArray[2][0].value,\n    moveTree: resolverArray[2][0].moveTree//.join(',')\n\n  }\n\n  if (isSdt !== true) {\n    ret.score = resolverArray[1][0].value\n\n  }\n\n  return ret\n}\n\nfunction deepMove(smallMoveTask) { //for 1 thread, smallmovetask has one of my possible 1st moves\n\n  // var started = new Date()\n  // \t.getTime()\n\n  var solvedTableCount = 0\n\n  // var value = 0\n\n  var deepeningTask = new DeepeningTask(smallMoveTask) //deepeningtask to be able to create 2nd level set for workers\n\n  //var tempCommand = ''\n\n  //var thisMoveValue=0\n\n  //var ranCount=\n  var totals = solveDeepeningTask(deepeningTask, '') //single thread calc\n\n  solvedTableCount += totals.solved\n\n  return { //this goes to console chat window\n    move: deepeningTask.moveCoords,\n    score: totals.score,\n    moveTree: totals.moveTree,\n    solved: totals.solved,\n    _id: smallMoveTask._id,\n    depth: deepeningTask.desiredDepth\n  }\n\n}\n\nfunction mtProcessDeepSplitMoves(data, thinker, mt, modConst, looped) {\n  var newData = []\n  var ranCount = 0\n  while (data.length > 0) {\n\n    var toPush = deepMove(data.pop(), ranCount)\n    toPush.thinker = thinker\n    newData[newData.length] = toPush;\n\n  }\n  newData.solved = ranCount\n  return newData\n}\n\nfunction oneDeeper(deepeningTask) { //only takes original first level deepeningtasks??\n\n  var resolverArray = []\n  var smallDeepeningTask = deepeningTask.smallDeepeningTasks.pop()\n\n  var tempTasks = solveSmallDeepeningTask(smallDeepeningTask,\n    smallDeepeningTask.resolverArray) //, counter)\n\n  while (tempTasks.length > 0) {\n\n    var tempTask = tempTasks.pop()\n\n    deepeningTask.smallDeepeningTasks[deepeningTask.smallDeepeningTasks.length] = tempTask;\n\n  }\n\n  deepeningTask.smallDeepeningTasksCopy = deepeningTask.smallDeepeningTasks.slice()\n\n  deepeningTask.resolverArray = resolverArray\n\n}\n\nexport function singleThreadAi(tempDbTable, depth, cb, mod) {\n\n  var dbTable = clone(tempDbTable)\n\n  dbTable.moveTask = new MoveTaskN(dbTable, mod)\n\n  dbTable.moveTask.sharedData.desiredDepth = depth\n\n  //from server\n  var tempMoves = new SplitMove(dbTable).movesToSend\n\n  //////////from mainworker\n  tempMoves.forEach(function (splitMove) {\n\n    splitMove.progress = {\n\n      moveCoords: splitMove.moveCoords,\n      moveIndex: splitMove.moveIndex,\n\n      done: false,\n      result: {},\n\n      expected: undefined,\n\n    }\n\n  })\n\n  var result = []\n\n  tempMoves.forEach(function (smallMoveTask, index) {\n    //var dTask=new DeepeningTask(smallMoveTask)\n\n    var deepeningTask = new DeepeningTask(smallMoveTask)\n\n    oneDeeper(deepeningTask) //this will make about 30 smalldeepeningtasks from the initial 1 and create deepeningtask.resolverarray\n    //first item in deepeningtask.smalldeepeningtasks is trigger\n\n    //!!!!!!!!!!!implement !!!!!!!!!!typedarray\n\n    var res = []\n\n    while (deepeningTask.smallDeepeningTasks.length > 1) {\n\n      var smallDeepeningTask = deepeningTask.smallDeepeningTasks.pop()\n\n      smallDeepeningTask.progress = deepeningTask.progress\n\n      ////////////////from subworker\n\n      var res2 = solveDeepeningTask(smallDeepeningTask, true)\n\n      res2.value = res2.score\n\n      res[res.length] = res2;\n\n    }\n\n    var tempResolveArray = []\n\n    tempResolveArray[1] = []\n    tempResolveArray[2] = res\n    tempResolveArray[3] = []\n\n    resolveDepth(2, tempResolveArray)\n\n    var pushAgain = tempResolveArray[1][0]\n\n    var moveCoords = pushAgain.moveTree[0]//.slice(0, 4)\n\n    var wouldLoop\n\n    if (!dbTable.moveTask.shouldIDraw) {\n\n      //**console.log('i shouldn\\'t draw')\n\n      var movedTable = moveIt(moveCoords, dbTable.table)\n      //**console.log(movedTable)\n      wouldLoop = evalFuncs.checkIfLooped(movedTable, dbTable.allPastTables)\n      //**console.log(wouldLoop)\n\n    } else {\n      //**console.log('i can draw')\n    }\n    if (wouldLoop) pushAgain.value -= Math.pow(wouldLoop, 5)\n    //pushAgain.moveIndex=resData.progress.moveIndex\n    //pushAgain._id = workingOnGameNum\n    pushAgain.score = pushAgain.value\n    //pushAgain.thinker = sendID.toString() //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!1\n    pushAgain.move = moveCoords\n\n    result[result.length] = pushAgain;\n\n  })\n\n  result.sort(function (a, b) {\n\n    if (a.score < b.score) {\n      return 1\n    } else {\n      if (a.score === b.score) {\n        return 0\n      } else {\n        return -1\n      }\n    }\n\n  })\n\n  var finalResult = {\n    result: result,\n    winningMove: result[0],\n    moveCoords: result[0].moveTree[0]//.slice(0, 4)\n  }\n  //res.winningMove=res[0]\n\n  if (cb) cb(finalResult)\n\n  return finalResult\n\n}\n\nfunction resolveDepth(depth, resolverArray) {\n\n  if (resolverArray[depth].length > 0) {\n    var raDm1 = resolverArray[depth - 1];\n    if (depth & 1) {\n\n      raDm1[raDm1.length] = resolverArray[depth].reduce(\n        function (previousValue, currentValue, index, array) {\n          if (currentValue.value > previousValue.value) {\n            return {\n              value: currentValue.value,\n              moveTree: currentValue.moveTree\n            } //currentValue\n\n          } else {\n            return {\n              value: previousValue.value,\n              moveTree: previousValue.moveTree\n            } //previousValue\n          }\n\n        }\n      )\n    } else {\n      raDm1[raDm1.length] = resolverArray[depth].reduce(\n        function (previousValue, currentValue, index, array) {\n          if (currentValue.value < previousValue.value) {\n            return {\n              value: currentValue.value,\n              moveTree: currentValue.moveTree\n            }\n          } else {\n            return {\n              value: previousValue.value,\n              moveTree: previousValue.moveTree\n            }\n          }\n\n        }\n      )\n    }\n\n  }\n  resolverArray[depth] = []\n}\n\n\nvar SmallDeepeningTask = function (table, wNext, depth, moveTree, desiredDepth, score, wPlayer, stopped, gameNum, mod, shouldIDraw) {\n\n  this.gameNum = gameNum\n\n  this.wPlayer = wPlayer\n\n  this.table = table\n\n  this.wNext = wNext\n\n  this.depth = depth\n\n  this.moveTree = moveTree\n\n  this.desiredDepth = desiredDepth\n\n  this.score = score\n\n  this.mod = mod\n\n  this.shouldIDraw = shouldIDraw\n\n  //if(shouldIDraw!=undefined)console.log(shouldIDraw)\n\n}\nvar MoveToSend = function (moveCoord, index, dbTableWithMoveTask, splitMoveId) {\n\n  var moveTask = dbTableWithMoveTask.moveTask\n\n  this.shouldIDraw = moveTask.shouldIDraw\n\n  this.mod = moveTask.mod\n\n  this.moveIndex = index\n\n  this.moveCoords = moveCoord //one move only\n\n  this.sharedData = moveTask.sharedData\n\n  this.sharedData.origTable = dbTableWithMoveTask.table\n\n  this.sharedData.gameNum = dbTableWithMoveTask._id\n\n  this.sharedData.desiredDepth = moveTask.sharedData.desiredDepth\n\n  this.sharedData.splitMoveID = splitMoveId\n\n  this.timer = {}\n\n  this.history = []\n\n}\n\n\n\n\nvar SplitMove = function (dbTableWithMoveTask) {\n\n  //**console.log(JSON.stringify(dbTableWithMoveTask.moveTask))\n\n  this.shouldIDraw = dbTableWithMoveTask.moveTask.shouldIDraw\n\n  this.started = new Date()\n\n  this.splitMoveIndex = undefined\n\n  this.splitMoveID = Math.random() * Math.random()\n\n  var movesToSend = []\n\n  dbTableWithMoveTask.moveTask.moveCoords.forEach((moveCoord, index) => {\n\n    movesToSend.push(new MoveToSend(moveCoord, index, dbTableWithMoveTask, this.splitMoveID))\n\n  })\n\n  this.movesToSend = movesToSend //this will get empty as we send the moves out for processing\n\n  this.moves = movesToSend.slice() //this should stay full\n\n  this.thinkers = [] //this will get filled with the clients working on this splitmove\n\n  this.gameNum = dbTableWithMoveTask._id\n\n  this.origTable = dbTableWithMoveTask.table\n\n  this.origMoveTask = dbTableWithMoveTask.moveTask\n\n  this.pendingMoveCount = dbTableWithMoveTask.moveTask.moveCoords.length\n\n}\nvar DeepeningTask = function (smallMoveTask) { //keep this fast, designed for main thread and mainWorker ???not sure..     //smallMoveTask is a smallMoveTask, to be deepend further\n\n  this.shouldIDraw = smallMoveTask.sharedData.shouldIDraw\n\n  this.mod = smallMoveTask.mod\n\n  this.gameNum = smallMoveTask.sharedData.gameNum\n\n  this.progress = smallMoveTask.progress\n\n  this.resolverArray = []\n\n\n\n  this.initialWNext = smallMoveTask.sharedData.origWNext\n\n\n  this.moveStr = [\n    smallMoveTask.moveCoords[0],\n    smallMoveTask.moveCoords[1],\n    smallMoveTask.moveCoords[2],\n    smallMoveTask.moveCoords[3]\n  ]            //smallMoveTask.stepMove //all resulting tables relate to this movestring: deppeningtask is made of smallmovetask..\n\n\n\n  this.initialTreeMoves = [this.moveStr] //to put in first smallmovetask\n\n  this.startingTable = smallMoveTask.sharedData.origTable //this was calculated in advance when getting the first moves: that resulted in this.everything\n  this.startingAllPastTables = smallMoveTask.sharedData.allPast\n  //**console.log(smallMoveTask)\n\n  this.thisTaskTable = moveIt(this.moveStr, this.startingTable, true) //this is the first and should be only time calculating this!!!!!\n  //takes time\n  this.firstDepthValue = this.startingTable[smallMoveTask.moveCoords[2]][smallMoveTask.moveCoords[3]][1]              //smallMoveTask.firstDepthValue\n\n  this.desiredDepth = smallMoveTask.sharedData.desiredDepth //we will deepen until depth reaches this number\n\n  this.actualDepth = 1 //its 1 because we have 1st level resulting table fixed. \n  //increase this when generating deeper tables, loop while this is smaller than desiredDepth\n\n  //this task should be sent back to the server so lets ke\n\n\n  this.tableTree = [] //fill multiDIM array with resulting tables during processing\n  this.moveStrTree = [] //twin array with movesString\n\n\n  this.tableTree[0] = [this.startingTable] // depth 0 table, startingTable: only one in an array\n\n  this.tableTree[1] = [this.thisTaskTable] // depth 1 tables, we only have one in this task but there are more in total\n\n  this.tableTree[2] = [] // depth 2 tables are empty at init, we will fill these in when processing this deepeningTask. after each depth we'll create the next empty array\n\n  //there will be more levels here with a lot of tables\n\n  //moveStings is one level deeper array, strings get longer each level to keep track of table!!!!!!\n\n  this.moveStrTree[0] = [\n    []\n  ] //???\t\t\t\t\t// depth 0 movestrings, meaning 'how did we get here?'\tthese are always unknown\n\n  this.moveStrTree[1] = [\n    [this.moveStr]\n  ] // depth 1 movestrings, meaning 'how did we get here?', we only have one in this task but there are more in total\n\n  this.moveStrTree[2] = [\n    []\n  ] // depth 2 movestrings, meaning 'how did we get here?', we will fill these together with the tableTree, all indexes will match as move=>resulting table\n\n  //there will be more levels here with a lot of moveStrings\n\n\n\n  this.smallDeepeningTaskCounts = [0, 1] //this will be an array of the total created smalldeepeningtasks per depth, depth 0 has 0, depth 1 has one in this splitmove\n\n\n  var initialSmallDeepeningTask = new SmallDeepeningTask(this.thisTaskTable, !this.initialWNext, this.actualDepth, this.initialTreeMoves, this.desiredDepth, this.firstDepthValue, smallMoveTask.cfColor, false, this.gameNum, this.mod, this.shouldIDraw)\n\n  //this.value=initialSmallDeepeningTask.score\n\n  this.smallDeepeningTasks = [initialSmallDeepeningTask] //to be sent out for multiplying when processing for level 2 (unless desireddepth is 1)\n\n  //this.pendingSmallDeepeningTasks=[]\t\t\t\t//here we will keep the pending smalltasks: sent out \n\n  this.solvedSmallDeepeningTasks = [] //here we will keep the results until stepping to next depth, ready for next level when this.length equals count\n\n\n}\n\n\n\n\n\nvar SmallMoveTask = function (moveCoord, index, dbTable) { //deptObj has data to keep track of deepening\n\n\n\n  this.firstDepthValue = dbTable.table[moveCoord[2]][moveCoord[3]][1]\t//doesnt care about enPass!!     //--\n\n  if (dbTable.desiredDepth > 0) {                                    //#\n    this.desiredDepth = dbTable.desiredDepth\n  } else {\n    this.desiredDepth = 3 //should be good, on 4th we check what he could hit but not generate any tables and this should match the old styles performance\n  }\n\n\n  this.oppKingPos = dbTable.oppKingPos //aTK will need this, should be the moved kings pos is moved!!!!  //#\n\n  this._id = dbTable._id //server will need this when receiving solved moves //#\n\n  this.cfMoveCoords = moveCoord //4 numbers      //##\n\n  var stepMove = moveCoord//[0], moveCoord[1], moveCoord[2], moveCoord[3])      //-- do it on client\n\n  this.stepMove = stepMove //4 char string       //--above\n\n  this.moveStrings = []\n\n  this.moveStrings.push(stepMove)\n\n\n  this.retMoves = [] //ai will fill\n\n  //this.table=moveIt(this.moveStr,dbTable.table,true)\t//dontprotect works?? !!!!\n\n  //this.value=dbTable.value\n\n  this.allPast = dbTable.allPastTables //ai needs it to avoid loop  //#\n\n  this.cfTable = dbTable.table //ai needs to know original table             //#\n  //this.cfMoveCoords=moveCoord\n  this.moveIndex = index //who needs this??!!!!!!!\n\n  this.origProtect = dbTable.origProtect //this should go in origData!!!!\n\n  this.cfColor = dbTable.wNext //this could too...\n\n  //this.deepWNext=dbTable.wNext\n\n  //this.stepMove=0\n\n  this.origData = dbTable.origData // itt adom at ami kozos az osszes smalltaskban\n\n  this.value = this.origData //ez meg minek is\n\n\n  this.fHitValue = [0] //initial value, should happen masutt     //--\n\n\n\n}\n\nvar ResolverItem = function (inscore, inmoveTree, wPlayer) {\n  this.value = inscore\n  this.moveTree = inmoveTree\n\n  this.wPlayer = wPlayer\n\n}\n\nvar TriggerItem = function (depth, moveTree, wPlayer) {\t\t//these will be put in main deepeningTaskArray to trigger calculation of totals for each level\n  this.trItm = true\n\n\n  this.depth = depth\n  //this.parentMove=parentMoveStr\t\t\t//4 char string\n  this.moveTree = moveTree\n  this.wPlayer = wPlayer\n}\n\n\n\nvar TempMoveTask = function (dbTable) {\n\n  //this.rnd=Math.random()\n  // this.created = new Date()\n  // \t.getTime()\n\n  //this.allTempTables = []\n\n  this.desiredDepth = dbTable.desiredDepth\n\n  dbTable.oppKingPos = whereIsTheKing(dbTable.table, !dbTable.wNext)\n\n\n  var moveCoords = getAllMoves(dbTable.table, dbTable.wNext, false, 0, true)\n\n\n\n  dbTable.origProtect = protectTable(dbTable.table, dbTable.wNext)\n  dbTable.origData = getTableData(dbTable.table, dbTable.wNext)\n\n  dbTable.origDeepDatatt = getHitScores(dbTable.table, true, true)\n\n  dbTable.origDeepDatatf = getHitScores(dbTable.table, true, false)\n\n  dbTable.origDeepDataft = getHitScores(dbTable.table, false, true)\n\n  dbTable.origDeepDataff = getHitScores(dbTable.table, false, false)\n\n\n\n  this.dontLoop = false\n\n  if (dbTable.origData[0] > 1) {\n    this.dontLoop = true\n  }\n\n\n\n\n  var moves = []\n\n  moveCoords.forEach(function (moveCoord, index) {\n    moves.push(new SmallMoveTask(moveCoord, index, dbTable))\n    //movesToSend.push(moves[moves.length-1])\n\n\n  })\n\n  this.movesToSend = moves.slice() //copy it, these we vill sen out\n\n\n  this.moves = moves\n\n\n\n\n\n\n}\n\n\n\nvar Task = function (command, data, message, taskNum) {\n\n  var rnd = Math.random()\n  this.rnd = rnd\n\n  if (taskNum) {\n    this.taskNum = taskNum\n  }\n  else {\n    this.taskNum = rnd\n  }\n\n\n\n  this.command = command\n  this.message = message\n  this.data = data\n  this.response = {}\n\n  var fstTime = new Date()\n    .getTime()\n\n  this.created = fstTime\n  this.called = fstTime\n\n\n\n\n}\n\nvar Dbuser = function (name, pwd) {\n  this.name = name\n  this.pwd = pwd\n  this.games = [] //his recent games \n\n}\n////\nvar FakeDbTable = function (_id, wName, bName) { //used for speed testing only\n\n\n  this.pendingMoveCount = 0\n\n  this.returnedMoves = []\n\n  this._id = _id\n  this.wName = wName\n  this.bName = bName\n\n\n  this.aiToMove = false //unused\n  this.toBeChecked = true //unused\n  this.gameIsOn = true\n  this.whiteWon = false\n  this.blackWon = false\n  this.isDraw = false\n\n  this.askWhiteDraw = false\n  this.askBlackDraw = false\n\n  this.whiteCanForceDraw = false\n  this.blackCanForceDraw = false\n\n\n  this.learner = false\n  this.learnerIsBusy = false\n\n\n\n  this.wNext = true\n  this.aiOn = false\n  this.chat = []\n  this.moves = []\n  this.pollNum = 1\n  this.allPastTables = []\n\n  this.created = new Date()\n    .getTime()\n  this.moved = this.created\n\n  this.table = new Array(8) //create 8x8 array\n  for (var i = 0; i < 8; i++) {\n    this.table[i] = new Array(8)\n  }\n\n  for (var j = 2; j < 6; j++) { //make the blanks blank\n    for (i = 0; i < 8; i++) {\n      this.table[i][j] = [0, 0, 0, false, false]\n    }\n  }\n\n  for (var i = 0; i < 8; i++) { //row of white pawns\n\n    this.table[i][1] = [0, 0, 0, false, false] //,pawnCanMove]\n  }\n  for (var i = 0; i < 8; i++) { //row of black pawns\n    this.table[i][6] = [1, 1, 0, false, false] //,pawnCanMove]\n  }\n\n  this.table[0][0] = [0, 0, 0, true, false] //,rookCanMove]\t\t\t\t//rooks\t\t//0 stands for times it moved\n  this.table[7][0] = [0, 0, 0, true, false] //,rookCanMove]\n  this.table[0][7] = [0, 0, 0, true, false] //,rookCanMove]\n  this.table[7][7] = [0, 0, 0, true, false] //,rookCanMove]\n\n  this.table[1][0] = [2, 3, 0, true, false] //,horseCanMove]\t\t\t\t\t//knights\n  this.table[6][0] = [2, 3, 0, true, false] //,horseCanMove]\n  this.table[1][7] = [1, 3, 0, true, false] //,horseCanMove]\n  this.table[6][7] = [1, 3, 0, true, false] //,horseCanMove]\n\n  this.table[2][0] = [0, 0, 0, true, false] //,bishopCanMove]\t\t\t\t//bishops\n  this.table[5][0] = [0, 0, 0, true, false] //,bishopCanMove]\n  this.table[2][7] = [0, 0, 0, true, false] //,bishopCanMove]\n  this.table[5][7] = [0, 0, 0, true, false] //,bishopCanMove]\n\n  this.table[3][0] = [0, 0, 0, true, false] //,queenCanMove]\t\t\t\t//w queen\n  this.table[4][0] = [2, 9, 0, true, false] //,kingCanMove]\t\t\t\t//w king\n\n  this.table[3][7] = [0, 0, 0, true, false] //,queenCanMove]\t\t\t\t//b q\n  this.table[4][7] = [1, 9, 0, true, false] //,kingCanMove]\t\t\t\t//b k\n\n  this.table = addMovesToTable(this.table, true)\n  //protectPieces(this.table,true)\n  //protectPieces(this.table,false)\n}\n\nvar Dbtable = function (_id, wName, bName) { //class\n\n  this.moveCount = 0\n\n  this.pendingMoveCount = 0\n  this.desiredDepth = 0\t//will set after creating, at each move step\n  this.returnedMoves = []\n\n  this._id = _id\n  this.wName = wName\n  this.bName = bName\n\n\n  this.aiToMove = false //unused\n  this.toBeChecked = true //unused\n  this.gameIsOn = true\n  this.whiteWon = false\n  this.blackWon = false\n  this.isDraw = false\n\n  this.askWhiteDraw = false\n  this.askBlackDraw = false\n\n  this.whiteCanForceDraw = false\n  this.blackCanForceDraw = false\n\n\n  this.learner = false\n  this.learnerIsBusy = false\n\n\n\n  this.wNext = true\n  this.aiOn = false\n  this.chat = []\n  this.moves = []\n  this.pollNum = 1\n  this.allPastTables = []\n\n  this.created = new Date()\n    .getTime()\n  this.moved = this.created\n\n  this.table = new Array(8) //create 8x8 array\n  for (var i = 0; i < 8; i++) {\n    this.table[i] = new Array(8)\n  }\n\n  for (var j = 2; j < 6; j++) { //make the blanks blank\n    for (i = 0; i < 8; i++) {\n      this.table[i][j] = [0, 0, 0, false, false]\n    }\n  }\n\n  for (var i = 0; i < 8; i++) { //row of white pawns\n\n    this.table[i][1] = [2, 1, 0, false, false] //,pawnCanMove]\n  }\n  for (var i = 0; i < 8; i++) { //row of black pawns\n    this.table[i][6] = [1, 1, 0, false, false] //,pawnCanMove]\n  }\n\n  this.table[0][0] = [2, 4, 0, true, false] //,rookCanMove]\t\t\t\t//rooks\t\t//0 stands for times it moved\n  this.table[7][0] = [2, 4, 0, true, false] //,rookCanMove]\n  this.table[0][7] = [1, 4, 0, true, false] //,rookCanMove]\n  this.table[7][7] = [1, 4, 0, true, false] //,rookCanMove]\n\n  this.table[1][0] = [2, 3, 0, true, false] //,horseCanMove]\t\t\t\t\t//knights\n  this.table[6][0] = [2, 3, 0, true, false] //,horseCanMove]\n  this.table[1][7] = [1, 3, 0, true, false] //,horseCanMove]\n  this.table[6][7] = [1, 3, 0, true, false] //,horseCanMove]\n\n  this.table[2][0] = [2, 2, 0, true, false] //,bishopCanMove]\t\t\t\t//bishops\n  this.table[5][0] = [2, 2, 0, true, false] //,bishopCanMove]\n  this.table[2][7] = [1, 2, 0, true, false] //,bishopCanMove]\n  this.table[5][7] = [1, 2, 0, true, false] //,bishopCanMove]\n\n  this.table[3][0] = [2, 5, 0, true, false] //,queenCanMove]\t\t\t\t//w queen\n  this.table[4][0] = [2, 9, 0, true, false] //,kingCanMove]\t\t\t\t//w king\n\n  this.table[3][7] = [1, 5, 0, true, false] //,queenCanMove]\t\t\t\t//b q\n  this.table[4][7] = [1, 9, 0, true, false] //,kingCanMove]\t\t\t\t//b k\n\n  this.table = addMovesToTable(this.table, true)\n  //protectPieces(this.table,true)\n  //protectPieces(this.table,false)\n}","import { cloneElement, createElement, Component, toChildArray } from 'preact';\nimport { exec, prepareVNodeForRanking, assign, pathRankSort } from './util';\n\nlet customHistory = null;\n\nconst ROUTERS = [];\n\nconst subscribers = [];\n\nconst EMPTY = {};\n\nfunction setUrl(url, type='push') {\n\tif (customHistory && customHistory[type]) {\n\t\tcustomHistory[type](url);\n\t}\n\telse if (typeof history!=='undefined' && history[type+'State']) {\n\t\thistory[type+'State'](null, null, url);\n\t}\n}\n\n\nfunction getCurrentUrl() {\n\tlet url;\n\tif (customHistory && customHistory.location) {\n\t\turl = customHistory.location;\n\t}\n\telse if (customHistory && customHistory.getCurrentLocation) {\n\t\turl = customHistory.getCurrentLocation();\n\t}\n\telse {\n\t\turl = typeof location!=='undefined' ? location : EMPTY;\n\t}\n\treturn `${url.pathname || ''}${url.search || ''}`;\n}\n\n\n\nfunction route(url, replace=false) {\n\tif (typeof url!=='string' && url.url) {\n\t\treplace = url.replace;\n\t\turl = url.url;\n\t}\n\n\t// only push URL into history if we can handle it\n\tif (canRoute(url)) {\n\t\tsetUrl(url, replace ? 'replace' : 'push');\n\t}\n\n\treturn routeTo(url);\n}\n\n\n/** Check if the given URL can be handled by any router instances. */\nfunction canRoute(url) {\n\tfor (let i=ROUTERS.length; i--; ) {\n\t\tif (ROUTERS[i].canRoute(url)) return true;\n\t}\n\treturn false;\n}\n\n\n/** Tell all router instances to handle the given URL.  */\nfunction routeTo(url) {\n\tlet didRoute = false;\n\tfor (let i=0; i<ROUTERS.length; i++) {\n\t\tif (ROUTERS[i].routeTo(url)===true) {\n\t\t\tdidRoute = true;\n\t\t}\n\t}\n\tfor (let i=subscribers.length; i--; ) {\n\t\tsubscribers[i](url);\n\t}\n\treturn didRoute;\n}\n\n\nfunction routeFromLink(node) {\n\t// only valid elements\n\tif (!node || !node.getAttribute) return;\n\n\tlet href = node.getAttribute('href'),\n\t\ttarget = node.getAttribute('target');\n\n\t// ignore links with targets and non-path URLs\n\tif (!href || !href.match(/^\\//g) || (target && !target.match(/^_?self$/i))) return;\n\n\t// attempt to route, if no match simply cede control to browser\n\treturn route(href);\n}\n\n\nfunction handleLinkClick(e) {\n\tif (e.ctrlKey || e.metaKey || e.altKey || e.shiftKey || e.button!==0) return;\n\trouteFromLink(e.currentTarget || e.target || this);\n\treturn prevent(e);\n}\n\n\nfunction prevent(e) {\n\tif (e) {\n\t\tif (e.stopImmediatePropagation) e.stopImmediatePropagation();\n\t\tif (e.stopPropagation) e.stopPropagation();\n\t\te.preventDefault();\n\t}\n\treturn false;\n}\n\n\nfunction delegateLinkHandler(e) {\n\t// ignore events the browser takes care of already:\n\tif (e.ctrlKey || e.metaKey || e.altKey || e.shiftKey || e.button!==0) return;\n\n\tlet t = e.target;\n\tdo {\n\t\tif (String(t.nodeName).toUpperCase()==='A' && t.getAttribute('href')) {\n\t\t\tif (t.hasAttribute('native')) return;\n\t\t\t// if link is handled by the router, prevent browser defaults\n\t\t\tif (routeFromLink(t)) {\n\t\t\t\treturn prevent(e);\n\t\t\t}\n\t\t}\n\t} while ((t=t.parentNode));\n}\n\n\nlet eventListenersInitialized = false;\n\nfunction initEventListeners() {\n\tif (eventListenersInitialized) return;\n\n\tif (typeof addEventListener==='function') {\n\t\tif (!customHistory) {\n\t\t\taddEventListener('popstate', () => {\n\t\t\t\trouteTo(getCurrentUrl());\n\t\t\t});\n\t\t}\n\t\taddEventListener('click', delegateLinkHandler);\n\t}\n\teventListenersInitialized = true;\n}\n\n\nclass Router extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tif (props.history) {\n\t\t\tcustomHistory = props.history;\n\t\t}\n\n\t\tthis.state = {\n\t\t\turl: props.url || getCurrentUrl()\n\t\t};\n\n\t\tinitEventListeners();\n\t}\n\n\tshouldComponentUpdate(props) {\n\t\tif (props.static!==true) return true;\n\t\treturn props.url!==this.props.url || props.onChange!==this.props.onChange;\n\t}\n\n\t/** Check if the given URL can be matched against any children */\n\tcanRoute(url) {\n\t\tconst children = toChildArray(this.props.children);\n\t\treturn this.getMatchingChildren(children, url, false).length > 0;\n\t}\n\n\t/** Re-render children with a new URL to match against. */\n\trouteTo(url) {\n\t\tthis.setState({ url });\n\n\t\tconst didRoute = this.canRoute(url);\n\n\t\t// trigger a manual re-route if we're not in the middle of an update:\n\t\tif (!this.updating) this.forceUpdate();\n\n\t\treturn didRoute;\n\t}\n\n\tcomponentWillMount() {\n\t\tROUTERS.push(this);\n\t\tthis.updating = true;\n\t}\n\n\tcomponentDidMount() {\n\t\tif (customHistory) {\n\t\t\tthis.unlisten = customHistory.listen((location) => {\n\t\t\t\tthis.routeTo(`${location.pathname || ''}${location.search || ''}`);\n\t\t\t});\n\t\t}\n\t\tthis.updating = false;\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (typeof this.unlisten==='function') this.unlisten();\n\t\tROUTERS.splice(ROUTERS.indexOf(this), 1);\n\t}\n\n\tcomponentWillUpdate() {\n\t\tthis.updating = true;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.updating = false;\n\t}\n\n\tgetMatchingChildren(children, url, invoke) {\n\t\treturn children\n\t\t\t.filter(prepareVNodeForRanking)\n\t\t\t.sort(pathRankSort)\n\t\t\t.map( vnode => {\n\t\t\t\tlet matches = exec(url, vnode.props.path, vnode.props);\n\t\t\t\tif (matches) {\n\t\t\t\t\tif (invoke !== false) {\n\t\t\t\t\t\tlet newProps = { url, matches };\n\t\t\t\t\t\tassign(newProps, matches);\n\t\t\t\t\t\tdelete newProps.ref;\n\t\t\t\t\t\tdelete newProps.key;\n\t\t\t\t\t\treturn cloneElement(vnode, newProps);\n\t\t\t\t\t}\n\t\t\t\t\treturn vnode;\n\t\t\t\t}\n\t\t\t}).filter(Boolean);\n\t}\n\n\trender({ children, onChange }, { url }) {\n\t\tlet active = this.getMatchingChildren(toChildArray(children), url, true);\n\n\t\tlet current = active[0] || null;\n\n\t\tlet previous = this.previousUrl;\n\t\tif (url!==previous) {\n\t\t\tthis.previousUrl = url;\n\t\t\tif (typeof onChange==='function') {\n\t\t\t\tonChange({\n\t\t\t\t\trouter: this,\n\t\t\t\t\turl,\n\t\t\t\t\tprevious,\n\t\t\t\t\tactive,\n\t\t\t\t\tcurrent\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn current;\n\t}\n}\n\nconst Link = (props) => (\n\tcreateElement('a', assign({ onClick: handleLinkClick }, props))\n);\n\nconst Route = props => createElement(props.component, props);\n\nRouter.subscribers = subscribers;\nRouter.getCurrentUrl = getCurrentUrl;\nRouter.route = route;\nRouter.Router = Router;\nRouter.Route = Route;\nRouter.Link = Link;\nRouter.exec = exec;\n\nexport { subscribers, getCurrentUrl, route, Router, Route, Link, exec };\nexport default Router;\n","import { getInitialTable } from \"./table\";\n\nexport class GameModel {\n  constructor() {\n    this.moveCount = 0\n\n    this.pendingMoveCount = 0\n    this.desiredDepth = 0\t//will set after creating, at each move step\n    this.returnedMoves = []\n\n    // this._id = _id,\n    //   this.wName = wName,\n    //   this.bName = bName,\n\n\n    //   this.aiToMove = false //unused\n    // this.toBeChecked = true //unused\n    this.gameIsOn = true\n    this.whiteWon = false\n    this.blackWon = false\n    this.isDraw = false\n\n    this.askWhiteDraw = false\n    this.askBlackDraw = false\n\n    this.whiteCanForceDraw = false\n    this.blackCanForceDraw = false\n\n\n    // this.learner = false\n    // this.learnerIsBusy = false\n\n\n\n    this.wNext = true;\n      // this.aiOn = false;\n      // this.chat = [];\n      this.moves = [];\n      // this.pollNum = 1;\n      this.allPastTables = []\n\n    this.created = Date.now();\n    this.moved = null\n\n    this.table = getInitialTable();\n\n    // this.table = new Array(8) //create 8x8 array\n    // for (var i = 0; i < 8; i++) {\n    //   this.table[i] = new Array(8)\n    // }\n\n    // for (var j = 2; j < 6; j++) { //make the blanks blank\n    //   for (i = 0; i < 8; i++) {\n    //     this.table[i][j] = [0, 0, 0, false, false]\n    //   }\n    // }\n\n    // for (var i = 0; i < 8; i++) { //row of white pawns\n\n    //   this.table[i][1] = [2, 1, 0, false, false] //,pawnCanMove]\n    // }\n    // for (var i = 0; i < 8; i++) { //row of black pawns\n    //   this.table[i][6] = [1, 1, 0, false, false] //,pawnCanMove]\n    // }\n\n    // this.table[0][0] = [2, 4, 0, true, false] //,rookCanMove]\t\t\t\t//rooks\t\t//0 stands for times it moved\n    // this.table[7][0] = [2, 4, 0, true, false] //,rookCanMove]\n    // this.table[0][7] = [1, 4, 0, true, false] //,rookCanMove]\n    // this.table[7][7] = [1, 4, 0, true, false] //,rookCanMove]\n\n    // this.table[1][0] = [2, 3, 0, true, false] //,horseCanMove]\t\t\t\t\t//knights\n    // this.table[6][0] = [2, 3, 0, true, false] //,horseCanMove]\n    // this.table[1][7] = [1, 3, 0, true, false] //,horseCanMove]\n    // this.table[6][7] = [1, 3, 0, true, false] //,horseCanMove]\n\n    // this.table[2][0] = [2, 2, 0, true, false] //,bishopCanMove]\t\t\t\t//bishops\n    // this.table[5][0] = [2, 2, 0, true, false] //,bishopCanMove]\n    // this.table[2][7] = [1, 2, 0, true, false] //,bishopCanMove]\n    // this.table[5][7] = [1, 2, 0, true, false] //,bishopCanMove]\n\n    // this.table[3][0] = [2, 5, 0, true, false] //,queenCanMove]\t\t\t\t//w queen\n    // this.table[4][0] = [2, 9, 0, true, false] //,kingCanMove]\t\t\t\t//w king\n\n    // this.table[3][7] = [1, 5, 0, true, false] //,queenCanMove]\t\t\t\t//b q\n    // this.table[4][7] = [1, 9, 0, true, false] //,kingCanMove]\t\t\t\t//b k\n\n    // this.table = addMovesToTable(this.table, true)\n    //protectPieces(this.table,true)\n    //protectPieces(this.table,false)\n  }\n}","import { addMovesToTable } from \"../engine/engine\";\n\nexport const getInitialTable = () => {\n  const table = [];\n\n  // create 8 rows\n  for (let i = 0; i < 8; i += 1) {\n    table[i] = [];\n  }\n\n  //make blank cells blank\n  for (let j = 2; j < 6; j += 1) {\n    for (let i = 0; i < 8; i += 1) {\n      table[i][j] = [0, 0, 0, false, false]\n    }\n  }\n\n  for (let i = 0; i < 8; i++) { //row of white pawns\n\n    table[i][1] = [2, 1, 0, false, false] //,pawnCanMove]\n  }\n  for (let i = 0; i < 8; i++) { //row of black pawns\n    table[i][6] = [1, 1, 0, false, false] //,pawnCanMove]\n  }\n\n  table[0][0] = [2, 4, 0, true, false] //,rookCanMove]\t\t\t\t//rooks\t\t//0 stands for times it moved\n  table[7][0] = [2, 4, 0, true, false] //,rookCanMove]\n  table[0][7] = [1, 4, 0, true, false] //,rookCanMove]\n  table[7][7] = [1, 4, 0, true, false] //,rookCanMove]\n\n  table[1][0] = [2, 3, 0, true, false] //,horseCanMove]\t\t\t\t\t//knights\n  table[6][0] = [2, 3, 0, true, false] //,horseCanMove]\n  table[1][7] = [1, 3, 0, true, false] //,horseCanMove]\n  table[6][7] = [1, 3, 0, true, false] //,horseCanMove]\n\n  table[2][0] = [2, 2, 0, true, false] //,bishopCanMove]\t\t\t\t//bishops\n  table[5][0] = [2, 2, 0, true, false] //,bishopCanMove]\n  table[2][7] = [1, 2, 0, true, false] //,bishopCanMove]\n  table[5][7] = [1, 2, 0, true, false] //,bishopCanMove]\n\n  table[3][0] = [2, 5, 0, true, false] //,queenCanMove]\t\t\t\t//w queen\n  table[4][0] = [2, 9, 0, true, false] //,kingCanMove]\t\t\t\t//w king\n\n  table[3][7] = [1, 5, 0, true, false] //,queenCanMove]\t\t\t\t//b q\n  table[4][7] = [1, 9, 0, true, false] //,kingCanMove]\t\t\t\t//b k\n\n  // table = addMovesToTable(table, true)\n\n  return addMovesToTable(table, true);\n  // table;\n};\n","import { h } from 'preact';\nimport style from './style.scss';\n\nimport { useContext, useState } from 'preact/hooks';\nimport GameContext from '../../context/GameContext';\nimport { moveInTable, singleThreadAi } from '../../engine/engine';\n\nexport const Board = () => {\n  const { gameState, setGameState } = useContext(GameContext);\n  const { table } = gameState;\n  const [firstClickedCellAddress, setFirstClickedCellAddress] = useState();\n\n  const cellSize = Math.min(window.innerHeight, window.innerWidth) / 9;\n\n  const whiteState = [];\n  for (let i = 0; i < 8; i += 1) {\n    whiteState[i] = [];\n    for (let j = 0; j < 8; j += 1) {\n      // if(oldValue&&oldValue[i][j][0] != newValue[i][j][0]) scope.input[i][j][15] = true       //highlight moved\n      whiteState[i][j] = table[j][7 - i]\n      if ((i + j) & 1) whiteState[i][j][7] = true     //grey fields\n    }\n  }\n\n  const clearHighlights = (game) => Object.assign({}, game, {\n    table: game.table.map(row => row.map(cell => Object.assign({}, cell, { 9: null })))\n  });\n\n  const cellClickHandler = (rowIndex, colIndex, cell) => {\n    if (!firstClickedCellAddress) {\n      cell[9] = true; // selected\n      cell[5].forEach(([x, y]) => {\n        table[x][y][9] = true; //highlighted\n      })\n      setFirstClickedCellAddress({ rowIndex, colIndex });\n      return;\n    }\n\n    const moveToMake = [\n      firstClickedCellAddress.colIndex,\n      7 - firstClickedCellAddress.rowIndex,\n      colIndex,\n      7 - rowIndex\n    ];\n\n    if (moveToMake[0] === moveToMake[2] && moveToMake[1] === moveToMake[3]) {\n      setFirstClickedCellAddress(null);\n      setGameState(clearHighlights(gameState));\n      return;\n    }\n\n    const nextGameState = moveInTable(moveToMake, gameState)\n    setGameState(nextGameState);\n    setFirstClickedCellAddress(null);\n\n    setTimeout(() => {\n      const { moveCoords } = singleThreadAi(nextGameState, 3)\n      setGameState(Object.assign({}, moveInTable(moveCoords, nextGameState)));\n    }, 0);\n  };\n\n  return (<div>\n    <table className=\"main-table unselectable\">\n      <tbody>\n        <tr className=\"heading row0\" style={{ width: cellSize, height: 1 }}>\n          <td></td>\n          <td>A</td>\n          <td>B</td>\n          <td>C</td>\n          <td>D</td>\n          <td>E</td>\n          <td>F</td>\n          <td>G</td>\n          <td>H</td>\n        </tr>\n        {whiteState.map((row, rowIndex) => (<tr key={rowIndex} style={{ height: cellSize }}>\n          <td>{8 - rowIndex}</td>\n          {row.map((cell, colIndex) => (<td key={colIndex} className={cell[7] ? style.darker : style.square}>\n            <div style={{ height: cellSize }} onClick={() => cellClickHandler(rowIndex, colIndex, cell)}>\n              <img src={`/assets/pieces/${cell[0]}${cell[1]}.png`} height={cellSize} width={cellSize} class={`${cell[8] || cell[9] ? style.selected : ''}${cell[15] ? style.selected2 : ''}`} />\n            </div>\n          </td>))}\n        </tr>))}\n      </tbody>\n    </table>\n  </div>);\n};\n","import { h } from 'preact';\nimport { Link } from 'preact-router/match';\nimport style from './style.css';\nimport GameContext from '../../context/GameContext';\nimport { GameModel } from '../../model/Game';\nimport { useState } from 'preact/hooks';\nimport { Board } from '../board';\n\nconst Game = () => {\n\tconst [gameState, setGameState] = useState(new GameModel());\n  const context = { gameState, setGameState };\n\n\treturn (\n\t\t<GameContext.Provider value={context}>\n        <Board />\n    </GameContext.Provider>\n\t);\n};\n\nexport default Game;\n","import { h } from 'preact';\n// import style from './style.css';\nimport Game from '../../components/game';\n\n// Note: `user` comes from the URL, courtesy of our router\nconst GameRoute = () => {\n\treturn (<Game />);\n};\n\nexport default GameRoute;\n","import { h } from 'preact';\nimport { Router } from 'preact-router';\n\nimport Header from './header';\n\n// Code-splitting is automated for `routes` directory\nimport Home from '../routes/home';\nimport Game from '../routes/game';\n\nconst App = () => (\n\t<div id=\"app\">\n\t\t<Header />\n\t\t<div id=\"main-content\">\n\t\t\t<Router>\n\t\t\t\t<Home path=\"/\" />\n\t\t\t\t<Game path=\"/game/\" />\n\t\t\t</Router>\n\t\t</div>\n\t</div>\n)\n\nexport default App;\n","export const msgClient = (\n  function createMsgService(optionalOptions) {\n    if (typeof window === 'undefined') return { ws: () => ({ do: async() => {} }) };\n\n    var getArgs = require('./lib/getargs')();\n   \n    var msgOptions = {\n      mySocketRules: {},\n      waitingHandlersByConvId: {},\n      serviceName: 'client-' + Math.random() * Math.random(),\n      waitingCbsByConvId: {},\n      waitingErrHandlersByConvId: {},\n      wsRoutes: {},\n    };\n\n    // msgOptions.createRule = require('./lib/createRule')(msgOptions); \n    msgOptions.createSocketRule = require('./lib/createSocketRule')(msgOptions);\n    // msgOptions.toGtw = require('./lib/toGtw')(msgOptions); \n\n    optionalOptions = optionalOptions || {};\n    if (optionalOptions && typeof optionalOptions === 'object') Object.keys(optionalOptions).forEach(function (key) {\n      msgOptions[key] = optionalOptions[key];\n      // if(key === 'console.log') console.log = optionalOptions.console.log\n    });\n\n    if (!msgOptions.serviceLongName) msgOptions.serviceLongName = msgOptions.serviceName;\n    console.log('MSG Client starting...');\n\n    var msgClient = {\n      cookies: require('./lib/cookies'),\n      sharedWorker(scriptLocation){\n        console.log('Starting MSG Shared Worker from ' + scriptLocation);\n        return new SharedWorker(scriptLocation);\n      },\n      ws: function (route) {\n\n        var wsOptions = {\n          onConnect: () => {},\n          onReConnect: () => {},\n          connectCount: 0,\n        };\n\n        var waitForConnect = function () {\n          const timeout = 20; //sec\n          const deadLine = new Date().getTime() + timeout * 1000;\n          return new Promise(function (res, rej) {\n            function check() {\n              if (msgOptions.wsRoutes[route].ws.readyState === 1) return res();\n              if (new Date().getTime() > deadLine) return rej('Connect timeout (' + timeout + 's)');\n              setTimeout(check, 100);\n            }\n            check();\n          });\n        };\n\n        function start() {\n          var ws = new WebSocket(route);\n          msgOptions.wsRoutes[route].ws = ws;\n\n          ws.onopen = function (openEvent) {\n            msgOptions.log('WS route ' + route + ' connected.');\n            if (wsOptions.connectCount) wsOptions.onReConnect(openEvent);\n            wsOptions.connectCount += 1;\n            wsOptions.onConnect(openEvent);\n          };\n          ws.onmessage = function (evt) {\n            var message;\n            try {\n              message = JSON.parse(evt.data);\n            } catch (e) {\n              message = evt.data;\n            }\n            var callBack = msgOptions.wsRoutes[route].callBacks[message.command];\n            if (!callBack) return console.log('No callback found, message:', message, callbacks);\n            callBack(message);\n          };\n          ws.onerror = function (err) {\n            console.log('WS ERROR on route ' + route + ': ' + err.message + '\\n' + err.stack);\n          };\n          ws.onclose = function () {\n            console.log('WS connection on route ' + route + ' closed, retry in 2s...');\n            setTimeout(function () {\n              start();\n            }, 2000);\n          };\n        }\n\n        function askGtw(command, data) {\n          return new Promise(function (res3, rej3) {\n            var tempConversationId = Math.random().toString();\n            data.command = command;\n            try {\n              msgOptions.waitingCbsByConvId[tempConversationId] = function (reply) {\n                delete msgOptions.waitingCbsByConvId[tempConversationId];\n                delete msgOptions.waitingErrHandlersByConvId[tempConversationId];\n                return res3(reply);\n              };\n\n              msgOptions.waitingErrHandlersByConvId[tempConversationId] = function(e) {\n                delete msgOptions.waitingCbsByConvId[tempConversationId];\n                delete msgOptions.waitingErrHandlersByConvId[tempConversationId];\n                return rej3(e);\n              };\n\n              waitForConnect()\n                .then(function () {\n                  try {\n                    msgOptions.wsRoutes[route].ws.send(JSON.stringify(Object.assign({\n                      owner: msgOptions.serviceName,\n                      tempConversationId: tempConversationId\n                    }, data)));\n                  } catch (ex) {\n                    return rej3(ex);\n                  }\n                }, rej3);\n            } catch (te) {\n              rej3(te);\n            }\n          });\n        }\n\n        function toGtw(command, data, conversationId) {\n          return new Promise(function (res3, rej3) {\n            try {\n              waitForConnect()\n                .then(function () {\n                  try {\n                    msgOptions.wsRoutes[route].ws.send(JSON.stringify(Object.assign({\n                      command: command,\n                      data: data,\n                      owner: msgOptions.serviceLongName,\n                      conversationId: conversationId,\n                      serviceName: msgOptions.serviceName,\n                      serviceLongName: msgOptions.serviceLongName,\n                    }, data)));\n                  } catch (ex) {\n                    return rej3(ex);\n                  }\n\n\n                }, rej3).then(res3, rej3);\n            } catch (te) {\n              rej3(te);\n            }\n          });\n        }\n\n        var myCallBacks = {\n          doStarted: function doStarted(message) {\n            msgOptions.waitingCbsByConvId[message.tempConversationId](message);\n            delete msgOptions.waitingCbsByConvId[message.tempConversationId];\n          },\n          answer: function answer(message) {\n            msgOptions.waitingCbsByConvId[message.conversationId](message.data);\n            delete msgOptions.waitingCbsByConvId[message.conversationId];\n          },\n          error: function error(message) {\n            console.error(message);\n            msgOptions.waitingHandlersByConvId[message.conversationId].errorHandler(message.data);\n          },\n          do: function (message) {\n            // console.log({msgOptions, message}, '#############')\n            var thisHandler = msgOptions.mySocketRules[message.argObj.cmd].cb;\n            var newArgObj = getArgs(message.argObj.args, msgOptions.mySocketRules[message.argObj.cmd].cmdArgs.keys);\n            thisHandler(newArgObj, {\n              message: message,\n              conversationId: message.conversationId,\n              send: function (data) {\n                toGtw('answer', data, message.conversationId);\n              },\n              error: function (err) {\n                toGtw('error', err, message.conversationId);\n              },\n            });\n          },\n        };\n\n        if (!msgOptions.wsRoutes[route]) {\n          var callbacks = Object.assign({}, myCallBacks);\n          msgOptions.wsRoutes[route] = {\n            callBacks: callbacks,\n            route: route,\n          };\n\n          start();\n        }\n\n        // var waitForConnect = function(){\n        //   return new Promise(function(res, rej){\n        //     function check(){\n        //       if (msgOptions.wsRoutes[route].ws.readyState === 1) return res();\n        //       setTimeout(check, 100);\n        //     }\n        //     check();\n        //   });\n        // };\n\n        function objDo(cmd1) {\n          var argObj = getArgs(arguments);\n\n          var handlers = {\n            dataHandler: function () { msgOptions.log('in pure datahandler!!!!!!!!!!!'); },\n            errorHandler: function (e) { msgOptions.log(e, 'in pure errorhandler!!!!!!!!!!!'); },\n          };\n\n          if (argObj.cb) {\n\n            var comms = {\n              onData: function (onDataCb) {\n                handlers.dataHandler = onDataCb;\n              }\n            };\n            argObj.cb(comms);\n          }\n\n          return new Promise(function (res, rej) {\n            waitForConnect()\n              .then(function () {\n                return askGtw('do', { argObj });\n              })\n              .then(function (askRes) {\n      \n                handlers.errorHandler = function (e) {\n                  delete msgOptions.waitingCbsByConvId[askRes.conversationId];\n                  delete msgOptions.waitingHandlersByConvId[askRes.conversationId];\n                  return rej(e);\n                };\n                \n                msgOptions.waitingCbsByConvId[askRes.conversationId] = function (answer) {\n                  delete msgOptions.waitingCbsByConvId[askRes.conversationId];\n                  delete msgOptions.waitingHandlersByConvId[askRes.conversationId];\n                  return res(answer);\n                };\n\n                msgOptions.waitingHandlersByConvId[askRes.conversationId] = handlers;\n              }, function (error) { msgOptions.log(error); rej(error.message + '\\n' + error.stack); });\n          });\n        }\n\n        function objOn(cmd1) {\n          var argObj = getArgs(arguments);\n          return new Promise(function (res, rej) {\n            return msgOptions.createSocketRule(argObj);\n          });\n        }\n\n        function distObj(_options) {\n          let gotInitValue = false;\n          const waitForInitValues = () => new Promise((res, rej) => {\n            const check = () => {\n              if (gotInitValue) return res();\n              setTimeout(check, 100);\n            };\n            check();\n          });\n          const options = typeof _options === 'string'\n            ? {\n              name: _options,\n            }\n            : _options;\n\n          if (typeof options.onChange === 'function') options.onChange = [options.onChange];\n          if (!options.onChange) options.onChange = [];\n          if (!options.store) options.store = {};\n\n          Object.keys(options.store).forEach(k => {\n            if (typeof options.store[k] === 'object') {\n              const subDistObj = distObj({\n                name: options.name + '\\\\' + k,\n                store: options.store[k],\n                dontGetInitVal: true,\n              });\n              options.store[k] = subDistObj.data;\n              options.onChange.forEach(subDistObj.onChange);\n            }\n          });\n\n          const data = new Proxy(options.store, {\n            set: function (obj, prop, value) {\n              // The default behavior to store the value\n              obj[prop] = value;\n\n              waitForInitValues()\n                .then(\n                  () => {\n                    return objDo('$$MSG_DISTOBJ_CHANGE_' + options.name, { name: options.name, prop, value });\n                  }\n                )\n                .then(function (re) {\n                  options.onChange.forEach(fn => fn({ prop, value, self: true }));\n                  \n                  if (typeof value === 'object') {\n\n                    const subDistObj = distObj({\n                      name: options.name + '\\\\' + prop,\n                      store: value,\n                      dontGetInitVal: true,\n                    });\n\n                    obj[prop] = subDistObj.data;\n                    options.onChange.forEach(subDistObj.onChange);\n\n                  }\n                }, console.error);\n\n              // Indicate success\n              return true;\n            },\n            deleteProperty: function(obj, prop) {\n              delete obj[prop];\n              objDo('$$MSG_DISTOBJ_CHANGE_' + options.name, { name: options.name, prop, deleted: true }).then(function (){\n                options.onChange.forEach(fn => fn({ prop, deleted: true, self: true }));\n              }, console.error);\n              return true;\n            },\n          });\n\n          if (options.dontGetInitVal) gotInitValue = true;\n          if (!options.dontGetInitVal) objDo('$$MSG_GET_DISTOBJ_' + options.name, { name: options.name, value: options.store }).then(\n            obj => {\n              Object.keys(obj).forEach(k => {\n                options.store[k] = obj[k];\n                if (typeof obj[k] === 'object') {\n                  const subDistObj = distObj({\n                    name: options.name + '\\\\' + k,\n                    store: obj[k],\n                    dontGetInitVal: true,\n                  });\n                  options.store[k] = subDistObj.data;\n                  options.onChange.forEach(subDistObj.onChange);\n                }\n                options.onChange.forEach(fn => fn({ prop: k, value: obj[k] }));\n              });\n              gotInitValue = true;\n            },\n            msgOptions.log\n          );\n\n          console.log('signing up for $$MSG_DISTOBJ_CHANGE_' + options.name); \n          objOn('$$MSG_DISTOBJ_CHANGE_' + options.name, {}, function (argObj, comms) {\n\n            const prop = argObj.cmdArgs.prop;\n            const value = argObj.cmdArgs.value;\n            const deleted = argObj.cmdArgs.deleted;\n\n            options.store[prop] = value;\n            if (deleted) delete options.store[prop];\n\n            if (typeof value === 'object') {\n\n              const subDistObj = distObj({\n                name: options.name + '\\\\' + prop,\n                store: value,\n                dontGetInitVal: true,\n              });\n\n              options.store[prop] = subDistObj.data;\n              options.onChange.forEach(subDistObj.onChange);\n\n            }\n            \n            options.onChange.forEach(fn => fn({ prop, value, deleted }));\n\n            comms.send({\n              message: 'Change on distObj ' + options.name + ' registered',\n              prop,\n            });\n\n          });\n\n          const onChange = function (fn) {\n            options.onChange.push(fn);\n          };\n\n          return {\n            data,\n            onChange,\n            options,\n            waitForReady: waitForInitValues,\n          };\n        }\n\n        return {\n          do: objDo,\n          on: objOn,\n          distObj: distObj,\n          onConnect: (fn) => wsOptions.onConnect = fn,\n          onReConnect: (fn) => wsOptions.onReConnect = fn,\n          options: wsOptions,\n        };\n      },\n    };\n\n    return msgClient;\n  }\n)({\n  serviceName: 'client-' + Math.random(),\n  PORT: 9876,\n  log: console.log,\n});","import './style';\nimport App from './components/app';\nimport { initWorkers } from './worker';\nimport { msgClient } from '../../msg/src/client';\n\nconst gameSocket = msgClient.ws('ws://192.168.1.164:3300/gameSocket');\nconsole.log({gameSocket})\n\ngameSocket.do('newGame', { a: 1 }).then(console.log);\n\n\n\n\ninitWorkers();\n\nexport default App;\n","export const initWorkers = () => {\n  console.log('Starting workers..');\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"darker\":\"darker__3FUDV\",\"square\":\"square__2d7yg\",\"selected2\":\"selected2__215Pa\",\"fadeIt\":\"fadeIt__2Id_H\",\"selected\":\"selected__1JKN2\"};","module.exports = function isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n};\n","module.exports = function createSocketRuleCreator(msgOptions){\n\n  return function createSocketRule(argObj, rule = {}){\n    rule.type = argObj.publicSocket ? 'publicSocket' : 'socket';\n    rule.publicSocketRoute = argObj.publicSocket ? argObj.publicSocket.route : undefined;\n    rule.cmd = argObj.cmd;\n    msgOptions.mySocketRules[rule.cmd] = argObj;\n    return rule;\n  };\n};","\nconst EMPTY = {};\n\nexport function assign(obj, props) {\n\t// eslint-disable-next-line guard-for-in\n\tfor (let i in props) {\n\t\tobj[i] = props[i];\n\t}\n\treturn obj;\n}\n\nexport function exec(url, route, opts) {\n\tlet reg = /(?:\\?([^#]*))?(#.*)?$/,\n\t\tc = url.match(reg),\n\t\tmatches = {},\n\t\tret;\n\tif (c && c[1]) {\n\t\tlet p = c[1].split('&');\n\t\tfor (let i=0; i<p.length; i++) {\n\t\t\tlet r = p[i].split('=');\n\t\t\tmatches[decodeURIComponent(r[0])] = decodeURIComponent(r.slice(1).join('='));\n\t\t}\n\t}\n\turl = segmentize(url.replace(reg, ''));\n\troute = segmentize(route || '');\n\tlet max = Math.max(url.length, route.length);\n\tfor (let i=0; i<max; i++) {\n\t\tif (route[i] && route[i].charAt(0)===':') {\n\t\t\tlet param = route[i].replace(/(^:|[+*?]+$)/g, ''),\n\t\t\t\tflags = (route[i].match(/[+*?]+$/) || EMPTY)[0] || '',\n\t\t\t\tplus = ~flags.indexOf('+'),\n\t\t\t\tstar = ~flags.indexOf('*'),\n\t\t\t\tval = url[i] || '';\n\t\t\tif (!val && !star && (flags.indexOf('?')<0 || plus)) {\n\t\t\t\tret = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatches[param] = decodeURIComponent(val);\n\t\t\tif (plus || star) {\n\t\t\t\tmatches[param] = url.slice(i).map(decodeURIComponent).join('/');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse if (route[i]!==url[i]) {\n\t\t\tret = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (opts.default!==true && ret===false) return false;\n\treturn matches;\n}\n\nexport function pathRankSort(a, b) {\n\treturn (\n\t\t(a.rank < b.rank) ? 1 :\n\t\t\t(a.rank > b.rank) ? -1 :\n\t\t\t\t(a.index - b.index)\n\t);\n}\n\n// filter out VNodes without attributes (which are unrankeable), and add `index`/`rank` properties to be used in sorting.\nexport function prepareVNodeForRanking(vnode, index) {\n\tvnode.index = index;\n\tvnode.rank = rankChild(vnode);\n\treturn vnode.props;\n}\n\nexport function segmentize(url) {\n\treturn url.replace(/(^\\/+|\\/+$)/g, '').split('/');\n}\n\nexport function rankSegment(segment) {\n\treturn segment.charAt(0)==':' ? (1 + '*+?'.indexOf(segment.charAt(segment.length-1))) || 4 : 5;\n}\n\nexport function rank(path) {\n\treturn segmentize(path).map(rankSegment).join('');\n}\n\nfunction rankChild(vnode) {\n\treturn vnode.props.default ? 0 : rank(vnode.props.path);\n}\n","// var JSON5 = require('json5');\nvar isFunction = require('./isfunction');\n\nmodule.exports = function getArgsCreator(globOpts){\n  if (!globOpts) globOpts = {};\n\n  function tryParse(strObj){\n    try{\n      return JSON.parse(strObj);\n    } catch (e) {\n      return strObj;\n    }\n  }\n\n  return function getArgs(a, keys){\n    if (!keys) keys = globOpts.keys;\n    var len = Object.keys(a).length;\n    var args = [];\n    for (var j = 0; j < len; j += 1){args.push(a[j]);}\n    var argsLen = args.length;\n    // get first string argument\n    var cmdStr = null;\n    var i = 0;\n    do {\n      cmdStr = args[i];\n      i += 1;\n    } while (typeof cmdStr !== 'string' && i < argsLen);\n    \n    //remove spaces from object-like arguments\n    var insideObj = 0;\n    var csI = cmdStr.length;\n    while(csI--){\n      if(cmdStr[csI] === '}') insideObj += 1;\n      if(cmdStr[csI] === '{') insideObj -= 1;\n\n      if (insideObj && cmdStr[csI] === ' '){\n        cmdStr = cmdStr.substring(0, csI) + cmdStr.substring(csI + 1, cmdStr.length);\n      } \n    }\n\n\n    // break it apart\n    var splitCmd = cmdStr.split(' ');\n    var cmd = splitCmd[0];\n\n\n    // get first Object argument\n    var cmdArgs = null;\n    var m = 0;\n    do {\n      cmdArgs = args[m];\n      m += 1;\n    } while (typeof cmdArgs !== 'object' && m < argsLen);\n    if (typeof cmdArgs !== 'object') cmdArgs = {};\n\n    if(!cmdArgs) cmdArgs = {};\n\n\n    // parse options from string\n    var splitCmdTemp = splitCmd.slice(1);\n    var k = 0;\n    while (splitCmdTemp[k]) {\n      var part = splitCmdTemp[k];\n      if (part[0] === '-') {\n        var key = part.substring(1);\n        var altKey = '';\n\n        // found switch, check for long switch name\n        if (keys && keys.forEach) {\n          if (keys.indexOf(key) < 0){\n\n            // switch name is not in list, look for match\n            var x = keys.length;\n            while (x--) {\n              if(keys[x].indexOf(key) === 0 && cmdArgs[keys[x]] === undefined){\n                altKey = keys[x];\n              }\n            }\n\n          }\n        }\n\n        if (splitCmdTemp[k + 1] && splitCmdTemp[k + 1][0] !== '-') {\n          // has value\n          var thisVal = tryParse(splitCmdTemp[k + 1]);\n          cmdArgs[key] = thisVal;\n          if (altKey) cmdArgs[altKey] = thisVal;\n          splitCmdTemp.splice(k + 1, 1);\n        } else {\n          // no value, means true\n          cmdArgs[key] = 1;\n          if (altKey) cmdArgs[altKey] = 1;\n        }\n      } else {\n        // found default arg\n        cmdArgs.param = part;\n      }\n      k += 1;\n    }\n    \n    // get last function argument as cb\n    var l = args.length;\n    var cb;\n    // while (l--) {\n    for (var cbi = 0; cbi < l; cbi += 1) {\n      if (isFunction(args[cbi])) {\n        cb = cb ? [].concat(cb).concat(args[cbi]) : args[cbi];\n      }\n    }\n    var cbs = [].concat(cb);\n    if (!cb) cb = () => {};\n\n    return {\n      param: cmdArgs.param,\n      splitCmd: splitCmd,\n      cmd: splitCmd[0],\n      cmdStr: cmdStr,\n      cmdArgs: cmdArgs,\n      args: args,\n      cb: cb,\n      cbs,\n    };\n  }; \n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.Link = exports.Match = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _preact = require('preact');\n\nvar _preactRouter = require('preact-router');\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Match = exports.Match = function (_Component) {\n\t_inherits(Match, _Component);\n\n\tfunction Match() {\n\t\tvar _temp, _this, _ret;\n\n\t\t_classCallCheck(this, Match);\n\n\t\tfor (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\targs[_key] = arguments[_key];\n\t\t}\n\n\t\treturn _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.update = function (url) {\n\t\t\t_this.nextUrl = url;\n\t\t\t_this.setState({});\n\t\t}, _temp), _possibleConstructorReturn(_this, _ret);\n\t}\n\n\tMatch.prototype.componentDidMount = function componentDidMount() {\n\t\t_preactRouter.subscribers.push(this.update);\n\t};\n\n\tMatch.prototype.componentWillUnmount = function componentWillUnmount() {\n\t\t_preactRouter.subscribers.splice(_preactRouter.subscribers.indexOf(this.update) >>> 0, 1);\n\t};\n\n\tMatch.prototype.render = function render(props) {\n\t\tvar url = this.nextUrl || (0, _preactRouter.getCurrentUrl)(),\n\t\t    path = url.replace(/\\?.+$/, '');\n\t\tthis.nextUrl = null;\n\t\treturn props.children({\n\t\t\turl: url,\n\t\t\tpath: path,\n\t\t\tmatches: (0, _preactRouter.exec)(path, props.path, {}) !== false\n\t\t});\n\t};\n\n\treturn Match;\n}(_preact.Component);\n\nvar Link = function Link(_ref) {\n\tvar activeClassName = _ref.activeClassName,\n\t    path = _ref.path,\n\t    props = _objectWithoutProperties(_ref, ['activeClassName', 'path']);\n\n\treturn (0, _preact.h)(\n\t\tMatch,\n\t\t{ path: path || props.href },\n\t\tfunction (_ref2) {\n\t\t\tvar matches = _ref2.matches;\n\t\t\treturn (0, _preact.h)(_preactRouter.Link, _extends({}, props, { 'class': [props.class || props.className, matches && activeClassName].filter(Boolean).join(' ') }));\n\t\t}\n\t);\n};\n\nexports.Link = Link;\nexports.default = Match;\n\nMatch.Link = Link;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header__3QGkI\",\"active\":\"active__3gItZ\"};"],"sourceRoot":""}