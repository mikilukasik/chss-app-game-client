{"version":3,"sources":["webpack:///./components/board/style.scss","webpack:///./engine/engine.js","webpack:///../src/index.js","webpack:///./context/GameContext.js","webpack:///./model/Game.js","webpack:///./model/table.js","webpack:///./components/board/Board.js","webpack:///./components/game/index.js","webpack:///./routes/game/index.js"],"names":["module","exports","addMovesToTable","originalTable","whiteNext","dontClearInvalid","returnMoveCoords","myCol","i","j","canMove","getTableData","origTable","isWhite","oppKingPos","lSancVal","rSancVal","tableValue","rtnMyHitSum","rtnHisHitSum","rtnPushHimBack","rtnApproachTheKing","undefined","whereIsTheKing","origColor","sancolhat","myMostMoved","lookI","lookJ","Math","abs","length","getAllMoves","tableToMoveOn","hitItsOwn","allHitSum","removeCaptured","thisArray","hitSumPart","forEach","stepItem","protectPieces","whitePlayer","protectedSum","thisMoveCoords","protectTable","table","wn","k","l","moveTable","speedy","dontProt","hitSumm","dontRemoveInvalid","what","possibleMoves","pawnCanMove","bishopCanMove","horseCanMove","rookCanMove","hitSummm","canMoveTo","pushAidA","queenCanMove","kingCanMove","move","coordsToMoveCoords","captured","moveIt","splice","spliceCount","removeKmin2","removeKplus2","hitSummmm","x","y","fromTable","whatHits","whatsThereNN","target","thisHit","pushAidP","pushAidPH","nc","createState","stateToRemember","String","fromCharCode","join","getPushString","moveCoords","whatM","whatsHit","toString","a","b","c","d","coordsToMoveString","moveInTable","dbTable","toPush","moves","push","wNext","pollNum","moveCount","pushThis","allPastTables","color","tempMoves","tempMoveCount","intable","dontProtect","hitValue","thistable","Array","ij","pushAidN","protectedArray","iHitMoves","protectScore","isThere","whatsThereN","pushAidXN","pushAidNN","fastMove","Int8Array","newCanMove","pawnCanMoveN","bishopCanMoveN","horseCanMoveN","rookCanMoveN","queenCanMoveN","kingCanMoveN","getHitScores","flipIt","wPlayer","mod","fwV","bHK","hKM","modType","modConst","pawnVal","iHitCoords","heHitsCoords","myprotectScore","Uint8Array","hisprotectScore","myAllHit","hisAllHit","myBestHit","hisBestHit","allMyMoves","hisKingMoves","hitCoords","thisValue","protecScore","allhitScore","hisKingMArr","Object","keys","hisKingMoveScore","blockHisKingScore","reduce","p","result","Int32Array","solveSmallDeepeningTask","sdt","resolverArray","newWNext","depth","SmallDeepeningTask","moveTree","desiredDepth","gameNum","shouldIDraw","trItm","resolveDepth","ResolverItem","score","isNegative","newScore","movedTable","valueToSave","newMoveTree","concat","TriggerItem","solveDeepeningTask","deepeningTask","isSdt","retProgress","progress","startedAt","Date","getTime","smallDeepeningTasks","p2","resultingSDTs","pop","timeItTook","ret","value","singleThreadAi","tempDbTable","cb","clone","obj","copy","setTime","len","attr","hasOwnProperty","Error","moveTask","MoveTaskN","sharedData","SplitMove","movesToSend","splitMove","moveIndex","done","expected","smallMoveTask","DeepeningTask","smallDeepeningTask","tempTasks","tempTask","smallDeepeningTasksCopy","slice","oneDeeper","res","res2","tempResolveArray","wouldLoop","pushAgain","evalFuncs","checkIfLooped","pow","sort","finalResult","winningMove","raDm1","previousValue","currentValue","getHookState","index","type","options","currentComponent","currentHook","hooks","useState","initialState","reducer","init","hookState","currentIndex","_reducer","invokeOrReturn","nextValue","action","setState","useReducer","flushAfterPaintEffects","afterPaintEffects","component","invokeCleanup","invokeEffect","e","hook","comp","arg","f","prevRaf","GameContext","createContext","getPieceValues","wVal","bVal","pieceVals","this","newTable","seenCount","thisState","pastTable","id","random","origWNext","origProtect","origData","origDeepDatatt","origDeepDatatf","origDeepDataft","origDeepDataff","dontLoop","stopped","MoveToSend","moveCoord","dbTableWithMoveTask","splitMoveId","_id","splitMoveID","timer","history","started","splitMoveIndex","thinkers","origMoveTask","pendingMoveCount","initialWNext","moveStr","initialTreeMoves","startingTable","startingAllPastTables","allPast","thisTaskTable","firstDepthValue","actualDepth","tableTree","moveStrTree","smallDeepeningTaskCounts","initialSmallDeepeningTask","cfColor","solvedSmallDeepeningTasks","inscore","inmoveTree","GameModel","returnedMoves","gameIsOn","whiteWon","blackWon","isDraw","askWhiteDraw","askBlackDraw","whiteCanForceDraw","blackCanForceDraw","created","now","moved","getInitialTable","oldBeforeDiff","oldBeforeRender","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","vnode","requestAnimationFrame","callback","raf","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","setTimeout","commitQueue","some","filter","Board","context","provider","state","sub","props","gameState","setGameState","firstClickedCellAddress","setFirstClickedCellAddress","cellSize","min","window","innerHeight","innerWidth","whiteState","cellClickHandler","rowIndex","colIndex","cell","moveToMake","game","map","row","9","clearHighlights","nextGameState","className","style","width","height","key","darker","square","onClick","src","class","selected","selected2","Game","Provider","GameRoute"],"mappings":"0EACAA,EAAOC,QAAU,CAAC,OAAS,gBAAgB,OAAS,gBAAgB,UAAY,mBAAmB,OAAS,gBAAgB,SAAW,oB,oDC0LhI,SAASC,EAAgBC,EAAeC,EAAWC,EAAkBC,GAE1E,IADA,IAAIC,EAAQH,EAAY,EAAI,EACnBI,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1B,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAGxBN,EAAcK,GAAGC,GAAG,GAFlBN,EAAcK,GAAGC,GAAG,KAAOF,EAEJG,EAAQF,EAAGC,EAAGL,EAAWD,GAAe,GAAO,EAAO,CAAC,GAAIE,EAAkBC,GAE7E,GAI/B,OAAOH,EAGT,SAASQ,EAAaC,EAAWC,EAASC,GAExC,IAAIC,EAAW,EACXC,EAAW,EAEXC,EAAa,EAEbC,EAAc,CAAC,GACfC,EAAe,CAAC,GAOhBC,EAAiB,EAEjBC,EAAqB,OAENC,IAAfR,IAA0BA,EAAaS,EAAeX,GAAYC,IAEtE,IAAIW,EAAY,EAGhB,GAFIX,IAASW,EAAY,GAErBX,GAAWD,EAAU,GAAG,GAAG,GAAI,CAEjC,IAAIa,GAAY,EAEZb,EAAU,GAAG,GAAG,KAClBG,GAAY,EACZU,GAAY,EAEe,IAAvBb,EAAU,GAAG,GAAG,KAAUG,GAAY,GACf,IAAvBH,EAAU,GAAG,GAAG,KAAUG,GAAY,GACf,IAAvBH,EAAU,GAAG,GAAG,KAAUG,GAAY,GAEf,IAAvBH,EAAU,GAAG,GAAG,KAClBG,GAAY,EACe,IAAvBH,EAAU,GAAG,GAAG,KAAUG,GAAY,IAEjB,IAAvBH,EAAU,GAAG,GAAG,KAClBG,GAAY,EACe,IAAvBH,EAAU,GAAG,GAAG,KAAUG,GAAY,IAEjB,IAAvBH,EAAU,GAAG,GAAG,KAClBG,GAAY,EACe,IAAvBH,EAAU,GAAG,GAAG,KAAUG,GAAY,KAK1CH,EAAU,GAAG,GAAG,KAClBa,GAAY,EACZT,GAAY,EAEe,IAAvBJ,EAAU,GAAG,GAAG,KAAUI,GAAY,GACf,IAAvBJ,EAAU,GAAG,GAAG,KAAUI,GAAY,GAEf,IAAvBJ,EAAU,GAAG,GAAG,KAClBI,GAAY,EACe,IAAvBJ,EAAU,GAAG,GAAG,KAAUI,GAAY,IAEjB,IAAvBJ,EAAU,GAAG,GAAG,KAClBI,GAAY,EACe,IAAvBJ,EAAU,GAAG,GAAG,KAAUI,GAAY,IAEjB,IAAvBJ,EAAU,GAAG,GAAG,KAClBI,GAAY,EACe,IAAvBJ,EAAU,GAAG,GAAG,KAAUI,GAAY,KAK1CS,IACyB,IAAvBb,EAAU,GAAG,GAAG,IAAmC,IAAvBA,EAAU,GAAG,GAAG,KAAUG,GAAY,GAC3C,IAAvBH,EAAU,GAAG,GAAG,IAAmC,IAAvBA,EAAU,GAAG,GAAG,KAAUI,GAAY,GAE3C,IAAvBJ,EAAU,GAAG,GAAG,IAAmC,IAAvBA,EAAU,GAAG,GAAG,KAAUG,GAAY,GAC3C,IAAvBH,EAAU,GAAG,GAAG,IAAmC,IAAvBA,EAAU,GAAG,GAAG,KAAUI,GAAY,KAKrEH,GAAWD,EAAU,GAAG,GAAG,KAC9Ba,GAAY,EAERb,EAAU,GAAG,GAAG,KAClBa,GAAY,EACZV,GAAY,EAEe,IAAvBH,EAAU,GAAG,GAAG,KAAUG,GAAY,GACf,IAAvBH,EAAU,GAAG,GAAG,KAAUG,GAAY,GACf,IAAvBH,EAAU,GAAG,GAAG,KAAUG,GAAY,GAEf,IAAvBH,EAAU,GAAG,GAAG,KAClBG,GAAY,EACe,IAAvBH,EAAU,GAAG,GAAG,KAAUG,GAAY,IAEjB,IAAvBH,EAAU,GAAG,GAAG,KAClBG,GAAY,EACe,IAAvBH,EAAU,GAAG,GAAG,KAAUG,GAAY,IAEjB,IAAvBH,EAAU,GAAG,GAAG,KAClBG,GAAY,EACe,IAAvBH,EAAU,GAAG,GAAG,KAAUG,GAAY,KAI1CH,EAAU,GAAG,GAAG,KAClBa,GAAY,EACZT,GAAY,EAEe,IAAvBJ,EAAU,GAAG,GAAG,KAAUI,GAAY,GACf,IAAvBJ,EAAU,GAAG,GAAG,KAAUI,GAAY,GAEf,IAAvBJ,EAAU,GAAG,GAAG,KAClBI,GAAY,EACe,IAAvBJ,EAAU,GAAG,GAAG,KAAUI,GAAY,IAEjB,IAAvBJ,EAAU,GAAG,GAAG,KAClBI,GAAY,EACe,IAAvBJ,EAAU,GAAG,GAAG,KAAUI,GAAY,IAEjB,IAAvBJ,EAAU,GAAG,GAAG,KAClBI,GAAY,EACe,IAAvBJ,EAAU,GAAG,GAAG,KAAUI,GAAY,KAK1CS,IACyB,IAAvBb,EAAU,GAAG,GAAG,IAAmC,IAAvBA,EAAU,GAAG,GAAG,KAAUG,GAAY,GAC3C,IAAvBH,EAAU,GAAG,GAAG,IAAmC,IAAvBA,EAAU,GAAG,GAAG,KAAUI,GAAY,GAE3C,IAAvBJ,EAAU,GAAG,GAAG,IAAmC,IAAvBA,EAAU,GAAG,GAAG,KAAUG,GAAY,GAC3C,IAAvBH,EAAU,GAAG,GAAG,IAAmC,IAAvBA,EAAU,GAAG,GAAG,KAAUI,GAAY,KAQ1E,IAHA,IAAIU,EAAc,EAGTC,EAAQ,EAAGA,EAAQ,EAAGA,GAAS,EACtC,IAAK,IAAIC,EAAQ,EAAGA,EAAQ,EAAGA,GAAS,EAElChB,EAAUe,GAAOC,GAAO,KAAOJ,GAIjCH,IAAwB,EAAIQ,KAAKC,IAAIhB,EAAW,GAAKa,IAAW,EAAIE,KAAKC,IAAIhB,EAAW,GAAKc,KAAWhB,EAAUe,GAAOC,GAAO,GAEhIlB,EAAQiB,EAAOC,EAAOf,EAASD,GAAW,GAAM,EAAMM,GAClDN,EAAUe,GAAOC,GAAO,GAAKF,IAAaA,EAAcd,EAAUe,GAAOC,GAAO,IAGlFR,GADEP,EACgBe,EAEA,EAAIA,EAGxBX,GAAcL,EAAUe,GAAOC,GAAO,IAID,IAA/BhB,EAAUe,GAAOC,GAAO,KAERlB,EAAQiB,EAAOC,GAAQf,EAASD,GAAW,GAAM,EAAMO,GACxEY,OAAS,EAIVX,GAHGP,GAGgB,EAAIe,GAAS,GAFdA,EAAQ,GAK5BX,GAAcL,EAAUe,GAAOC,GAAO,IAM9C,MAAO,CAACX,EAAYC,EAAY,GAAIC,EAAa,GAC/CJ,EAAUC,EAxCM,EAwCiBI,EAAgBM,EAAaL,GAmBlE,SAASW,EAAYC,EAAe7B,EAAW8B,EAAWC,EAAWC,GACnE,IAAIZ,EAAYpB,EAAY,EAAI,EAC5BiC,EAAY,GAEZH,IACF9B,GAAaA,GAIf,IAFA,IAAIkC,EAAa,CAAC,GAETX,EAAQ,EAAGA,EAAQ,EAAGA,GAAS,EACtC,IAAK,IAAIC,EAAQ,EAAGA,EAAQ,EAAGA,GAAS,EAClCK,EAAcN,GAAOC,GAAO,KAAOJ,GACrCd,EAAQiB,EAAOC,EAAOxB,EAAW6B,GAAgBG,GAAgB,EAAME,GACpEC,SAAQ,SAAUC,GACjBH,EAAUA,EAAUN,QAAU,CAACJ,EAAOC,EAAOY,EAAS,GAAIA,EAAS,OAK7E,OAAOH,EAGT,SAASI,EAActC,EAAeuC,GACpC,IAAInC,EAAQ,EACRmC,IAAanC,EAAQ,GACzB,IAAIoC,EAAe,EAoBnB,OAnBAX,EAAY7B,EAAeuC,GAAa,GAItCH,SAAQ,SAAUK,GAEZzC,EAAcyC,EAAe,IAAIA,EAAe,IAAI,KAAOrC,IAC7DJ,EAAcyC,EAAe,IAAIA,EAAe,IAAI,IAAK,EAGvDD,GAD6D,IAA3DxC,EAAcyC,EAAe,IAAIA,EAAe,IAAI,GACyB,GAA9D,EAAIzC,EAAcyC,EAAe,IAAIA,EAAe,IAAI,IAIzD,EAAIzC,EAAcyC,EAAe,IAAIA,EAAe,IAAI,OAKzED,EAGT,SAASE,EAAaC,EAAOvC,GAC3B,OAAOkC,EAAcK,EAAOvC,GAASkC,EAAcK,GAAQvC,GAG7D,SAASgB,EAAeuB,EAAOC,GAC7B,IAAIxC,EAAQ,EACRwC,IAAIxC,GAAS,GAEjB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1B,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1B,GAAuB,IAAnBqC,EAAMtC,GAAGC,GAAG,IAAYqC,EAAMtC,GAAGC,GAAG,KAAOF,EAE7C,MAAO,CAACC,EAAGC,GAMnB,SAASC,EAAQsC,EAAGC,EAAGpC,EAASqC,EAAWC,EAAQC,EAAUC,EAAeC,EAAmBhD,QAAkB,IAApD+C,MAAU,CAAC,IAEtE,IAAIE,EAAOL,EAAUF,GAAGC,GAAG,GACvBO,EAAgB,GAEpB,OAAQD,GACN,KAAK,EACHC,EAAgBC,EAAYT,EAAGC,EAAGpC,EAASqC,EAAWG,GACtD,MACF,KAAK,EACHG,EAAgBE,EAAcV,EAAGC,EAAGpC,EAASqC,EAAWG,GACxD,MACF,KAAK,EACHG,EAAgBG,EAAaX,EAAGC,EAAGpC,EAASqC,EAAWG,GACvD,MACF,KAAK,EACHG,EAAgBI,EAAYZ,EAAGC,EAAGpC,EAASqC,EAAWG,GACtD,MACF,KAAK,EACHG,EAsKN,SAAsBR,EAAGC,EAAGpC,EAASqC,EAAWW,QAAgB,IAAhBA,MAAW,CAAC,IAC1D,IAAIC,EAAY,GACZtD,EAAIwC,EAAI,EACRvC,EAAIwC,EAAI,EACZ,KAAOc,EAASF,EAAUC,EAAWtD,EAAGC,EAAGyC,EAAWrC,EAAS,IAC7DL,GAAK,EACLC,GAAK,EAEPD,EAAIwC,EAAI,EACRvC,EAAIwC,EAAI,EACR,KAAOc,EAASF,EAAUC,EAAWtD,EAAGC,EAAGyC,EAAWrC,EAAS,IAC7DL,GAAK,EACLC,GAAK,EAEPD,EAAIwC,EAAI,EACRvC,EAAIwC,EAAI,EACR,KAAOc,EAASF,EAAUC,EAAWtD,EAAGC,EAAGyC,EAAWrC,EAAS,IAC7DL,GAAK,EACLC,GAAK,EAEPD,EAAIwC,EAAI,EACRvC,EAAIwC,EAAI,EACR,KAAOc,EAASF,EAAUC,EAAWtD,EAAGC,EAAGyC,EAAWrC,EAAS,IAC7DL,GAAK,EACLC,GAAK,EAEPD,EAAIwC,EAAI,EACR,KAAOe,EAASF,EAAUC,EAAWtD,EAAGyC,EAAGC,EAAWrC,EAAS,IAAIL,GAAK,EACxEA,EAAIwC,EAAI,EACR,KAAOe,EAASF,EAAUC,EAAWtD,EAAGyC,EAAGC,EAAWrC,EAAS,IAAIL,GAAK,EACxEA,EAAIyC,EAAI,EACR,KAAOc,EAASF,EAAUC,EAAWd,EAAGxC,EAAG0C,EAAWrC,EAAS,IAAIL,GAAK,EACxEA,EAAIyC,EAAI,EACR,KAAOc,EAASF,EAAUC,EAAWd,EAAGxC,EAAG0C,EAAWrC,EAAS,IAAIL,GAAK,EACxE,OAAOsD,EAxMaE,CAAahB,EAAGC,EAAGpC,EAASqC,EAAWG,GACvD,MACF,KAAK,EACHG,EAAgBS,EAAYjB,EAAGC,EAAGpC,EAASqC,EAAWG,GAY1D,QAPgC,IAArB/C,GACTkD,EAAcjB,SAAQ,SAAU2B,GAC9B5D,EAAiBA,EAAiByB,QAAUoC,EAAmBnB,EAAGC,EAAGiB,EAAK,GAAIA,EAAK,QAKlFf,EAAQ,CACX,IAAK,IAAI3C,EAAIgD,EAAczB,OAAS,EAAGvB,GAAK,EAAGA,GAAK,EAC9C4D,EAASC,EAAOF,EAAmBnB,EAAGC,EAAGO,EAAchD,GAAG,GAAIgD,EAAchD,GAAG,IAAK0C,EAAWE,GAAWvC,IAC5G2C,EAAcc,OAAO9D,EAAG,GAI5B,GAAa,IAAT+C,GAAcL,EAAUF,GAAGC,GAAG,GAAI,CAEpC,GAAImB,EAASlB,EAAWrC,GACtB,IAAK,IAAI0D,EAAcf,EAAczB,OAAS,EAAGwC,GAAe,EAAGA,GAAe,EAC5Ef,EAAce,GAAa,KAAOtB,GAAMO,EAAce,GAAa,KAAOvB,EAAI,GAAKQ,EAAce,GAAa,KAAOvB,EAAI,GAC3HQ,EAAcc,OAAOC,EAAa,GAOxC,IAAIC,GAAc,EACdC,GAAe,EAEnB,IAASjE,EAAIgD,EAAczB,OAAS,EAAGvB,GAAK,EAAGA,GAAK,EAC9CgD,EAAchD,GAAG,KAAOyC,GAAKO,EAAchD,GAAG,KAAOwC,EAAI,IAAGwB,GAAc,GAC1EhB,EAAchD,GAAG,KAAOyC,GAAKO,EAAchD,GAAG,KAAOwC,EAAI,IAAGyB,GAAe,GAGjF,IAASjE,EAAIgD,EAAczB,OAAS,EAAGvB,GAAK,EAAGA,GAAK,EAC9CgD,EAAchD,GAAG,KAAOyC,IACxBO,EAAchD,GAAG,KAAOwC,EAAI,GAAKwB,GAChChB,EAAchD,GAAG,KAAOwC,EAAI,GAAKyB,IACpCjB,EAAcc,OAAO9D,EAAG,IAKhC,OAAOgD,EA+BT,SAASO,EAASW,EAAWZ,EAAWa,EAAGC,EAAGC,EAAWhE,EAASiE,GAEhE,GAAsB,IADHC,EAAaJ,EAAGC,EAAGC,GACvB,GAAU,OAAO,EAEhC,IACMG,EAASH,EAAUF,GAAGC,GAE5B,GAAII,EAAO,MAHGnE,EAAU,EAAI,GAGH,OAAO,EAKhC,GAFAiD,EAAUA,EAAU/B,QAAU,CAAC4C,EAAGC,EAAGI,EAAO,IAE1B,IAAdA,EAAO,GAAU,OAAO,EAG5B,IAAIC,EAAUD,EAAO,GAKrB,OAJIA,EAAO,KAAIC,GAAWH,GAEtBJ,EAAU,GAAKO,IAASP,EAAU,GAAKO,IAEpC,EAGT,SAASC,EAASR,EAAWZ,EAAWa,EAAGC,EAAGC,GACjB,IAAvBA,EAAUF,GAAGC,GAAG,KAAUd,EAAUA,EAAU/B,QAAU,CAAC4C,EAAGC,EAAG,IAIrE,SAASO,EAAUT,EAAWZ,EAAWa,EAAGC,EAAGC,EAAWhE,GACxD,IAAMuE,EAAKvE,EAAU,EAAI,EAKzB,GAHI8D,EAAI,GAAKE,EAAUF,EAAI,GAAGC,GAAG,KAAOQ,IAAItB,EAAUA,EAAU/B,QAAU,CAAC4C,EAAI,EAAGC,EAAGC,EAAUF,EAAI,GAAGC,GAAG,KACrGD,EAAI,GAAKE,EAAUF,EAAI,GAAGC,GAAG,KAAOQ,IAAItB,EAAUA,EAAU/B,QAAU,CAAC4C,EAAI,EAAGC,EAAGC,EAAUF,EAAI,GAAGC,GAAG,KAE9E,IAAvBC,EAAUF,GAAGC,GAAG,GAElB,OADAd,EAAUA,EAAU/B,QAAU,CAAC4C,EAAGC,EAAG,IAC9B,EAKX,SAAShB,EAAYZ,EAAGC,EAAGpC,EAASqC,EAAWW,QAAgB,IAAhBA,MAAW,CAAC,IAGzD,IAFA,IAAIC,EAAY,GACZtD,EAAIwC,EAAI,EACLe,EAASF,EAAUC,EAAWtD,EAAGyC,EAAGC,EAAWrC,EAAS,IAAIL,GAAK,EAExE,IADAA,EAAIwC,EAAI,EACDe,EAASF,EAAUC,EAAWtD,EAAGyC,EAAGC,EAAWrC,EAAS,IAAIL,GAAK,EAExE,IADAA,EAAIyC,EAAI,EACDc,EAASF,EAAUC,EAAWd,EAAGxC,EAAG0C,EAAWrC,EAAS,IAAIL,GAAK,EAExE,IADAA,EAAIyC,EAAI,EACDc,EAASF,EAAUC,EAAWd,EAAGxC,EAAG0C,EAAWrC,EAAS,IAAIL,GAAK,EACxE,OAAOsD,EAGT,SAASJ,EAAcV,EAAGC,EAAGpC,EAASqC,EAAWW,QAAgB,IAAhBA,MAAW,CAAC,IAI3D,IAHA,IAAIC,EAAY,GACZtD,EAAIwC,EAAI,EACRvC,EAAIwC,EAAI,EACLc,EAASF,EAAUC,EAAWtD,EAAGC,EAAGyC,EAAWrC,EAAS,IAC7DL,GAAK,EACLC,GAAK,EAIP,IAFAD,EAAIwC,EAAI,EACRvC,EAAIwC,EAAI,EACDc,EAASF,EAAUC,EAAWtD,EAAGC,EAAGyC,EAAWrC,EAAS,IAC7DL,GAAK,EACLC,GAAK,EAIP,IAFAD,EAAIwC,EAAI,EACRvC,EAAIwC,EAAI,EACDc,EAASF,EAAUC,EAAWtD,EAAGC,EAAGyC,EAAWrC,EAAS,IAC7DL,GAAK,EACLC,GAAK,EAIP,IAFAD,EAAIwC,EAAI,EACRvC,EAAIwC,EAAI,EACDc,EAASF,EAAUC,EAAWtD,EAAGC,EAAGyC,EAAWrC,EAAS,IAC7DL,GAAK,EACLC,GAAK,EAEP,OAAOqD,EA0CT,SAASL,EAAYT,EAAGC,EAAGpC,EAASqC,EAAWW,GAC7C,IAAIC,EAAY,GAEhB,OAAIjD,GACEsE,EAAUtB,EAAUC,EAAWd,EAAGC,EAAI,EAAGC,GAAW,IAAkB,IAAND,GAClEiC,EAASrB,EAAUC,EAAWd,EAAGC,EAAI,EAAGC,GAItCF,EAAI,GAAKE,EAAUF,EAAI,GAAGC,GAAG,IAC/Bc,EAASF,EAAUC,EAAWd,EAAI,EAAGC,EAAI,EAAGC,GAAW,EAAM,GAE3DF,EAAI,GAAKE,EAAUF,EAAI,GAAGC,GAAG,IAC/Bc,EAASF,EAAUC,EAAWd,EAAI,EAAGC,EAAI,EAAGC,GAAW,EAAM,GAExDY,IAGLqB,EAAUtB,EAAUC,EAAWd,EAAGC,EAAI,EAAGC,GAAW,IAAmB,IAAND,GACnEiC,EAASrB,EAAUC,EAAWd,EAAGC,EAAI,EAAGC,GAItCF,EAAI,GAAKE,EAAUF,EAAI,GAAGC,GAAG,IAC/Bc,EAASF,EAAUC,EAAWd,EAAI,EAAGC,EAAI,EAAGC,GAAW,EAAO,GAE5DF,EAAI,GAAKE,EAAUF,EAAI,GAAGC,GAAG,IAC/Bc,EAASF,EAAUC,EAAWd,EAAI,EAAGC,EAAI,EAAGC,GAAW,EAAO,GAEzDY,GAGT,SAASG,EAAYjB,EAAGC,EAAGpC,EAASqC,EAAWW,GAE7C,IAAIC,EAAY,GAwBhB,OAtBAC,EAASF,EAAUC,EAAWd,EAAI,EAAGC,EAAI,EAAGC,EAAWrC,EAAS,GAChEkD,EAASF,EAAUC,EAAWd,EAAI,EAAGC,EAAI,EAAGC,EAAWrC,EAAS,GAChEkD,EAASF,EAAUC,EAAWd,EAAI,EAAGC,EAAI,EAAGC,EAAWrC,EAAS,GAChEkD,EAASF,EAAUC,EAAWd,EAAI,EAAGC,EAAI,EAAGC,EAAWrC,EAAS,GAChEkD,EAASF,EAAUC,EAAWd,EAAI,EAAGC,EAAGC,EAAWrC,EAAS,GAC5DkD,EAASF,EAAUC,EAAWd,EAAI,EAAGC,EAAGC,EAAWrC,EAAS,GAC5DkD,EAASF,EAAUC,EAAWd,EAAGC,EAAI,EAAGC,EAAWrC,EAAS,GAC5DkD,EAASF,EAAUC,EAAWd,EAAGC,EAAI,EAAGC,EAAWrC,EAAS,GAGxDqC,EAAUF,GAAGC,GAAG,KAIdC,EAAU,GAAGD,GAAG,IACK,IAAvBC,EAAU,GAAGD,GAAG,IAAmC,IAAvBC,EAAU,GAAGD,GAAG,IAAmC,IAAvBC,EAAU,GAAGD,GAAG,IACxEc,EAASF,EAAUC,EAAW,EAAGb,EAAGC,EAAWrC,EAAS,GAEtDqC,EAAU,GAAGD,GAAG,IAA6B,IAAvBC,EAAU,GAAGD,GAAG,IAAmC,IAAvBC,EAAU,GAAGD,GAAG,IACpEc,EAASF,EAAUC,EAAW,EAAGb,EAAGC,EAAWrC,EAAS,IAGrDiD,EAGT,SAASH,EAAaX,EAAGC,EAAGpC,EAASqC,EAAWW,GAC9C,IAAIC,EAAY,GAShB,OARAC,EAASF,EAAUC,EAAWd,EAAI,EAAGC,EAAI,EAAGC,EAAWrC,EAAS,GAChEkD,EAASF,EAAUC,EAAWd,EAAI,EAAGC,EAAI,EAAGC,EAAWrC,EAAS,GAChEkD,EAASF,EAAUC,EAAWd,EAAI,EAAGC,EAAI,EAAGC,EAAWrC,EAAS,GAChEkD,EAASF,EAAUC,EAAWd,EAAI,EAAGC,EAAI,EAAGC,EAAWrC,EAAS,GAChEkD,EAASF,EAAUC,EAAWd,EAAI,EAAGC,EAAI,EAAGC,EAAWrC,EAAS,GAChEkD,EAASF,EAAUC,EAAWd,EAAI,EAAGC,EAAI,EAAGC,EAAWrC,EAAS,GAChEkD,EAASF,EAAUC,EAAWd,EAAI,EAAGC,EAAI,EAAGC,EAAWrC,EAAS,GAChEkD,EAASF,EAAUC,EAAWd,EAAI,EAAGC,EAAI,EAAGC,EAAWrC,EAAS,GACzDiD,EAGT,SAASuB,EAAYvC,GAGnB,IADA,IAAIwC,EAAkB,GACb9E,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1B,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAE7B,IAAIkE,EAAI,KAAQ7B,EAAMtC,GAAGC,GAAG,KAASqC,EAAMtC,GAAGC,GAAG,GAAM,GACnDkE,EAAI,KAAIA,EAAI,IAEhBW,EAAgB,EAAI9E,EAAIC,GAAK8E,OAAOC,aAAab,GAGrD,OAAOW,EAAgBG,KAAK,IAG9B,SAASC,EAAc5C,EAAO6C,GAG5B,IAAMC,EAAQ9C,EAAM6C,EAAW,IAAIA,EAAW,IAK1CE,GAFaN,OAAOK,EAAM,IAEf9C,EAAM6C,EAAW,IAAIA,EAAW,IAAI,GAAGG,WACpDhD,EAAM6C,EAAW,IAAIA,EAAW,IAAI,IActC,OAZiB,IAAbC,EAAM,IACRD,EAAW,KAAOA,EAAW,IAChB,OAAbE,IAGEA,EADe,IAAbD,EAAM,GACG,KAEA,MAKRA,EAAM,GAAGE,WAAaF,EAAM,GAuNrC,SAA4BG,EAAGC,EAAGC,EAAGC,GACnC,OAAOX,OAAOC,aAAa,GAAKO,IAAMC,EAAI,GAAKT,OAAOC,aAAa,GAAKS,IAAMC,EAAI,GAxN1CC,CAAmBR,GAAcE,EAIpE,SAASO,EAAYT,EAAYU,GAItC,IAAIC,EAASZ,EAAcW,EAAQvD,MAAO6C,GAE1CU,EAAQE,MAAMC,KAAKF,GAEnBD,EAAQvD,MAAQuB,EAAOsB,EAAYU,EAAQvD,OAE3CuD,EAAQI,OAASJ,EAAQI,MAEzBJ,EAAQK,SAAW,EAEnBL,EAAQM,WAAa,EAErBN,EAAQvD,MAAQ5C,EAAgBmG,EAAQvD,MAAOuD,EAAQI,OAEvD,IAAIG,EAAWvB,EAAYgB,EAAQvD,OAInC,OAFAuD,EAAQQ,cAAcL,KAAKI,GAEpBP,EAIT,SAASjC,EAAStB,EAAOgE,GAEvB,IAAIC,EAAY,GAEZxG,EAAQ,EAERuG,IAAOvG,GAAS,GAEpB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1B,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAE1B,GAAuB,IAAnBqC,EAAMtC,GAAGC,GAAG,IAAYqC,EAAMtC,GAAGC,GAAG,KAAOF,EAAO,CAGpDwG,EAAYrD,EAAclD,EAAGC,EAAGqG,EAAOhE,EAAO,CAAC,IAE/C,IAAK,IAAIkE,EAAgB,EAAGA,EAAgBD,EAAUhF,OAAQiF,GAAiB,EAC7E,GAA2E,IAAvElE,EAAMiE,EAAUC,GAAe,IAAID,EAAUC,GAAe,IAAI,IACK,IAAvElE,EAAMiE,EAAUC,GAAe,IAAID,EAAUC,GAAe,IAAI,GAChE,OAAO,EAKXD,EAAYnD,EAAYpD,EAAGC,EAAGqG,EAAOhE,EAAO,CAAC,IAE7C,IAASkE,EAAgB,EAAGA,EAAgBD,EAAUhF,OAAQiF,GAAiB,EAC7E,GAA2E,IAAvElE,EAAMiE,EAAUC,GAAe,IAAID,EAAUC,GAAe,IAAI,IACK,IAAvElE,EAAMiE,EAAUC,GAAe,IAAID,EAAUC,GAAe,IAAI,GAChE,OAAO,EAKXD,EAAYpD,EAAanD,EAAGC,EAAGqG,EAAOhE,EAAO,CAAC,IAE9C,IAASkE,EAAgB,EAAGA,EAAgBD,EAAUhF,OAAQiF,GAAiB,EAC7E,GAA2E,IAAvElE,EAAMiE,EAAUC,GAAe,IAAID,EAAUC,GAAe,IAAI,GAClE,OAAO,EAKX,GAAIF,EAAQrG,EAAI,EAAIA,EAAI,EAAG,CAEzBsG,EAAYtD,EAAYjD,EAAGC,EAAGqG,EAAOhE,EAAO,CAAC,IAE7C,IAASkE,EAAgB,EAAGA,EAAgBD,EAAUhF,OAAQiF,GAAiB,EAC7E,GAA2E,IAAvElE,EAAMiE,EAAUC,GAAe,IAAID,EAAUC,GAAe,IAAI,GAClE,OAAO,EAObD,EAAY9C,EAAYzD,EAAGC,EAAGqG,EAAOhE,EAAO,CAAC,IAE7C,IAASkE,EAAgB,EAAGA,EAAgBD,EAAUhF,OAAQiF,GAAiB,EAC7E,GAA2E,IAAvElE,EAAMiE,EAAUC,GAAe,IAAID,EAAUC,GAAe,IAAI,GAClE,OAAO,EAQjB,OAAO,EAGT,SAAS3C,EAAOsB,EAAYsB,EAASC,EAAaC,GAEhD,QAAiB7F,IAAb6F,EAA4BA,EAAW,CAAC,GAG5C,IAFA,IAAIC,EAAY,GAEP5G,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAC7B4G,EAAU5G,GAAK,IAAI6G,MAAM,GACzB,IAAK,IAAI5G,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAE7B2G,EAAU5G,GAAGC,GAAK,IAAI4G,MAAM,GAC5B,IAAK,IAAIrE,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAGoE,EAAU5G,GAAGC,GAAGuC,GAAKiE,EAAQzG,GAAGC,GAAGuC,IAKtE,GAAmD,IAA/CoE,EAAUzB,EAAW,IAAIA,EAAW,IAAI,IAAYyB,EAAUzB,EAAW,IAAIA,EAAW,IAAI,GAE9F,OAAQA,EAAW,IACjB,KAAK,EACH,OAAQA,EAAW,IACjB,KAAK,EACHyB,EAAY/C,EAAO,CAAC,EAAG,EAAG,EAAG,GAAI+C,GACjC,MACF,KAAK,EACHA,EAAY/C,EAAO,CAAC,EAAG,EAAG,EAAG,GAAI+C,GAIrC,MACF,KAAK,EACH,OAAQzB,EAAW,IACjB,KAAK,EACHyB,EAAY/C,EAAO,CAAC,EAAG,EAAG,EAAG,GAAI+C,GACjC,MACF,KAAK,EACHA,EAAY/C,EAAO,CAAC,EAAG,EAAG,EAAG,GAAI+C,IAc3C,IAAK,IAAIE,EAAK,EAAGA,EAAK,EAAGA,GAAM,EAE7BF,EAAUE,GAAI,GAAG,IAAK,EAEtBF,EAAUE,GAAI,GAAG,IAAK,EAI2B,IAA/CF,EAAUzB,EAAW,IAAIA,EAAW,IAAI,KACtB,IAAlBA,EAAW,IAA8B,IAAlBA,EAAW,IACf,IAAlBA,EAAW,IAA8B,IAAlBA,EAAW,MAErCyB,EAAUzB,EAAW,IAAIA,EAAW,IAAI,IAAK,GA6C/C,OAtCiD,IAA/CyB,EAAUzB,EAAW,IAAIA,EAAW,IAAI,IACO,IAA/CyB,EAAUzB,EAAW,IAAIA,EAAW,IAAI,IACvCA,EAAW,KAAOA,EAAW,MAErB,EACTyB,EAAUzB,EAAW,IAAIA,EAAW,IAAMyB,EAAUzB,EAAW,IAAIA,EAAW,IAC9EyB,EAAUzB,EAAW,IAAIA,EAAW,IAAM,CAAC,EAAG,GAAG,GAAO,GAAO,IAGjEwB,EAAS,GAAKC,EAAUzB,EAAW,IAAIA,EAAW,IAAI,GAEH,IAA/CyB,EAAUzB,EAAW,IAAIA,EAAW,IAAI,IAExB,IAAlBA,EAAW,IAEO,IAAlBA,EAAW,KAGXyB,EAAUzB,EAAW,IAAIA,EAAW,IAAI,GAAK,EAC7CwB,EAAS,IAAM,GAUjBC,EAAUzB,EAAW,IAAIA,EAAW,IAAI,IAAM,EAE9CyB,EAAUzB,EAAW,IAAIA,EAAW,IAClCyB,EAAUzB,EAAW,IAAIA,EAAW,IACtCyB,EAAUzB,EAAW,IAAIA,EAAW,IAAM,CAAC,EAAG,EAAG,GACI,IAA/CyB,EAAUzB,EAAW,IAAIA,EAAW,IAAI,KAC5CyB,EAAUzB,EAAW,IAAIA,EAAW,IAAI,IAAK,GAGxCyB,EAGT,SAASjD,EAAmB4B,EAAGC,EAAGC,EAAGC,GACnC,MAAO,CAACH,EAAGC,EAAGC,EAAGC,GAwInB,SAASnB,EAAavE,EAAGC,EAAGqC,GAC1B,OAAItC,GAAK,GAAKC,GAAK,GAAKD,GAAK,GAAKC,GAAK,EAAUqC,EAAMtC,GAAGC,GACnD,CAAC,GAGV,SAAS8G,EAASvE,EAAGC,EAAG0B,EAAGC,EAAGqB,EAAGnD,EAAO0E,EAAgBC,EAAWC,EAAclE,GAC/E,IAAImE,EAXN,SAAqBnH,EAAGC,EAAGqC,GACzB,OAAItC,GAAK,GAAKC,GAAK,GAAKD,GAAK,GAAKC,GAAK,EAAUqC,EAAMtC,GAAGC,GACnD,CAAC,GASMmH,CAAYjD,EAAGC,EAAG9B,GAChC,OAAmB,IAAf6E,EAAQ,IACNA,EAAQ,KAAO1B,GAEjByB,EAAa,IAAM,EACnBF,EAAe7C,GAAGC,IAAK,IAGvBpB,EAAc,EAAImB,EAAIC,IAAK,EAC3B6C,EAAUA,EAAU1F,QAAU,CAACiB,EAAGC,EAAG0B,EAAGC,EAAG9B,EAAME,GAAGC,GAAG,GAAIH,EAAM6B,GAAGC,GAAG,MAElE,IAETpB,EAAc,EAAImB,EAAIC,IAAK,GACpB,GAGT,SAASiD,EAAU7E,EAAGC,EAAG0B,EAAGC,EAAGqB,EAAGnD,EAAO0E,EAAgBC,EAAWC,EAAclE,GAChF,QAAImB,EAAI,GAAKA,EAAI,KACM,IAAnB7B,EAAM6B,GAAGC,GAAG,IACV9B,EAAM6B,GAAGC,GAAG,KAAOqB,GAErByB,EAAa,IAAM,EACnBF,EAAe7C,GAAGC,IAAK,IAGvBpB,EAAc,EAAImB,EAAIC,IAAK,EAC3B6C,EAAUA,EAAU1F,QAAU,CAACiB,EAAGC,EAAG0B,EAAGC,EAAG9B,EAAME,GAAGC,GAAG,GAAIH,EAAM6B,GAAGC,GAAG,MAElE,IAETpB,EAAc,EAAImB,EAAIC,IAAK,GACpB,IAGT,SAASkD,EAAU9E,EAAGC,EAAG0B,EAAGC,EAAGqB,EAAGnD,EAAO0E,EAAgBC,EAAWC,EAAclE,GAGhF,IAAImE,EAAU5C,EAAaJ,EAAGC,EAAG9B,GACjC,OAAmB,IAAf6E,EAAQ,KACO,IAAfA,EAAQ,IACVnE,EAAc,EAAImB,EAAIC,IAAK,GACpB,IAEL+C,EAAQ,KAAO1B,GAEjByB,EAAa,IAAM,EACnBF,EAAe7C,GAAGC,IAAK,IAGvBpB,EAAc,EAAImB,EAAIC,IAAK,EAC3B6C,EAAUA,EAAU1F,QAAU,CAACiB,EAAGC,EAAG0B,EAAGC,EAAG9B,EAAME,GAAGC,GAAG,GAAIH,EAAM6B,GAAGC,GAAG,MAElE,IAGT,SAASmD,EAASpC,EAAYsB,GAG5B,IADA,IAAIG,EAAY,IAAIC,MAAM,GACjB7G,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAC7B4G,EAAU5G,GAAK,IAAI6G,MAAM,GACzB,IAAK,IAAI5G,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1B2G,EAAU5G,GAAGC,GAAK,IAAIuH,UAAU,GAChCZ,EAAU5G,GAAGC,GAAG,GAAKwG,EAAQzG,GAAGC,GAAG,GACnC2G,EAAU5G,GAAGC,GAAG,GAAKwG,EAAQzG,GAAGC,GAAG,GAMvC,GAAmD,IAA/C2G,EAAUzB,EAAW,IAAIA,EAAW,IAAI,IAAYyB,EAAUzB,EAAW,IAAIA,EAAW,IAAI,GAE9F,OAAQA,EAAW,IACjB,KAAK,EACH,OAAQA,EAAW,IACjB,KAAK,EACHyB,EAAYW,EAAS,CAAC,EAAG,EAAG,EAAG,GAAIX,GACnC,MACF,KAAK,EACHA,EAAYW,EAAS,CAAC,EAAG,EAAG,EAAG,GAAIX,GAIvC,MACF,KAAK,EACH,OAAQzB,EAAW,IACjB,KAAK,EACHyB,EAAYW,EAAS,CAAC,EAAG,EAAG,EAAG,GAAIX,GACnC,MACF,KAAK,EACHA,EAAYW,EAAS,CAAC,EAAG,EAAG,EAAG,GAAIX,IAqB7C,OAZmD,IAA/CA,EAAUzB,EAAW,IAAIA,EAAW,IAAI,IACxB,IAAlBA,EAAW,IACO,IAAlBA,EAAW,KAGXyB,EAAUzB,EAAW,IAAIA,EAAW,IAAI,GAAK,GAG/CyB,EAAUzB,EAAW,IAAIA,EAAW,IAClCyB,EAAUzB,EAAW,IAAIA,EAAW,IACtCyB,EAAUzB,EAAW,IAAIA,EAAW,IAAM,CAAC,EAAG,EAAG,GAE1CyB,EAGT,SAASa,EAAWjF,EAAGC,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,GAM/E,OAFWN,EAAUF,GAAGC,GAAG,IAIzB,KAAK,GA9PT,SAAsBD,EAAGC,EAAGC,EAAWsE,EAAgBvB,EAAGwB,EAAWC,EAAclE,GACjF,GAAU,IAANyC,EAGF,OAFA4B,EAAU7E,EAAGC,EAAGD,EAAI,EAAGC,EAAI,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,QACrFqE,EAAU7E,EAAGC,EAAGD,EAAI,EAAGC,EAAI,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,GAGvFqE,EAAU7E,EAAGC,EAAGD,EAAI,EAAGC,EAAI,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,GACrFqE,EAAU7E,EAAGC,EAAGD,EAAI,EAAGC,EAAI,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,GAyPjF0E,CAAalF,EAAGC,EAAGC,EAAWsE,EAAgBvB,EAAGwB,EAAWC,EAAclE,GAE1E,MACF,KAAK,GA9OT,SAAwBR,EAAGC,EAAGC,EAAWsE,EAAgBvB,EAAGwB,EAAWC,EAAclE,GAGnF,IAFA,IAAIhD,EAAIwC,EAAI,EACRvC,EAAIwC,EAAI,EACL6E,EAAU9E,EAAGC,EAAGzC,EAAGC,EAAGwF,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,IAClFhD,GAAK,EACLC,GAAK,EAKP,IAFAD,EAAIwC,EAAI,EACRvC,EAAIwC,EAAI,EACD6E,EAAU9E,EAAGC,EAAGzC,EAAGC,EAAGwF,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,IAClFhD,GAAK,EACLC,GAAK,EAKP,IAFAD,EAAIwC,EAAI,EACRvC,EAAIwC,EAAI,EACD6E,EAAU9E,EAAGC,EAAGzC,EAAGC,EAAGwF,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,IAClFhD,GAAK,EACLC,GAAK,EAKP,IAFAD,EAAIwC,EAAI,EACRvC,EAAIwC,EAAI,EACD6E,EAAU9E,EAAGC,EAAGzC,EAAGC,EAAGwF,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,IAClFhD,GAAK,EACLC,GAAK,EAqNH0H,CAAenF,EAAGC,EAAGC,EAAWsE,EAAgBvB,EAAGwB,EAAWC,EAAclE,GAE5E,MACF,KAAK,GA1JT,SAAuBR,EAAGC,EAAGC,EAAWsE,EAAgBvB,EAAGwB,EAAWC,EAAclE,GAClF+D,EAASvE,EAAGC,EAAGD,EAAI,EAAGC,EAAI,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,GACpF+D,EAASvE,EAAGC,EAAGD,EAAI,EAAGC,EAAI,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,GACpF+D,EAASvE,EAAGC,EAAGD,EAAI,EAAGC,EAAI,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,GACpF+D,EAASvE,EAAGC,EAAGD,EAAI,EAAGC,EAAI,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,GAEpF+D,EAASvE,EAAGC,EAAGD,EAAI,EAAGC,EAAI,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,GACpF+D,EAASvE,EAAGC,EAAGD,EAAI,EAAGC,EAAI,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,GACpF+D,EAASvE,EAAGC,EAAGD,EAAI,EAAGC,EAAI,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,GACpF+D,EAASvE,EAAGC,EAAGD,EAAI,EAAGC,EAAI,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,GAkJhF4E,CAAcpF,EAAGC,EAAGC,EAAWsE,EAAgBvB,EAAGwB,EAAWC,EAAclE,GAE3E,MACF,KAAK,GAjQT,SAAsBR,EAAGC,EAAGC,EAAWsE,EAAgBvB,EAAGwB,EAAWC,EAAclE,GAEjF,IADA,IAAIhD,EAAIwC,EAAI,EACL8E,EAAU9E,EAAGC,EAAGzC,EAAGyC,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,IAAgBhD,GAAK,EAEzG,IADAA,EAAIwC,EAAI,EACD8E,EAAU9E,EAAGC,EAAGzC,EAAGyC,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,IAAgBhD,GAAK,EAEzG,IADAA,EAAIyC,EAAI,EACD6E,EAAU9E,EAAGC,EAAGD,EAAGxC,EAAGyF,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,IAAgBhD,GAAK,EAEzG,IADAA,EAAIyC,EAAI,EACD6E,EAAU9E,EAAGC,EAAGD,EAAGxC,EAAGyF,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,IAAgBhD,GAAK,EA0PrG6H,CAAarF,EAAGC,EAAGC,EAAWsE,EAAgBvB,EAAGwB,EAAWC,EAAclE,GAE1E,MACF,KAAK,GA5NT,SAAuBR,EAAGC,EAAGC,EAAWsE,EAAgBvB,EAAGwB,EAAWC,EAAclE,GAElF,IADA,IAAIhD,EAAIwC,EAAI,EACL8E,EAAU9E,EAAGC,EAAGzC,EAAGyC,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,IAAgBhD,GAAK,EAEzG,IADAA,EAAIwC,EAAI,EACD8E,EAAU9E,EAAGC,EAAGzC,EAAGyC,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,IAAgBhD,GAAK,EAEzG,IADAA,EAAIyC,EAAI,EACD6E,EAAU9E,EAAGC,EAAGD,EAAGxC,EAAGyF,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,IAAgBhD,GAAK,EAEzG,IADAA,EAAIyC,EAAI,EACD6E,EAAU9E,EAAGC,EAAGD,EAAGxC,EAAGyF,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,IAAgBhD,GAAK,EACzGA,EAAIwC,EAAI,EAER,IADA,IAAIvC,EAAIwC,EAAI,EACL6E,EAAU9E,EAAGC,EAAGzC,EAAGC,EAAGwF,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,IAClFhD,GAAK,EACLC,GAAK,EAIP,IAFAD,EAAIwC,EAAI,EACRvC,EAAIwC,EAAI,EACD6E,EAAU9E,EAAGC,EAAGzC,EAAGC,EAAGwF,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,IAClFhD,GAAK,EACLC,GAAK,EAIP,IAFAD,EAAIwC,EAAI,EACRvC,EAAIwC,EAAI,EACD6E,EAAU9E,EAAGC,EAAGzC,EAAGC,EAAGwF,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,IAClFhD,GAAK,EACLC,GAAK,EAIP,IAFAD,EAAIwC,EAAI,EACRvC,EAAIwC,EAAI,EACD6E,EAAU9E,EAAGC,EAAGzC,EAAGC,EAAGwF,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,IAClFhD,GAAK,EACLC,GAAK,EA8LH6H,CAActF,EAAGC,EAAGC,EAAWsE,EAAgBvB,EAAGwB,EAAWC,EAAclE,GAE3E,MACF,KAAK,GA7LT,SAAsBR,EAAGC,EAAGC,EAAWsE,EAAgBvB,EAAGwB,EAAWC,EAAclE,GACjF+D,EAASvE,EAAGC,EAAGD,EAAI,EAAGC,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,GAChF+D,EAASvE,EAAGC,EAAGD,EAAI,EAAGC,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,GAChF+D,EAASvE,EAAGC,EAAGD,EAAI,EAAGC,EAAI,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,GACpF+D,EAASvE,EAAGC,EAAGD,EAAI,EAAGC,EAAI,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,GACpF+D,EAASvE,EAAGC,EAAGD,EAAI,EAAGC,EAAI,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,GACpF+D,EAASvE,EAAGC,EAAGD,EAAI,EAAGC,EAAI,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,GACpF+D,EAASvE,EAAGC,EAAGD,EAAGC,EAAI,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,GAChF+D,EAASvE,EAAGC,EAAGD,EAAGC,EAAI,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,GAG5EN,EAAUF,GAAGC,GAAG,KAEdC,EAAU,GAAGD,GAAG,IACK,IAAvBC,EAAU,GAAGD,GAAG,IAAmC,IAAvBC,EAAU,GAAGD,GAAG,IAAmC,IAAvBC,EAAU,GAAGD,GAAG,IACxEsE,EAASvE,EAAGC,EAAG,EAAGA,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,GAE1EN,EAAU,GAAGD,GAAG,IAA6B,IAAvBC,EAAU,GAAGD,GAAG,IAAmC,IAAvBC,EAAU,GAAGD,GAAG,IACpEsE,EAASvE,EAAGC,EAAG,EAAGA,EAAGgD,EAAG/C,EAAWsE,EAAgBC,EAAWC,EAAclE,IA4K5E+E,CAAavF,EAAGC,EAAGC,EAAWsE,EAAgBvB,EAAGwB,EAAWC,EAAclE,IAQhF,SAASgF,EAAa5H,EAAW6F,EAAOgC,EAAQC,EAASC,GAEvD,IACIC,EAAM,EAGNC,EAAM,EAGNC,EAAM,EAEV,OAAQH,GAAOA,EAAII,SACjB,IAAK,MACHH,EAAMD,EAAIK,SACV,MACF,IAAK,MACHH,EAAMF,EAAIK,SACV,MACF,IAAK,MACHF,EAAMH,EAAIK,SAMd,IA8BI/C,EACAb,EA/BA6D,EAAU,EAEVC,EAAa,GACbC,EAAe,GAEfC,EAAiB,IAAIC,WAAW,GAChCC,EAAkB,IAAID,WAAW,GAEjCE,EAAW,EACXC,EAAY,EAEZC,EAAY,EACZC,EAAa,EAIblC,EAAiB,CAEnB,IAAI6B,WAAW,GACf,IAAIA,WAAW,GACf,IAAIA,WAAW,GACf,IAAIA,WAAW,GAEf,IAAIA,WAAW,GACf,IAAIA,WAAW,GACf,IAAIA,WAAW,GACf,IAAIA,WAAW,IAOb5C,GACFrB,EAAK,EACLa,EAAI,IAEJA,EAAI,EACJb,EAAK,GAMP,IAHA,IAAIuE,EAAa,GACbC,EAAe,GAEVjI,EAAQ,EAAGA,EAAQ,EAAGA,GAAS,EACtC,IAAK,IAAIC,EAAQ,EAAGA,EAAQ,EAAGA,GAAS,EAElChB,EAAUe,GAAOC,GAAO,KAAOqE,GAGE,IAA/BrF,EAAUe,GAAOC,GAAO,KAExBqH,GADQ,IAANhD,EACU,EAAIrE,EAELA,GAGfqG,EAAWtG,EAAOC,EAAOqE,EAAGrF,EAAW4G,EAAgB0B,EAAYE,EAAgBO,IAKhD,IAA/B/I,EAAUe,GAAOC,GAAO,KACS,IAA/BhB,EAAUe,GAAOC,GAAO,KAExBqH,GADS,IAAP7D,EACU,EAAIxD,EAELA,GAKfqG,EAAWtG,EAAOC,EAAOwD,EAAIxE,EAAW4G,EAAgB2B,EAAcG,EAAgD,IAA/B1I,EAAUe,GAAOC,GAAO,GAAWgI,EAAe,KAOjJV,EAAW3G,SAAQ,SAAUsH,GAC3B,IAAIC,EAAY,GAIdA,EAFEtC,EAAeqC,EAAU,IAAIA,EAAU,IAE7BA,EAAU,GAAKA,EAAU,GAIzBA,EAAU,IAIRJ,IAEdA,EAAYK,EAEMD,GAGpBN,GAAYO,KAIdX,EAAa5G,SAAQ,SAAUsH,GAE7B,IAAIC,EAAY,GAIdA,EAFEtC,EAAeqC,EAAU,IAAIA,EAAU,IAE7BA,EAAU,GAAKA,EAAU,GAIzBA,EAAU,IAIRH,IAEdA,EAAaI,GAIfN,GAAaM,KAGf,IAAIC,EAAcX,EAAe,GAAKE,EAAgB,GAClDU,EAAcT,EAAWC,EAEzBS,EAAcC,OAAOC,KAAKP,GAE1BQ,EAAmB,EAAKH,EAAYlI,OACpCsI,EAAoBJ,EAAYK,QAAO,SAACC,EAAGtE,GAAJ,OAAU0D,EAAW1D,GAAKsE,EAAI,EAAIA,IAAG,GAGhFtB,GA9Ja,EA8JFL,EACXwB,GAzJa,EAyJOtB,EACpBuB,GA7Ja,EA6JQxB,EAErB,IAAI2B,EAAS,IAAIC,WAAW,GAS5B,OARAD,EAAO,GAAkB,MAAZf,EAAmC,KAAbC,EAE/BjB,EACF+B,EAAO,KAAOT,GAAe,IAAMC,GAAe,GAAMf,GAAYmB,GAAoB,IAAMC,GAAqB,IAEnHG,EAAO,KAAOT,GAAe,IAAMC,GAAe,GAAMf,GAAYmB,GAAoB,IAAMC,GAAqB,IAG9GG,EAwGT,SAASE,EAAwBC,EAAKC,GAgBpC,IAAIJ,EAAS,GAETK,GAAYF,EAAIlE,MAqBpB,GAnBkB,IAAdkE,EAAIG,OACF1G,EAASuG,EAAI7H,MAAO+H,KAGtBL,EAAS,CAAC,IAAIO,EAAmBJ,EAAI7H,MAAO+H,EAAUF,EAAIG,MAAQ,EAChEH,EAAIK,SAAUL,EAAIM,aAAc,IAChCN,EAAIjC,SAAS,EAAOiC,EAAIO,QACxBP,EAAIhC,IAAKgC,EAAIQ,eAYfR,EAAIS,MAKNC,EAAaV,EAAIG,MAAOF,QAIxB,GAAID,EAAIG,MAAQH,EAAIM,aAElBL,EAAcD,EAAIG,OAAOF,EAAcD,EAAIG,OAAO/I,QAAU,IAAIuJ,EAAaX,EAAIY,MAC/EZ,EAAIK,SAAUL,EAAIjC,aAEf,CAEL,IAAI8C,EAA0B,EAAZb,EAAIG,MAEtB,GAAIH,EAAIG,QAAUH,EAAIM,aAAc,CAGlC,IAAIQ,EAMFA,EAFED,GAEUb,EAAIY,OAAS,IAAM/C,EAAamC,EAAI7H,MAC9C6H,EAAIlE,OAAO,EAAOkE,EAClBA,EAAIhC,KAAsB,IAIhBgC,EAAIY,OAAS,IAAM/C,EAAamC,EAAI7H,MAC9C6H,EAAIlE,OAAO,EAAMkE,EACjBA,EAAIhC,KAAsB,GAG9B6B,EAAOA,EAAOzI,QAAU,IAAIgJ,EAC1B,GACAF,EACAF,EAAIG,MAAQ,EACZH,EAAIK,SACJL,EAAIM,aACJQ,EACAd,EAAIjC,SACJ,EACAiC,EAAIO,QACJP,EAAIhC,IACJgC,EAAIQ,iBAGD,CAIL,IAAI3H,EAAgB,GAIpBtD,EAAgByK,EAAI7H,MAAO6H,EAAIlE,OAAO,EAAMjD,GAO5C,IAAK,IAAIhD,EAAIgD,EAAczB,OAAS,EAAGvB,GAAK,EAAGA,GAAK,EAAG,CAErD,IAEIkL,EAFA/F,EAAanC,EAAchD,GAI/BkL,EAAa3D,EAASpC,EAAYgF,EAAI7H,OAGtC,IAII6I,EAFA7B,EAFca,EAAI7H,MAAM6C,EAAW,IAAIA,EAAW,IAE1B,GAYxBiG,EAAcjB,EAAIK,SAASa,OAAO,CAAClG,EANrCgG,EAFEH,EAEYb,EAAIY,MAAQzB,EAGZa,EAAIY,MAAQzB,IAM5BU,EAAOA,EAAOzI,QAAU,IAAIgJ,EAC1BW,EACAb,EACAF,EAAIG,MAAQ,EACZc,EACAjB,EAAIM,aACJU,EACAhB,EAAIjC,SACJ,EACAiC,EAAIO,QACJP,EAAIhC,IACJgC,EAAIQ,cAQVX,EAAOA,EAAOzI,QAAU,IAAI+J,GAAYnB,EAAIG,MAAQ,EAAGH,EAAIK,SACzDL,EAAIjC,SAOV,OAAO8B,EAIT,SAASuB,EAAmBC,EAAeC,GAIzC,IAAIC,EAAcF,EAAcG,SAE5BC,GAAY,IAAIC,MAAOC,UAEvBL,IAcFD,EAPwB,CACtBf,aAAce,EAAcf,aAC5BsB,oBAAqB,CAACP,GACtBtD,QAASsD,EAActD,QACvBC,IAAKqD,EAAcrD,IACnBwC,YAAaa,EAAcb,cAQ/B,IAHA,IAAIP,EAAgB,GAEhB4B,EAAKR,EAAcf,aAAe,EAC7BzK,EAAI,EAAGA,EAAIgM,EAAIhM,GAAK,EAC3BoK,EAAcpK,GAAK,GAGrB,KAAOwL,EAAcO,oBAAoBxK,OAAS,GAUhD,IANA,IAII0K,EAAgB/B,EAJKsB,EAAcO,oBAAoBG,MAIK9B,GAEvD3H,EAAIwJ,EAAc1K,OAAS,EAAGkB,GAAK,EAAGA,GAAK,EAClD+I,EAAcO,oBAAoBP,EAAcO,oBAAoBxK,QAAU0K,EAAcxJ,GAMhG,IAAI0J,GAAa,IAAIN,MAClBC,UAAYF,EAEXQ,EAAM,CAER1B,QAASc,EAAcd,QACvBiB,SAAUD,EACVS,WAAYA,EACZpB,MAAOX,EAAc,GAAG,GAAGiC,MAC3B7B,SAAUJ,EAAc,GAAG,GAAGI,UAShC,OALc,IAAViB,IACFW,EAAIrB,MAAQX,EAAc,GAAG,GAAGiC,OAI3BD,EAsEF,SAASE,EAAeC,EAAajC,EAAOkC,EAAIrE,GAErD,IAAItC,EA5YN,SAAS4G,EAAMC,GACb,IAAIC,EAGJ,GAAI,OAASD,GAAO,iBAAoBA,EAAK,OAAOA,EAGpD,GAAIA,aAAeb,KAGjB,OAFAc,EAAO,IAAId,MACNe,QAAQF,EAAIZ,WACVa,EAIT,GAAID,aAAe7F,MAAO,CACxB8F,EAAO,GACP,IAAK,IAAI3M,EAAI,EAAG6M,EAAMH,EAAInL,OAAQvB,EAAI6M,EAAK7M,GAAK,EAC9C2M,EAAK3M,GAAKyM,EAAMC,EAAI1M,IAEtB,OAAO2M,EAIT,GAAID,aAAehD,OAAQ,CAEzB,IAAK,IAAIoD,KADTH,EAAO,GACUD,EACXA,EAAIK,eAAeD,KAAOH,EAAKG,GAAQL,EAAMC,EAAII,KAEvD,OAAOH,EAGT,MAAM,IAAIK,MAAM,iDA6WFP,CAAMF,GAEpB1G,EAAQoH,SAAW,IAAIC,EAAUrH,EAASsC,GAE1CtC,EAAQoH,SAASE,WAAW1C,aAAeH,EAG3C,IAAI/D,EAAY,IAAI6G,EAAUvH,GAASwH,YAGvC9G,EAAUxE,SAAQ,SAAUuL,GAE1BA,EAAU3B,SAAW,CAEnBxG,WAAYmI,EAAUnI,WACtBoI,UAAWD,EAAUC,UAErBC,MAAM,EACNxD,OAAQ,GAERyD,cAAU3M,MAMd,IAAIkJ,EAAS,GAEbzD,EAAUxE,SAAQ,SAAU2L,GAG1B,IAAIlC,EAAgB,IAAImC,EAAcD,IAvD1C,SAAmBlC,GAQjB,IANA,IACIoC,EAAqBpC,EAAcO,oBAAoBG,MAEvD2B,EAAY3D,EAAwB0D,EACtCA,EAAmBxD,eAEdyD,EAAUtM,OAAS,GAAG,CAE3B,IAAIuM,EAAWD,EAAU3B,MAEzBV,EAAcO,oBAAoBP,EAAcO,oBAAoBxK,QAAUuM,EAIhFtC,EAAcuC,wBAA0BvC,EAAcO,oBAAoBiC,QAE1ExC,EAAcpB,cAhBM,GAuDlB6D,CAAUzC,GAOV,IAFA,IAAI0C,EAAM,GAEH1C,EAAcO,oBAAoBxK,OAAS,GAAG,CAEnD,IAAIqM,EAAqBpC,EAAcO,oBAAoBG,MAE3D0B,EAAmBjC,SAAWH,EAAcG,SAI5C,IAAIwC,EAAO5C,EAAmBqC,GAAoB,GAElDO,EAAK9B,MAAQ8B,EAAKpD,MAElBmD,EAAIA,EAAI3M,QAAU4M,EAIpB,IAAIC,EAAmB,GAEvBA,EAAiB,GAAK,GACtBA,EAAiB,GAAKF,EACtBE,EAAiB,GAAK,GAEtBvD,EAAa,EAAGuD,GAEhB,IAIIC,EAJAC,EAAYF,EAAiB,GAAG,GAEhCjJ,EAAamJ,EAAU9D,SAAS,GAIpC,IAAK3E,EAAQoH,SAAStC,YAAa,CAIjC,IAAIO,EAAarH,EAAOsB,EAAYU,EAAQvD,OAE5C+L,EAAYE,EAAUC,cAActD,EAAYrF,EAAQQ,eAMtDgI,IAAWC,EAAUjC,OAAShL,KAAKoN,IAAIJ,EAAW,IAGtDC,EAAUvD,MAAQuD,EAAUjC,MAE5BiC,EAAU5K,KAAOyB,EAEjB6E,EAAOA,EAAOzI,QAAU+M,KAI1BtE,EAAO0E,MAAK,SAAUnJ,EAAGC,GAEvB,OAAID,EAAEwF,MAAQvF,EAAEuF,MACP,EAEHxF,EAAEwF,QAAUvF,EAAEuF,MACT,GAEC,KAMd,IAAI4D,EAAc,CAChB3E,OAAQA,EACR4E,YAAa5E,EAAO,GACpB7E,WAAY6E,EAAO,GAAGQ,SAAS,IAMjC,OAFIgC,GAAIA,EAAGmC,GAEJA,EAIT,SAAS9D,EAAaP,EAAOF,GAE3B,GAAIA,EAAcE,GAAO/I,OAAS,EAAG,CACnC,IAAIsN,EAAQzE,EAAcE,EAAQ,GAGhCuE,EAAMA,EAAMtN,QAAU6I,EAAcE,GAAOR,OAFjC,EAARQ,EAGA,SAAUwE,EAAeC,GACvB,OAAIA,EAAa1C,MAAQyC,EAAczC,MAC9B,CACLA,MAAO0C,EAAa1C,MACpB7B,SAAUuE,EAAavE,UAIlB,CACL6B,MAAOyC,EAAczC,MACrB7B,SAAUsE,EAActE,WAQ9B,SAAUsE,EAAeC,GACvB,OAAIA,EAAa1C,MAAQyC,EAAczC,MAC9B,CACLA,MAAO0C,EAAa1C,MACpB7B,SAAUuE,EAAavE,UAGlB,CACL6B,MAAOyC,EAAczC,MACrB7B,SAAUsE,EAActE,YASpCJ,EAAcE,GAAS,GCl6DzB,SAAS0E,EAAaC,EAAOC,GACxBC,eACHA,cAAcC,EAAkBH,EAAOI,IAAeH,GAEvDG,GAAc,MAORC,EACLF,QACCA,MAA2B,IACpB,OACU,YAGfH,GAASK,KAAY/N,QACxB+N,KAAYtJ,KAAK,IAEXsJ,KAAYL,GAMb,SAASM,EAASC,UACxBH,GAAc,EAUf,SAA2BI,EAASD,EAAcE,OAE3CC,EAAYX,EAAaY,IAAgB,UAC/CD,EAAUE,EAAWJ,EAChBE,QACJA,KAAmB,CACjBD,EAAiDA,EAAKF,GAA/CM,SAA0BN,GAElC,gBACOO,EAAYJ,EAAUE,EAASF,KAAiB,GAAIK,GACtDL,KAAiB,KAAOI,IAC3BJ,KAAmB,CAACI,EAAWJ,KAAiB,IAChDA,MAAqBM,SAAS,OAKjCN,MAAuBP,GAGjBO,KA7BAO,CAAWJ,EAAgBN,GAsKnC,SAASW,IACRC,GAAkBrO,SAAQ,eACrBsO,UAEFA,UAAkCtO,QAAQuO,GAC1CD,UAAkCtO,QAAQwO,GAC1CF,UAAoC,GACnC,MAAOG,GACRH,UAAoC,GACpClB,cAAoBqB,EAAGH,WAI1BD,GAAoB,GA8CrB,SAASE,EAAcG,OAGhBC,EAAOtB,EACe,mBAAjBqB,OAA6BA,QACxCrB,EAAmBsB,EAOpB,SAASH,EAAaE,OAGfC,EAAOtB,EACbqB,MAAgBA,OAChBrB,EAAmBsB,EAepB,SAASZ,EAAea,EAAKC,SACT,mBAALA,EAAkBA,EAAED,GAAOC,E,0NA7XtChB,EAGAR,EAsBAyB,E,YCzBWC,G,oBADKC,wBAAc,SFe9BxC,EAAY,CACdyC,eAAgB,SAAUnL,GAExB,IAAImE,EAAS,CACXiH,KAAM,EACNC,KAAM,GA0BR,OAvBYrL,EAAQvD,MAEdP,SAAQ,SAAUoC,GACtBA,EAAEpC,SAAQ,SAAUqC,GAClB,OAAQA,EAAE,IACR,KAAK,EAEH4F,EAAOkH,MAAQ9M,EAAE,GAEjB,MAEF,KAAK,EAEH4F,EAAOiH,MAAQ7M,EAAE,UAUlB4F,GAITW,YAAa,SAAU9E,GACrB,IAAIsL,EAAYC,KAAKJ,eAAenL,GAEpC,GAAIA,EAAQI,OACV,GAAIkL,EAAUF,KAAOE,EAAUD,KAAM,OAAO,OAE5C,GAAIC,EAAUF,KAAOE,EAAUD,KAAM,OAAO,EAG9C,OAAO,GAGT1C,cAAe,SAAU6C,EAAUhL,GAEjC,IAAIiL,EAAY,EACZC,EAAY1M,EAAYwM,GAM5B,OAJAhL,EAActE,SAAQ,SAAUyP,GAC1BA,IAAcD,IAAWD,GAAa,MAGrCA,IA+6CPpE,EAAY,SAAUrH,EAASsC,GACjCiJ,KAAKK,GAAKpQ,KAAKqQ,SAEf,IAAI/G,EAAc4D,EAAU5D,YAAY9E,GACxCuL,KAAKzG,YAAcA,EAIfxC,IAAKiJ,KAAKjJ,IAAMA,GAEpBiJ,KAAKjE,WAAa,CAEhBxC,YAAaA,EAEbgH,UAAW9L,EAAQI,MAEnBwE,aAAc5E,EAAQ4E,aACtBnK,WAAYS,EAAe8E,EAAQvD,OAAQuD,EAAQI,OACnD2L,YAAavP,EAAawD,EAAQvD,MAAOuD,EAAQI,OACjD4L,SAAU1R,EAAa0F,EAAQvD,MAAOuD,EAAQI,OAC9C6L,eAAgB9J,EAAanC,EAAQvD,OAAO,GAAM,EAAMuD,EACtDsC,GACF4J,eAAgB/J,EAAanC,EAAQvD,OAAO,GAAM,EAAOuD,EACvDsC,GACF6J,eAAgBhK,EAAanC,EAAQvD,OAAO,GAAO,EAAMuD,EACvDsC,GACF8J,eAAgBjK,EAAanC,EAAQvD,OAAO,GAAO,EAAOuD,EACxDsC,IAGJiJ,KAAKjM,WAAa3D,EAAYqE,EAAQvD,MAAOuD,EAAQI,OAAO,EAAO,GAAG,GAEtE,IAAIiM,GAAW,EACXd,KAAKjE,WAAW0E,SAAS,GAAK,IAChCK,GAAW,GAGbd,KAAKjE,WAAW+E,SAAWA,GA0ezB3H,EAAqB,SAAUjI,EAAO2D,EAAOqE,EAAOE,EAAUC,EAAcM,EAAO7C,EAASiK,EAASzH,EAASvC,EAAKwC,GAErHyG,KAAK1G,QAAUA,EAEf0G,KAAKlJ,QAAUA,EAEfkJ,KAAK9O,MAAQA,EAEb8O,KAAKnL,MAAQA,EAEbmL,KAAK9G,MAAQA,EAEb8G,KAAK5G,SAAWA,EAEhB4G,KAAK3G,aAAeA,EAEpB2G,KAAKrG,MAAQA,EAEbqG,KAAKjJ,IAAMA,EAEXiJ,KAAKzG,YAAcA,GAKjByH,EAAa,SAAUC,EAAWpD,EAAOqD,EAAqBC,GAEhE,IAAItF,EAAWqF,EAAoBrF,SAEnCmE,KAAKzG,YAAcsC,EAAStC,YAE5ByG,KAAKjJ,IAAM8E,EAAS9E,IAEpBiJ,KAAK7D,UAAY0B,EAEjBmC,KAAKjM,WAAakN,EAElBjB,KAAKjE,WAAaF,EAASE,WAE3BiE,KAAKjE,WAAW/M,UAAYkS,EAAoBhQ,MAEhD8O,KAAKjE,WAAWzC,QAAU4H,EAAoBE,IAE9CpB,KAAKjE,WAAW1C,aAAewC,EAASE,WAAW1C,aAEnD2G,KAAKjE,WAAWsF,YAAcF,EAE9BnB,KAAKsB,MAAQ,GAEbtB,KAAKuB,QAAU,IAObvF,EAAY,SAAUkF,GAAqB,WAI7ClB,KAAKzG,YAAc2H,EAAoBrF,SAAStC,YAEhDyG,KAAKwB,QAAU,IAAI/G,KAEnBuF,KAAKyB,oBAAiB/R,EAEtBsQ,KAAKqB,YAAcpR,KAAKqQ,SAAWrQ,KAAKqQ,SAExC,IAAIrE,EAAc,GAElBiF,EAAoBrF,SAAS9H,WAAWpD,SAAQ,SAACsQ,EAAWpD,GAE1D5B,EAAYrH,KAAK,IAAIoM,EAAWC,EAAWpD,EAAOqD,EAAqB,EAAKG,iBAI9ErB,KAAK/D,YAAcA,EAEnB+D,KAAKrL,MAAQsH,EAAYW,QAEzBoD,KAAK0B,SAAW,GAEhB1B,KAAK1G,QAAU4H,EAAoBE,IAEnCpB,KAAKhR,UAAYkS,EAAoBhQ,MAErC8O,KAAK2B,aAAeT,EAAoBrF,SAExCmE,KAAK4B,iBAAmBV,EAAoBrF,SAAS9H,WAAW5D,QAG9DoM,EAAgB,SAAUD,GAE5B0D,KAAKzG,YAAc+C,EAAcP,WAAWxC,YAE5CyG,KAAKjJ,IAAMuF,EAAcvF,IAEzBiJ,KAAK1G,QAAUgD,EAAcP,WAAWzC,QAExC0G,KAAKzF,SAAW+B,EAAc/B,SAE9ByF,KAAKhH,cAAgB,GAIrBgH,KAAK6B,aAAevF,EAAcP,WAAWwE,UAG7CP,KAAK8B,QAAU,CACbxF,EAAcvI,WAAW,GACzBuI,EAAcvI,WAAW,GACzBuI,EAAcvI,WAAW,GACzBuI,EAAcvI,WAAW,IAK3BiM,KAAK+B,iBAAmB,CAAC/B,KAAK8B,SAE9B9B,KAAKgC,cAAgB1F,EAAcP,WAAW/M,UAC9CgR,KAAKiC,sBAAwB3F,EAAcP,WAAWmG,QAGtDlC,KAAKmC,cAAgB1P,EAAOuN,KAAK8B,QAAS9B,KAAKgC,eAE/ChC,KAAKoC,gBAAkBpC,KAAKgC,cAAc1F,EAAcvI,WAAW,IAAIuI,EAAcvI,WAAW,IAAI,GAEpGiM,KAAK3G,aAAeiD,EAAcP,WAAW1C,aAE7C2G,KAAKqC,YAAc,EAMnBrC,KAAKsC,UAAY,GACjBtC,KAAKuC,YAAc,GAGnBvC,KAAKsC,UAAU,GAAK,CAACtC,KAAKgC,eAE1BhC,KAAKsC,UAAU,GAAK,CAACtC,KAAKmC,eAE1BnC,KAAKsC,UAAU,GAAK,GAMpBtC,KAAKuC,YAAY,GAAK,CACpB,IAGFvC,KAAKuC,YAAY,GAAK,CACpB,CAACvC,KAAK8B,UAGR9B,KAAKuC,YAAY,GAAK,CACpB,IAOFvC,KAAKwC,yBAA2B,CAAC,EAAG,GAGpC,IAAIC,EAA4B,IAAItJ,EAAmB6G,KAAKmC,eAAgBnC,KAAK6B,aAAc7B,KAAKqC,YAAarC,KAAK+B,iBAAkB/B,KAAK3G,aAAc2G,KAAKoC,gBAAiB9F,EAAcoG,SAAS,EAAO1C,KAAK1G,QAAS0G,KAAKjJ,IAAKiJ,KAAKzG,aAI5OyG,KAAKrF,oBAAsB,CAAC8H,GAI5BzC,KAAK2C,0BAA4B,IAoE/BjJ,EAAe,SAAUkJ,EAASC,EAAY/L,GAChDkJ,KAAK/E,MAAQ2H,EACb5C,KAAK5G,SAAWyJ,EAEhB7C,KAAKlJ,QAAUA,GAIboD,GAAc,SAAUhB,EAAOE,EAAUtC,GAC3CkJ,KAAKxG,OAAQ,EAGbwG,KAAK9G,MAAQA,EAEb8G,KAAK5G,SAAWA,EAChB4G,KAAKlJ,QAAUA,GGxwEJgM,GACX,WACE9C,KAAKjL,UAAY,EAEjBiL,KAAK4B,iBAAmB,EACxB5B,KAAK3G,aAAe,EACpB2G,KAAK+C,cAAgB,GASrB/C,KAAKgD,UAAW,EAChBhD,KAAKiD,UAAW,EAChBjD,KAAKkD,UAAW,EAChBlD,KAAKmD,QAAS,EAEdnD,KAAKoD,cAAe,EACpBpD,KAAKqD,cAAe,EAEpBrD,KAAKsD,mBAAoB,EACzBtD,KAAKuD,mBAAoB,EAQzBvD,KAAKnL,OAAQ,EAGXmL,KAAKrL,MAAQ,GAEbqL,KAAK/K,cAAgB,GAEvB+K,KAAKwD,QAAU/I,KAAKgJ,MACpBzD,KAAK0D,MAAQ,KAEb1D,KAAK9O,MC1CsB,WAI7B,IAHA,IAAMA,EAAQ,GAGLtC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BsC,EAAMtC,GAAK,GAIb,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1B,IAAK,IAAID,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BsC,EAAMtC,GAAGC,GAAK,CAAC,EAAG,EAAG,GAAG,GAAO,GAInC,IAAK,IAAID,EAAI,EAAGA,EAAI,EAAGA,IAErBsC,EAAMtC,GAAG,GAAK,CAAC,EAAG,EAAG,GAAG,GAAO,GAEjC,IAAK,IAAIA,EAAI,EAAGA,EAAI,EAAGA,IACrBsC,EAAMtC,GAAG,GAAK,CAAC,EAAG,EAAG,GAAG,GAAO,GA0BjC,OAvBAsC,EAAM,GAAG,GAAK,CAAC,EAAG,EAAG,GAAG,GAAM,GAC9BA,EAAM,GAAG,GAAK,CAAC,EAAG,EAAG,GAAG,GAAM,GAC9BA,EAAM,GAAG,GAAK,CAAC,EAAG,EAAG,GAAG,GAAM,GAC9BA,EAAM,GAAG,GAAK,CAAC,EAAG,EAAG,GAAG,GAAM,GAE9BA,EAAM,GAAG,GAAK,CAAC,EAAG,EAAG,GAAG,GAAM,GAC9BA,EAAM,GAAG,GAAK,CAAC,EAAG,EAAG,GAAG,GAAM,GAC9BA,EAAM,GAAG,GAAK,CAAC,EAAG,EAAG,GAAG,GAAM,GAC9BA,EAAM,GAAG,GAAK,CAAC,EAAG,EAAG,GAAG,GAAM,GAE9BA,EAAM,GAAG,GAAK,CAAC,EAAG,EAAG,GAAG,GAAM,GAC9BA,EAAM,GAAG,GAAK,CAAC,EAAG,EAAG,GAAG,GAAM,GAC9BA,EAAM,GAAG,GAAK,CAAC,EAAG,EAAG,GAAG,GAAM,GAC9BA,EAAM,GAAG,GAAK,CAAC,EAAG,EAAG,GAAG,GAAM,GAE9BA,EAAM,GAAG,GAAK,CAAC,EAAG,EAAG,GAAG,GAAM,GAC9BA,EAAM,GAAG,GAAK,CAAC,EAAG,EAAG,GAAG,GAAM,GAE9BA,EAAM,GAAG,GAAK,CAAC,EAAG,EAAG,GAAG,GAAM,GAC9BA,EAAM,GAAG,GAAK,CAAC,EAAG,EAAG,GAAG,GAAM,GAIvB5C,EAAgB4C,GAAO,GDJfyS,IF5Bb1F,GAAc,EAGde,GAAoB,GAEpB4E,GAAgB7F,cAChB8F,GAAkB9F,cAClB+F,GAAe/F,UAAQgG,OACvBC,GAAYjG,cACZkG,GAAmBlG,UAAQmG,QAK/BnG,cAAgB,YACfC,EAAmB,KACf4F,IAAeA,GAAcO,IAGlCpG,cAAkB,YACb8F,IAAiBA,GAAgBM,GAGrC3F,EAAe,MAETN,GAHNF,EAAmBmG,WAIfjG,IACHA,MAAsBvN,QAAQuO,GAC9BhB,MAAsBvN,QAAQwO,GAC9BjB,MAAwB,KAI1BH,UAAQgG,OAAS,YACZD,IAAcA,GAAaK,OAEzB9P,EAAI8P,MACN9P,GAAKA,OAAaA,UAA0BlE,SAiSzB,IAhSX6O,GAAkBpK,KAAKP,IAgSPoL,IAAY1B,UAAQqG,yBAC/C3E,EAAU1B,UAAQqG,wBAvBpB,SAAwBC,OAQnBC,EAPElI,EAAO,WACZmI,aAAaC,GACTC,IAASC,qBAAqBJ,GAClCK,WAAWN,IAENG,EAAUG,WAAWvI,EA3SR,KA8SfqI,KACHH,EAAMF,sBAAsBhI,MAcA2C,IAhS7Bf,UAGDD,cAAkB,SAACoG,EAAOS,GACzBA,EAAYC,MAAK,gBAEf5F,MAA2BtO,QAAQuO,GACnCD,MAA6BA,MAA2B6F,QAAO,mBAC9D1J,MAAY+D,EAAa/D,MAEzB,MAAOgE,GACRwF,EAAYC,MAAK,YACZxQ,QAAoBA,MAAqB,OAE9CuQ,EAAc,GACd7G,cAAoBqB,EAAGH,WAIrB+E,IAAWA,GAAUG,EAAOS,IAGjC7G,UAAQmG,QAAU,YACbD,IAAkBA,GAAiBE,OAEjC9P,EAAI8P,SACN9P,GAAKA,UAEPA,SAAgB1D,QAAQuO,GACvB,MAAOE,GACRrB,cAAoBqB,EAAG/K,SA8N1B,IAAIoQ,GAA0C,mBAAzBL,sB,wBI7SRW,GAAQ,WAQnB,IARyB,IJsOAC,EACpBC,EAKAC,EI5OoB,GJuOpBD,EAAWjH,EAAiBgH,SADRA,EIrOsBtF,GJsONsF,MAKpCE,EAAQtH,EAAaY,IAAgB,IAI3C0G,IAAiBF,EACZC,GAEe,MAAhBC,OACHA,QACAD,EAASE,IAAInH,IAEPiH,EAASG,MAAMnK,OANA+J,MIhPbK,EADiB,EACjBA,UAAWC,EADM,EACNA,aACXpU,EAAUmU,EAAVnU,MAFiB,EAGqCiN,IAAvDoH,EAHkB,KAGOC,EAHP,KAKnBC,EAAWxV,KAAKyV,IAAIC,OAAOC,YAAaD,OAAOE,YAAc,EAE7DC,EAAa,GACVlX,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAC7BkX,EAAWlX,GAAK,GAChB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAE1BiX,EAAWlX,GAAGC,GAAKqC,EAAMrC,GAAG,EAAID,GAC3BA,EAAIC,EAAK,IAAGiX,EAAWlX,GAAGC,GAAG,IAAK,GAI3C,IAIMkX,EAAmB,SAACC,EAAUC,EAAUC,GAC5C,IAAKX,EAMH,OALAW,EAAK,IAAK,EACVA,EAAK,GAAGvV,SAAQ,YACdO,EAD0B,YACd,IAAK,UAEnBsU,EAA2B,CAAEQ,WAAUC,aAIzC,IAAME,EAAa,CACjBZ,EAAwBU,SACxB,EAAIV,EAAwBS,SAC5BC,EACA,EAAID,GAGN,GAAIG,EAAW,KAAOA,EAAW,IAAMA,EAAW,KAAOA,EAAW,GAGlE,OAFAX,EAA2B,WAC3BF,EAvBoB,SAACc,GAAD,OAAU,EAAc,GAAIA,EAAM,CACxDlV,MAAOkV,EAAKlV,MAAMmV,KAAI,SAAAC,GAAG,OAAIA,EAAID,KAAI,SAAAH,GAAI,OAAI,EAAc,GAAIA,EAAM,CAAEK,EAAG,eAsB3DC,CAAgBnB,IAI/B,IAAMoB,EAAgBjS,EAAY2R,EAAYd,GAC9CC,EAAamB,GACbjB,EAA2B,MAE3Bb,YAAW,WAAM,MACQzJ,EAAeuL,EAAe,GACrDnB,EAAa,EAAc,GAAI9Q,EAFhB,EACPT,WAC+C0S,OACtD,IAGL,OAAQ,uBACN,qBAAOC,UAAU,2BACf,yBACE,kBAAIA,UAAU,eAAeC,MAAO,CAAEC,MAAOnB,EAAUoB,OAAQ,IAC7D,uBACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,4BAEDf,EAAWO,KAAI,SAACC,EAAKN,GAAN,OAAoB,kBAAIc,IAAKd,EAAUW,MAAO,CAAEE,OAAQpB,IACtE,sBAAK,EAAIO,GACRM,EAAID,KAAI,SAACH,EAAMD,GAAP,OAAqB,kBAAIa,IAAKb,EAAUS,UAAWR,EAAK,GAAKS,KAAMI,OAASJ,KAAMK,QACzF,mBAAKL,MAAO,CAAEE,OAAQpB,GAAYwB,QAAS,kBAAMlB,EAAiBC,EAAUC,EAAUC,KACpF,mBAAKgB,IAAG,kBAAoBhB,EAAK,GAAKA,EAAK,GAAnC,OAA6CW,OAAQpB,EAAUmB,MAAOnB,EAAU0B,MAAK,IAAKjB,EAAK,IAAMA,EAAK,GAAKS,KAAMS,SAAW,KAAKlB,EAAK,IAAMS,KAAMU,UAAY,mBC5DzKC,GAXF,WAAM,MACgBnJ,EAAS,IAAI2E,IACxCkC,EAAU,CAAEK,UAFD,KAEYC,aAFZ,MAIlB,OACC,YAAC,EAAYiC,SAAb,CAAsBtM,MAAO+J,GACvB,YAAC,GAAD,QCLOwC,UAJG,WACjB,OAAQ,YAAC,GAAD","file":"route-game.chunk.af144.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"darker\":\"darker__3FUDV\",\"square\":\"square__2d7yg\",\"selected2\":\"selected2__215Pa\",\"fadeIt\":\"fadeIt__2Id_H\",\"selected\":\"selected__1JKN2\"};","/////////////general////////////////////// \nvar objectToString = function (obj) {\n  var cache = [];\n  return JSON.stringify(obj, function (key, value) {\n    if (typeof value === 'object' && value !== null) {\n      if (cache.indexOf(value) !== -1) {\n        // Circular reference found, discard key\n        return;\n      }\n      // Store value in our collection\n      cache.push(value);\n    }\n    return value;\n  });\n};\n\n///////////////////evalgame////////////////\nvar evalFuncs = {\n  getPieceValues: function (dbTable) {\n\n    var result = {\n      wVal: 0,\n      bVal: 0\n    };\n\n    var table = dbTable.table;\n\n    table.forEach(function (x) {\n      x.forEach(function (y) {\n        switch (y[0]) {\n          case 1:\n\n            result.bVal += y[1];\n\n            break;\n\n          case 2:\n\n            result.wVal += y[1];\n\n            break;\n\n          default:\n            break;\n        }\n      });\n    });\n\n    return result;\n\n  },\n\n  shouldIDraw: function (dbTable) {\n    var pieceVals = this.getPieceValues(dbTable);\n\n    if (dbTable.wNext) {\n      if (pieceVals.wVal < pieceVals.bVal) return true;\n    } else {\n      if (pieceVals.wVal > pieceVals.bVal) return true;\n    }\n\n    return false;\n  },\n\n  checkIfLooped: function (newTable, allPastTables) {\n\n    var seenCount = 0;\n    var thisState = createState(newTable);\n\n    allPastTables.forEach(function (pastTable) {\n      if (pastTable === thisState) seenCount += 1;\n    });\n\n    return seenCount;\n\n  },\n};\n\n\n\nfunction canIMove(winTable, winColor) {\n  var winRetMoves = [];\n  getAllMoves(winTable, winColor).forEach(function (thisMove) { //get all his moves in array of strings\n    winRetMoves.push(coordsToMoveCoords(thisMove[0], thisMove[1], thisMove[2], thisMove[3]));\n  });\n\n  for (var i = winRetMoves.length - 1; i >= 0; i -= 1) { //sakkba \n    if (captured(moveIt(winRetMoves[i], winTable), winColor)) { //sakkba lepne valaszkent\t//moveit retmove ittis ottis\n      winRetMoves.splice(i, 1);\n    }\n  }\n  return (winRetMoves.length > 0);\n}\n\n\nfunction checkIfFinished(dbTable) {\n\n  var result = {\n    goOn: true,\n    result: {}\n  };\n\n  if (!canIMove(dbTable.table, dbTable.wNext) || dbTable.moveCount > 300) { // for learner, finish game at 300 moves\n\n    result.goOn = false;\n    result.looped = dbTable.moveCount > 300;\n\n    dbTable.gameIsOn = false;\n    dbTable.result = {\n\n      blackWon: false,\n      whiteWon: false,\n      isDraw: false,\n\n      whiteValue: 0,\n      blackValue: 0,\n\n      totalMoves: 0,\n      moveLog: dbTable.moves,\n\n      _id: dbTable._id\n\n    };\n\n    if (captured(dbTable.table, dbTable.wNext)) {\n\n      if (dbTable.wNext) {\n\n        dbTable.result.blackWon = true;\n\n      } else {\n        dbTable.result.whiteWon = true;\n\n      }\n\n    } else {\n      dbTable.result.isDraw = true;\n    }\n\n    var pieceVals = evalFuncs.getPieceValues(dbTable);\n\n    dbTable.result.whiteValue = pieceVals.wVal;\n    dbTable.result.blackValue = pieceVals.bVal;\n\n    dbTable.result.totalMoves = dbTable.moveCount;\n\n  }\n\n  result.result = dbTable.result;\n\n  return result;\n\n}\n\n/////////////////////// from old ai //////////////////////////\n\nfunction getMcFromMv(modVal) {\n\n  var modConst = 1;\n\n  if (modVal <= 50) {\n    modConst = modVal / 50;\n  } else {\n    modConst = 50 / (100 - modVal);\n  }\n  modConst = Math.pow(modConst, 3);\n\n  return modConst;\n\n}\n\nfunction getMvFromMc(modConst) {\n\n  modConst = Math.pow(modConst, 1 / 3);\n\n  var modVal = 0;\n\n  if (modConst <= 1) {\n    modVal = modConst * 50;\n  } else {\n    modVal = 100 - 50 / modConst;\n  }\n\n  return modVal;\n\n}\n\nexport function addMovesToTable(originalTable, whiteNext, dontClearInvalid, returnMoveCoords) {\n  var myCol = whiteNext ? 2 : 1;\n  for (var i = 0; i < 8; i += 1) {\n    for (var j = 0; j < 8; j += 1) {\n      if (originalTable[i][j][0] === myCol) {\n        // var returnMoveCoords = [];\n        originalTable[i][j][5] = canMove(i, j, whiteNext, originalTable, false, false, [0], dontClearInvalid, returnMoveCoords); //:  canMove(k, l, isWhite, moveTable, speedy, dontProt, hitSumm, dontRemoveInvalid) { //, speedy) {\n      } else {\n        originalTable[i][j][5] = [];\n      }\n    }\n  }\n  return originalTable;\n}\n\nfunction getTableData(origTable, isWhite, oppKingPos) { //, rtnSimpleValue) {\n\n  var lSancVal = 0;\n  var rSancVal = 0;\n\n  var tableValue = 0;\n\n  var rtnMyHitSum = [0]; //this pointer will be passed to canmove \n  var rtnHisHitSum = [0];\n\n  var rtnMyBestHit = 0;\n  var rtnHisBestHit = 0;\n\n  var rtnHisMoveCount = 0;\n\n  var rtnPushHimBack = 0;\n\n  var rtnApproachTheKing = 0;\n\n  if (oppKingPos === undefined) oppKingPos = whereIsTheKing(origTable, !isWhite);\n\n  var origColor = 1;\n  if (isWhite) origColor = 2;\n\n  if (isWhite && origTable[4][0][3]) { //we play with white and have not moved the king yet\n\n    var sancolhat = false;\n\n    if (origTable[0][0][3]) {\n      lSancVal += 3; //unmoved rook worth more than moved\n      sancolhat = true;\n\n      if (origTable[3][0][0] === 0) lSancVal += 1; //trying to empty between\n      if (origTable[2][0][0] === 0) lSancVal += 3;\n      if (origTable[1][0][0] === 0) lSancVal += 1;\n\n      if (origTable[2][1][0] === 2) { //trying to keep my pieces  there to cover\n        lSancVal += 1;\n        if (origTable[2][1][1] === 1) lSancVal += 4;\n      }\n      if (origTable[1][1][0] === 2) { //trying to keep my pieces  there to cover\n        lSancVal += 1;\n        if (origTable[1][1][1] === 1) lSancVal += 4;\n      }\n      if (origTable[0][1][0] === 2) { //trying to keep my pieces  there to cover\n        lSancVal += 1;\n        if (origTable[0][1][1] === 1) lSancVal += 4;\n      }\n\n    }\n\n    if (origTable[7][0][3]) {\n      sancolhat = true;\n      rSancVal += 3;\n\n      if (origTable[6][0][0] === 0) rSancVal += 1;\n      if (origTable[5][0][0] === 0) rSancVal += 3;\n\n      if (origTable[7][1][0] === 2) { //trying to keep my pieces  there to cover\n        rSancVal += 1;\n        if (origTable[7][1][1] === 1) rSancVal += 4;\n      }\n      if (origTable[6][1][0] === 2) { //trying to keep my pieces  there to cover\n        rSancVal += 1;\n        if (origTable[6][1][1] === 1) rSancVal += 4;\n      }\n      if (origTable[5][1][0] === 2) { //trying to keep my pieces  there to cover\n        rSancVal += 1;\n        if (origTable[5][1][1] === 1) rSancVal += 4;\n      }\n\n    }\n\n    if (sancolhat) {\n      if (origTable[3][1][1] === 1 && origTable[3][1][0] === 2) lSancVal -= 6; //try to move d2 or e2 first\n      if (origTable[4][1][1] === 1 && origTable[4][1][0] === 2) rSancVal -= 6;\n\n      if (origTable[2][0][1] === 2 && origTable[2][0][0] === 2) lSancVal -= 6; //try to move out bishops\n      if (origTable[5][0][1] === 2 && origTable[5][0][0] === 2) rSancVal -= 6;\n    }\n\n  }\n\n  if (!isWhite && origTable[4][7][3]) { //we play with black and have not moved the king yet\n    sancolhat = false;\n\n    if (origTable[0][7][3]) {\n      sancolhat = true;\n      lSancVal += 3; //unmoved rook worth more than moved\n\n      if (origTable[3][7][0] === 0) lSancVal += 1;\n      if (origTable[2][7][0] === 0) lSancVal += 3;\n      if (origTable[1][7][0] === 0) lSancVal += 1;\n\n      if (origTable[2][6][0] === 1) { //trying to keep my pieces  there to cover\n        lSancVal += 1;\n        if (origTable[2][6][1] === 1) lSancVal += 4;\n      }\n      if (origTable[1][6][0] === 1) { //trying to keep my pieces  there to cover\n        lSancVal += 1;\n        if (origTable[1][6][1] === 1) lSancVal += 4;\n      }\n      if (origTable[0][6][0] === 1) { //trying to keep my pieces  there to cover\n        lSancVal += 1;\n        if (origTable[0][6][1] === 1) lSancVal += 4;\n      }\n    }\n\n    if (origTable[7][7][3]) {\n      sancolhat = true;\n      rSancVal += 3;\n\n      if (origTable[6][7][0] === 0) rSancVal += 1;\n      if (origTable[5][7][0] === 0) rSancVal += 3;\n\n      if (origTable[7][6][0] === 1) { //trying to keep my pieces  there to cover\n        rSancVal += 1;\n        if (origTable[7][6][1] === 1) rSancVal += 4;\n      }\n      if (origTable[6][6][0] === 1) { //trying to keep my pieces  there to cover\n        rSancVal += 1;\n        if (origTable[6][6][1] === 1) rSancVal += 4;\n      }\n      if (origTable[5][6][0] === 1) { //trying to keep my pieces  there to cover\n        rSancVal += 1;\n        if (origTable[5][6][1] === 1) rSancVal += 4;\n      }\n\n    }\n    //\t\n    if (sancolhat) {\n      if (origTable[3][6][1] === 1 && origTable[3][6][0] === 1) lSancVal -= 4;\n      if (origTable[4][6][1] === 1 && origTable[4][6][0] === 1) rSancVal -= 4;\n\n      if (origTable[2][7][1] === 2 && origTable[2][7][0] === 1) lSancVal -= 4;\n      if (origTable[5][7][1] === 2 && origTable[5][7][0] === 1) rSancVal -= 4;\n\n    }\n\n  }\n  var myMostMoved = 0;\n\n  var getToMiddle = 0;\n  for (var lookI = 0; lookI < 8; lookI += 1) { //\n    for (var lookJ = 0; lookJ < 8; lookJ += 1) { //look through the table\n\n      if (origTable[lookI][lookJ][0] === origColor) { //ha sajat babum\n\n        //below:\tminnel nagyobb erteku babum minnel kozelebb az ellenfel kiralyahoz\n\n        rtnApproachTheKing += ((7 - Math.abs(oppKingPos[0] - lookI)) + (7 - Math.abs(oppKingPos[1] - lookJ))) * origTable[lookI][lookJ][1];\n\n        canMove(lookI, lookJ, isWhite, origTable, true, true, rtnMyHitSum); //this can give back the moves, should use it\n        if (origTable[lookI][lookJ][2] > myMostMoved) myMostMoved = origTable[lookI][lookJ][2]; //get the highest number any piece moved\n\n        if (isWhite) {\n          rtnPushHimBack += lookJ;\n        } else {\n          rtnPushHimBack += 7 - lookJ;\n        }\n\n        tableValue += origTable[lookI][lookJ][1];\n\n      } else {\n\n        if (!(origTable[lookI][lookJ][0] === 0)) { //ha ellenfele\n\n          rtnHisMoveCount += (canMove(lookI, lookJ, !isWhite, origTable, true, true, rtnHisHitSum)\n            .length - 2);\n          if (!isWhite) {\n            rtnPushHimBack -= lookJ / 10;\n          } else {\n            rtnPushHimBack -= (7 - lookJ) / 10;\n          }\n          //or this tblevalue:\n          tableValue -= origTable[lookI][lookJ][1];\n        }\n      }\n    }\n  }\n\n  return [tableValue, rtnMyHitSum[0], rtnHisHitSum[0], // rtnHisMoveCount, \n    lSancVal, rSancVal, getToMiddle, rtnPushHimBack, myMostMoved, rtnApproachTheKing\n  ];\n\n}\n\nfunction findMyPieces(origTable, isWhite) {\n  var myTempPieces = [];\n  var origColor = isWhite ? 2 : 1;\n\n  for (var lookI = 0; lookI < 8; lookI += 1) { //\n    for (var lookJ = 0; lookJ < 8; lookJ += 1) { //look through the table\n      if (origTable[lookI][lookJ][0] === origColor) { //ha sajat babum\n        myTempPieces[myTempPieces.length] = [lookI, lookJ, origTable[lookI][lookJ][1]]; //itt kene szamitott erteket is adni a babuknak \n      }\n    }\n  }\n  return [0, myTempPieces]; //, hisTempPieces, rtnMyHitSum[0], rtnHisHitSum[0], rtnMyMovesCount] //returnArray // elso elem az osszes babu ertekenek osszge, aztan babkuk\n}\n\nfunction getAllMoves(tableToMoveOn, whiteNext, hitItsOwn, allHitSum, removeCaptured) { //shouldn't always check hitsum\n  var origColor = whiteNext ? 2 : 1;\n  var thisArray = [];\n\n  if (hitItsOwn) {\n    whiteNext = !whiteNext;\n  }\n  var hitSumPart = [0];\n\n  for (var lookI = 0; lookI < 8; lookI += 1) { //\n    for (var lookJ = 0; lookJ < 8; lookJ += 1) { //look through the table\n      if (tableToMoveOn[lookI][lookJ][0] === origColor) { //ha sajat babum\n        canMove(lookI, lookJ, whiteNext, tableToMoveOn, !removeCaptured, true, hitSumPart) //true,true for speedy(sakkba is lep),dontProtect\n          .forEach(function (stepItem) {\n            thisArray[thisArray.length] = [lookI, lookJ, stepItem[0], stepItem[1]];\n          });\n      }\n    }\n  }\n  return thisArray;\n}\n\nfunction protectPieces(originalTable, whitePlayer) {\n  var myCol = 1;\n  if (whitePlayer) myCol = 2; //myCol is 2 when white\n  var protectedSum = 0;\n  getAllMoves(originalTable, whitePlayer, true)\n    . //moves include to hit my own \n    //true stands for letMeHitMyOwn\n\n    forEach(function (thisMoveCoords) {\n      //we'll use the 2nd part of the moves [2][3]\n      if (originalTable[thisMoveCoords[2]][thisMoveCoords[3]][0] === myCol) { //if i have sg there\n        originalTable[thisMoveCoords[2]][thisMoveCoords[3]][6] = true; //that must be protected\n\n        if (originalTable[thisMoveCoords[0]][thisMoveCoords[1]][1] === 9) {\n          protectedSum += (9 - originalTable[thisMoveCoords[2]][thisMoveCoords[3]][1]) * 2; //king protects double\n\n        } else {\n\n          protectedSum += 9 - originalTable[thisMoveCoords[2]][thisMoveCoords[3]][1];\n        }\n\n      }\n    });\n  return protectedSum;\n}\n\nfunction protectTable(table, myCol) {\n  return protectPieces(table, myCol) - protectPieces(table, !myCol);\n}\n\nfunction whereIsTheKing(table, wn) {\n  var myCol = 1;\n  if (wn) myCol += 1; //myCol is 2 when white\n\n  for (var i = 0; i < 8; i += 1) {\n    for (var j = 0; j < 8; j += 1) {\n      if (table[i][j][1] === 9 && table[i][j][0] === myCol) {\n        //itt a kiraly\n        return [i, j];\n      }\n    }\n  }\n}\n\nfunction canMove(k, l, isWhite, moveTable, speedy, dontProt, hitSumm = [0], dontRemoveInvalid, returnMoveCoords) { //, speedy) {\n\n  var what = moveTable[k][l][1];\n  var possibleMoves = [];\n  var scndHitSum = [0];\n  switch (what) {\n    case 1:\n      possibleMoves = pawnCanMove(k, l, isWhite, moveTable, hitSumm);\n      break;\n    case 2:\n      possibleMoves = bishopCanMove(k, l, isWhite, moveTable, hitSumm);\n      break;\n    case 3:\n      possibleMoves = horseCanMove(k, l, isWhite, moveTable, hitSumm);\n      break;\n    case 4:\n      possibleMoves = rookCanMove(k, l, isWhite, moveTable, hitSumm);\n      break;\n    case 5:\n      possibleMoves = queenCanMove(k, l, isWhite, moveTable, hitSumm);\n      break;\n    case 9:\n      possibleMoves = kingCanMove(k, l, isWhite, moveTable, hitSumm);\n      break;\n    default:\n  }\n\n  if (typeof returnMoveCoords !== 'undefined') { //and not undefined..\n    possibleMoves.forEach(function (move) {\n      returnMoveCoords[returnMoveCoords.length] = coordsToMoveCoords(k, l, move[0], move[1]);\n    });\n\n  }\n\n  if (!speedy) { //     lefut.\n    for (var i = possibleMoves.length - 1; i >= 0; i -= 1) { //sakkba nem lephetunk\n      if (captured(moveIt(coordsToMoveCoords(k, l, possibleMoves[i][0], possibleMoves[i][1]), moveTable, dontProt), isWhite)) { //sakkba lepnenk\n        possibleMoves.splice(i, 1);\n      }\n    }\n\n    if (what === 9 && moveTable[k][l][3]) { //lesznek sanc lepesek is a possibleMoves tombben: kiraly nem mozdult meg\n\n      if (captured(moveTable, isWhite)) { // de sakkban allunk\n        for (var spliceCount = possibleMoves.length - 1; spliceCount >= 0; spliceCount -= 1) {\n          if (possibleMoves[spliceCount][1] === l && (possibleMoves[spliceCount][0] === k - 2 || possibleMoves[spliceCount][0] === k + 2)) {\n            possibleMoves.splice(spliceCount, 1); //remove\n          }\n        }\n      }\n\n      // remove the sakkot atugrani sem er sanc\n\n      var removeKmin2 = true; //alapbol leszedne\n      var removeKplus2 = true;\n\n      for (var i = possibleMoves.length - 1; i >= 0; i -= 1) { //\n        if (possibleMoves[i][1] === l && possibleMoves[i][0] === k - 1) removeKmin2 = false; //de ha van koztes lepes, ne szedd le\n        if (possibleMoves[i][1] === l && possibleMoves[i][0] === k + 1) removeKplus2 = false;\n      }\n\n      for (var i = possibleMoves.length - 1; i >= 0; i -= 1) { //itt szedi le a sanclepeseket\n        if (possibleMoves[i][1] === l &&\n          ((possibleMoves[i][0] === k - 2 && removeKmin2) ||\n            (possibleMoves[i][0] === k + 2 && removeKplus2))) {\n          possibleMoves.splice(i, 1);\n        }\n      }\n    }\n  }\n  return possibleMoves;\n}\n\nfunction whatsThere(i, j, aiTable) {\n  if (i > -1 && j > -1 && i < 8 && j < 8) {\n    return aiTable[i][j];\n  }\n  return [];\n}\n\nfunction pushAid(hitSummmm = [0], canMoveTo, x, y, hanyadik, milegyen, fromTable, isWhite, whatHits) {\n  if (whatsThere(x, y, fromTable)[hanyadik] !== milegyen) return false;\n\n  const target = fromTable[x][y];\n\n  canMoveTo[canMoveTo.length] = [x, y, target[1]];\n\n  var thisHit = 0;\n  if (target[6]) { //alert('protectedHit')\t//ha protectedre lep\n    thisHit = target[1] - //thisHitbol kivonja amivel lep\n      whatHits; //* whatHitsConst\n    if (thisHit < 0) thisHit = 0; //negaive is 0\n  } else {\n    thisHit = target[1]; //normal hivalue\n  }\n\n  if (hitSummmm[0] < thisHit) hitSummmm[0] = thisHit;\n  return true;\n}\n\n\nfunction pushAidA(hitSummmm, canMoveTo, x, y, fromTable, isWhite, whatHits) {\n  const pieceThere = whatsThereNN(x, y, fromTable);\n  if (pieceThere[0] === 3) return false;  // off the table, dont go further\n\n  const myCol = isWhite ? 2 : 1;\n  const target = fromTable[x][y];\n\n  if (target[0] === myCol) return false; // my piece, can't go there, dont go further\n\n  // opponents piece or empty sqare there, can move there\n  canMoveTo[canMoveTo.length] = [x, y, target[1]];\n\n  if (target[0] === 0) return true; // can go further if it was empty space, no hit\n\n  // we found a hit\n  var thisHit = target[1]; //normal hivalue\n  if (target[6]) thisHit -= whatHits; // protected\n\n  if (hitSummmm[0] < thisHit) hitSummmm[0] = thisHit;\n\n  return false; // can't go further\n}\n\nfunction pushAidP(hitSummmm, canMoveTo, x, y, fromTable, isWhite, whatHits) {\n  if (fromTable[x][y][0] === 0) canMoveTo[canMoveTo.length] = [x, y, 0];\n}\n\n\nfunction pushAidPH(hitSummmm, canMoveTo, x, y, fromTable, isWhite, whatHits) {\n  const nc = isWhite ? 1 : 2;\n  // if (x < 0 || x > 7 || y < 0 || y > 7) console.log(arguments)\n  if (x > 0 && fromTable[x - 1][y][0] === nc) canMoveTo[canMoveTo.length] = [x - 1, y, fromTable[x - 1][y][1]]\n  if (x < 7 && fromTable[x + 1][y][0] === nc) canMoveTo[canMoveTo.length] = [x + 1, y, fromTable[x + 1][y][1]]\n\n  if (fromTable[x][y][0] === 0) {\n    canMoveTo[canMoveTo.length] = [x, y, 0];\n    return true;\n  }\n}\n\n\nfunction rookCanMove(k, l, isWhite, moveTable, hitSummm = [0]) {\n  var canMoveTo = [];\n  var i = k + 1;\n  while (pushAidA(hitSummm, canMoveTo, i, l, moveTable, isWhite, 4)) i += 1;\n  i = k - 1;\n  while (pushAidA(hitSummm, canMoveTo, i, l, moveTable, isWhite, 4)) i -= 1;\n  i = l + 1;\n  while (pushAidA(hitSummm, canMoveTo, k, i, moveTable, isWhite, 4)) i += 1;\n  i = l - 1;\n  while (pushAidA(hitSummm, canMoveTo, k, i, moveTable, isWhite, 4)) i -= 1;\n  return canMoveTo;\n}\n\nfunction bishopCanMove(k, l, isWhite, moveTable, hitSummm = [0]) {\n  var canMoveTo = [];\n  var i = k + 1;\n  var j = l + 1;\n  while (pushAidA(hitSummm, canMoveTo, i, j, moveTable, isWhite, 2)) {\n    i += 1;\n    j += 1;\n  }\n  i = k - 1;\n  j = l - 1;\n  while (pushAidA(hitSummm, canMoveTo, i, j, moveTable, isWhite, 2)) {\n    i -= 1;\n    j -= 1;\n  }\n  i = k + 1;\n  j = l - 1;\n  while (pushAidA(hitSummm, canMoveTo, i, j, moveTable, isWhite, 2)) {\n    i += 1;\n    j -= 1;\n  }\n  i = k - 1;\n  j = l + 1;\n  while (pushAidA(hitSummm, canMoveTo, i, j, moveTable, isWhite, 2)) {\n    i -= 1;\n    j += 1;\n  }\n  return canMoveTo;\n}\n\n\nfunction queenCanMove(k, l, isWhite, moveTable, hitSummm = [0]) {\n  var canMoveTo = [];\n  var i = k + 1;\n  var j = l + 1;\n  while (pushAidA(hitSummm, canMoveTo, i, j, moveTable, isWhite, 5)) {\n    i += 1;\n    j += 1;\n  }\n  i = k - 1;\n  j = l - 1;\n  while (pushAidA(hitSummm, canMoveTo, i, j, moveTable, isWhite, 5)) {\n    i -= 1;\n    j -= 1;\n  }\n  i = k + 1;\n  j = l - 1;\n  while (pushAidA(hitSummm, canMoveTo, i, j, moveTable, isWhite, 5)) {\n    i += 1;\n    j -= 1;\n  }\n  i = k - 1;\n  j = l + 1;\n  while (pushAidA(hitSummm, canMoveTo, i, j, moveTable, isWhite, 5)) {\n    i -= 1;\n    j += 1;\n  }\n  i = k + 1;\n  while (pushAidA(hitSummm, canMoveTo, i, l, moveTable, isWhite, 5)) i += 1;\n  i = k - 1;\n  while (pushAidA(hitSummm, canMoveTo, i, l, moveTable, isWhite, 5)) i -= 1;\n  i = l + 1;\n  while (pushAidA(hitSummm, canMoveTo, k, i, moveTable, isWhite, 5)) i += 1;\n  i = l - 1;\n  while (pushAidA(hitSummm, canMoveTo, k, i, moveTable, isWhite, 5)) i -= 1;\n  return canMoveTo;\n}\n\n\nfunction pawnCanMove(k, l, isWhite, moveTable, hitSummm) {\n  var canMoveTo = [];\n\n  if (isWhite) {\n    if (pushAidPH(hitSummm, canMoveTo, k, l + 1, moveTable, true, 1) && l === 1) {\n      pushAidP(hitSummm, canMoveTo, k, l + 2, moveTable, true, 1);\n    }\n\n    //en pass\n    if (k > 0 && moveTable[k - 1][l][3]) {\n      pushAidA(hitSummm, canMoveTo, k - 1, l + 1, moveTable, true, 1);\n    }\n    if (k < 7 && moveTable[k + 1][l][3]) {\n      pushAidA(hitSummm, canMoveTo, k + 1, l + 1, moveTable, true, 1);\n    }\n    return canMoveTo;\n  }\n\n  if (pushAidPH(hitSummm, canMoveTo, k, l - 1, moveTable, false, 1) && l === 6) {\n    pushAidP(hitSummm, canMoveTo, k, l - 2, moveTable, false, 1);\n  }\n\n  //en pass\n  if (k > 0 && moveTable[k - 1][l][3]) {\n    pushAidA(hitSummm, canMoveTo, k - 1, l - 1, moveTable, false, 1);\n  }\n  if (k < 7 && moveTable[k + 1][l][3]) {\n    pushAidA(hitSummm, canMoveTo, k + 1, l - 1, moveTable, false, 1);\n  }\n  return canMoveTo;\n}\n\nfunction kingCanMove(k, l, isWhite, moveTable, hitSummm) {\n\n  var canMoveTo = [];\n\n  pushAidA(hitSummm, canMoveTo, k + 1, l + 1, moveTable, isWhite, 9);\n  pushAidA(hitSummm, canMoveTo, k - 1, l + 1, moveTable, isWhite, 9);\n  pushAidA(hitSummm, canMoveTo, k + 1, l - 1, moveTable, isWhite, 9);\n  pushAidA(hitSummm, canMoveTo, k - 1, l - 1, moveTable, isWhite, 9);\n  pushAidA(hitSummm, canMoveTo, k + 1, l, moveTable, isWhite, 9);\n  pushAidA(hitSummm, canMoveTo, k - 1, l, moveTable, isWhite, 9);\n  pushAidA(hitSummm, canMoveTo, k, l + 1, moveTable, isWhite, 9);\n  pushAidA(hitSummm, canMoveTo, k, l - 1, moveTable, isWhite, 9);\n\n  //sanc\n  if (moveTable[k][l][3]) { //if the king hasnt moved yet, \n\n    // !!!TODO!!!: ha nincs sakkban, nem is ugrik at sakkot\n\n    if (moveTable[0][l][3] && // unmoved rook on [0][l]\n      moveTable[1][l][0] === 0 && moveTable[2][l][0] === 0 && moveTable[3][l][0] === 0) { //empty between\n      pushAidA(hitSummm, canMoveTo, 2, l, moveTable, isWhite, 9); //mark that cell if empty\n    }\n    if (moveTable[7][l][3] && moveTable[5][l][0] === 0 && moveTable[6][l][0] === 0) { //empty between\n      pushAidA(hitSummm, canMoveTo, 6, l, moveTable, isWhite, 9); //mark that cell if empty\n    }\n  }\n  return canMoveTo;\n}\n\nfunction horseCanMove(k, l, isWhite, moveTable, hitSummm) {\n  var canMoveTo = [];\n  pushAidA(hitSummm, canMoveTo, k + 1, l + 2, moveTable, isWhite, 3);\n  pushAidA(hitSummm, canMoveTo, k + 1, l - 2, moveTable, isWhite, 3);\n  pushAidA(hitSummm, canMoveTo, k - 1, l + 2, moveTable, isWhite, 3);\n  pushAidA(hitSummm, canMoveTo, k - 1, l - 2, moveTable, isWhite, 3);\n  pushAidA(hitSummm, canMoveTo, k + 2, l + 1, moveTable, isWhite, 3);\n  pushAidA(hitSummm, canMoveTo, k + 2, l - 1, moveTable, isWhite, 3);\n  pushAidA(hitSummm, canMoveTo, k - 2, l + 1, moveTable, isWhite, 3);\n  pushAidA(hitSummm, canMoveTo, k - 2, l - 1, moveTable, isWhite, 3);\n  return canMoveTo;\n}\n\nfunction createState(table) {\n  // make this string and concat!!!!!!!!!!!!!!!!!!!!\n  var stateToRemember = [];\n  for (var i = 0; i < 8; i += 1) {\n    for (var j = 0; j < 8; j += 1) {\n\n      var x = 10 * (~~table[i][j][0]) + (~~table[i][j][1]) + 55; //  B vagy nagyobb\n      if (x < 65) x = 65; // ez egy nagy A\n\n      stateToRemember[8 * i + j] = String.fromCharCode(x);\n    }\n  }\n  return stateToRemember.join('');\n}\n\nfunction getPushString(table, moveCoords) {\n\n\n  const whatM = table[moveCoords[0]][moveCoords[1]];\n\n  // var cWhatMoves = String(whatM[0]); //color of whats moving\n  var pWhatMoves = String(whatM[1]); //piece\n\n  var whatsHit = table[moveCoords[2]][moveCoords[3]][0].toString() + //color of whats hit\n    table[moveCoords[2]][moveCoords[3]][1]; //piece\n\n  if (whatM[1] === 1 && //paraszt\n    moveCoords[0] !== moveCoords[2] && //keresztbe\n    whatsHit === '00' //uresre\n  ) { //akkor tuti enpass\n    if (whatM[0] === 1) { //fekete\n      whatsHit = '21'; //akkor feher parasztot ut\n    } else {\n      whatsHit = '11';\n    }\n\n  }\n\n  return whatM[0].toString() + whatM[1] + coordsToMoveString(moveCoords) + whatsHit;\n\n}\n\nexport function moveInTable(moveCoords, dbTable, isLearner) {\n  // console.log(new Error().stack)\n  // console.log(arguments)\n\n  var toPush = getPushString(dbTable.table, moveCoords); //piece\n\n  dbTable.moves.push(toPush);\n\n  dbTable.table = moveIt(moveCoords, dbTable.table); //\t<-= 1-= 1moves it\n\n  dbTable.wNext = !dbTable.wNext;\n\n  dbTable.pollNum += 1;\n\n  dbTable.moveCount += 1;\n\n  dbTable.table = addMovesToTable(dbTable.table, dbTable.wNext);\n\n  var pushThis = createState(dbTable.table);\n\n  dbTable.allPastTables.push(pushThis);\n\n  return dbTable;\n\n}\n\nfunction captured(table, color) {\n\n  var tempMoves = [];\n\n  var myCol = 1;\n\n  if (color) myCol += 1; //myCol is 2 when white\n\n  for (var i = 0; i < 8; i += 1) {\n    for (var j = 0; j < 8; j += 1) {\n\n      if (table[i][j][1] === 9 && table[i][j][0] === myCol) {\n        //itt a kiraly\n\n        tempMoves = bishopCanMove(i, j, color, table, [0]);\n\n        for (var tempMoveCount = 0; tempMoveCount < tempMoves.length; tempMoveCount += 1) {\n          if (table[tempMoves[tempMoveCount][0]][tempMoves[tempMoveCount][1]][1] === 5 ||\n            table[tempMoves[tempMoveCount][0]][tempMoves[tempMoveCount][1]][1] === 2) {\n            return true;\n          }\n\n        }\n\n        tempMoves = rookCanMove(i, j, color, table, [0]);\n\n        for (var tempMoveCount = 0; tempMoveCount < tempMoves.length; tempMoveCount += 1) {\n          if (table[tempMoves[tempMoveCount][0]][tempMoves[tempMoveCount][1]][1] === 5 ||\n            table[tempMoves[tempMoveCount][0]][tempMoves[tempMoveCount][1]][1] === 4) {\n            return true;\n          }\n\n        }\n\n        tempMoves = horseCanMove(i, j, color, table, [0]);\n\n        for (var tempMoveCount = 0; tempMoveCount < tempMoves.length; tempMoveCount += 1) {\n          if (table[tempMoves[tempMoveCount][0]][tempMoves[tempMoveCount][1]][1] === 3) {\n            return true;\n          }\n\n        }\n\n        if (color ? j < 7 : j > 0) {\n\n          tempMoves = pawnCanMove(i, j, color, table, [0]);\n\n          for (var tempMoveCount = 0; tempMoveCount < tempMoves.length; tempMoveCount += 1) {\n            if (table[tempMoves[tempMoveCount][0]][tempMoves[tempMoveCount][1]][1] === 1) {\n              return true;\n            }\n\n          }\n\n        }\n\n        tempMoves = kingCanMove(i, j, color, table, [0]);\n\n        for (var tempMoveCount = 0; tempMoveCount < tempMoves.length; tempMoveCount += 1) {\n          if (table[tempMoves[tempMoveCount][0]][tempMoves[tempMoveCount][1]][1] === 9) {\n            return true;\n          }\n\n        }\n\n      }\n    }\n  }\n  return false;\n}\n\nfunction moveIt(moveCoords, intable, dontProtect, hitValue) {\n\n  if (hitValue === undefined) var hitValue = [0];\n  var thistable = [];\n\n  for (var i = 0; i < 8; i += 1) {\n    thistable[i] = new Array(8);\n    for (var j = 0; j < 8; j += 1) {\n      // thistable[i][j] = intable[i][j].slice(0, 4)  //crashes in cordova, typedArray has no slice...\n      thistable[i][j] = new Array(4);\n      for (var k = 0; k < 4; k += 1) thistable[i][j][k] = intable[i][j][k];\n    }\n  }\n  //itt indil sanc bastyatolas\n  // console.log(arguments)\n  if (thistable[moveCoords[0]][moveCoords[1]][1] === 9 && thistable[moveCoords[0]][moveCoords[1]][3]) {\n    // moving a king that hasnt moved yet\n    switch (moveCoords[2]) {\n      case 2:\n        switch (moveCoords[3]) {\n          case 0:\n            thistable = moveIt([0, 0, 3, 0], thistable);\n            break;\n          case 7:\n            thistable = moveIt([0, 7, 3, 7], thistable);\n            break;\n          default:\n        }\n        break;\n      case 6:\n        switch (moveCoords[3]) {\n          case 0:\n            thistable = moveIt([7, 0, 5, 0], thistable);\n            break;\n          case 7:\n            thistable = moveIt([7, 7, 5, 7], thistable);\n            break;\n          default:\n        }\n        break;\n      default:\n    }\n  }\n  //es itt a vege\n\n  //itt indul en passant mark the pawn to be hit\n\n  //unmark all first\n\n  for (let ij = 0; ij < 8; ij += 1) {\n\n    thistable[ij][3][3] = false; //can only be in row 3 or 4\n\n    thistable[ij][4][3] = false;\n\n  }\n\n  if (thistable[moveCoords[0]][moveCoords[1]][1] === 1 &&\n    ((moveCoords[1] === 1 && moveCoords[3] === 3) ||\n      (moveCoords[1] === 6 && moveCoords[3] === 4))) { //ha paraszt kettot lep\n\n    thistable[moveCoords[0]][moveCoords[1]][3] = true; //[3]true for enpass\n  }\n  //es itt a vege\n\n  //indul en passt lepett\n  var enPass = false;\n  if (\n    thistable[moveCoords[0]][moveCoords[1]][1] === 1 && //paraszt\n    thistable[moveCoords[2]][moveCoords[3]][0] === 0 && //uresre\n    (moveCoords[0] !== moveCoords[2]) //keresztbe\n  ) {\n    enPass = true;\n    thistable[moveCoords[2]][moveCoords[3]] = thistable[moveCoords[2]][moveCoords[1]];\n    thistable[moveCoords[2]][moveCoords[1]] = [0, 0, false, false, false]; //ures\n  }\n\n  hitValue[0] = thistable[moveCoords[2]][moveCoords[3]][1]; //normal hivalue\n\n  if (thistable[moveCoords[0]][moveCoords[1]][1] === 1 && ( //ha paraszt es\n    // (thistable[moveCoords[0]][moveCoords[1]][0] === 2 && //es feher\n    moveCoords[3] === 7 || //es 8asra lep vagy\n    // (thistable[moveCoords[0]][moveCoords[1]][0] === 1 && //vagy fekete\n    moveCoords[3] === 0 //1re\n  )) {\n    //AKKOR\n    thistable[moveCoords[0]][moveCoords[1]][1] = 5; //kiralyno lett\n    hitValue[0] += 4; //this move worth the difference betwwen queen's and pawn's value (5-1)\n  }\n\n  // // if(enPass) {\n  // // \thitValue = 0.99\n  // // } else {\n  // hitValue[0] = thistable[moveCoords[2]][moveCoords[3]][1]; //normal hivalue\n  //   //- thistable[moveCoords[0]][moveCoords[1]][1] / 100 //whathits\n  //   //}\n\n  thistable[moveCoords[0]][moveCoords[1]][2] += 1; //times moved\n\n  thistable[moveCoords[2]][moveCoords[3]] =\n    thistable[moveCoords[0]][moveCoords[1]];\n  thistable[moveCoords[0]][moveCoords[1]] = [0, 0, 0]; //, false, false, false]\n  if (!(thistable[moveCoords[2]][moveCoords[3]][1] === 1)) {\n    thistable[moveCoords[2]][moveCoords[3]][3] = false;\n  }\n\n  return thistable;\n}\n\nfunction coordsToMoveCoords(a, b, c, d) {\n  return [a, b, c, d]\n}\n\n\nfunction coordsToMoveString(a, b, c, d) {\n  return String.fromCharCode(97 + a) + (b + 1) + String.fromCharCode(97 + c) + (d + 1);\n}\n\n/////////////////////// from old ai end //////////////////////////\n\nfunction pawnCanMoveN(k, l, moveTable, protectedArray, c, iHitMoves, protectScore, possibleMoves) {\n  if (c === 2) { //white pawn\n    pushAidXN(k, l, k + 1, l + 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n    pushAidXN(k, l, k - 1, l + 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n    return;\n  }\n  pushAidXN(k, l, k + 1, l - 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidXN(k, l, k - 1, l - 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n}\n\nfunction rookCanMoveN(k, l, moveTable, protectedArray, c, iHitMoves, protectScore, possibleMoves) {\n  var i = k + 1;\n  while (pushAidNN(k, l, i, l, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) i += 1;\n  i = k - 1;\n  while (pushAidNN(k, l, i, l, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) i -= 1;\n  i = l + 1;\n  while (pushAidNN(k, l, k, i, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) i += 1;\n  i = l - 1;\n  while (pushAidNN(k, l, k, i, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) i -= 1;\n}\n\nfunction bishopCanMoveN(k, l, moveTable, protectedArray, c, iHitMoves, protectScore, possibleMoves) {\n  var i = k + 1;\n  var j = l + 1;\n  while (pushAidNN(k, l, i, j, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) {\n    i += 1;\n    j += 1;\n  }\n\n  i = k - 1;\n  j = l - 1;\n  while (pushAidNN(k, l, i, j, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) {\n    i -= 1;\n    j -= 1;\n  }\n\n  i = k - 1;\n  j = l + 1;\n  while (pushAidNN(k, l, i, j, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) {\n    i -= 1;\n    j += 1;\n  }\n\n  i = k + 1;\n  j = l - 1;\n  while (pushAidNN(k, l, i, j, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) {\n    i += 1;\n    j -= 1;\n  }\n}\n\nfunction queenCanMoveN(k, l, moveTable, protectedArray, c, iHitMoves, protectScore, possibleMoves) {\n  var i = k + 1;\n  while (pushAidNN(k, l, i, l, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) i += 1;\n  i = k - 1;\n  while (pushAidNN(k, l, i, l, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) i -= 1;\n  i = l + 1;\n  while (pushAidNN(k, l, k, i, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) i += 1;\n  i = l - 1;\n  while (pushAidNN(k, l, k, i, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) i -= 1;\n  i = k + 1;\n  var j = l + 1;\n  while (pushAidNN(k, l, i, j, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) {\n    i += 1;\n    j += 1;\n  }\n  i = k - 1;\n  j = l - 1;\n  while (pushAidNN(k, l, i, j, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) {\n    i -= 1;\n    j -= 1;\n  }\n  i = k - 1;\n  j = l + 1;\n  while (pushAidNN(k, l, i, j, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) {\n    i -= 1;\n    j += 1;\n  }\n  i = k + 1;\n  j = l - 1;\n  while (pushAidNN(k, l, i, j, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves)) {\n    i += 1;\n    j -= 1;\n  }\n}\n\nfunction kingCanMoveN(k, l, moveTable, protectedArray, c, iHitMoves, protectScore, possibleMoves) {\n  pushAidN(k, l, k + 1, l, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k - 1, l, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k + 1, l + 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k - 1, l + 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k + 1, l - 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k - 1, l - 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k, l + 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k, l - 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n\n  //sanc\n  if (moveTable[k][l][3]) { //if the king hasnt moved yet, \n    // ha nincs sakkban, nem is ugrik at sakkot, minden ures kozotte\n    if (moveTable[0][l][3] && // unmoved rook on [0][l]\n      moveTable[1][l][0] === 0 && moveTable[2][l][0] === 0 && moveTable[3][l][0] === 0) { //empty between\n      pushAidN(k, l, 2, l, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n    }\n    if (moveTable[7][l][3] && moveTable[5][l][0] === 0 && moveTable[6][l][0] === 0) { // unmoved rook on [7][l] && empty between\n      pushAidN(k, l, 6, l, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n    }\n  }\n}\n\nfunction horseCanMoveN(k, l, moveTable, protectedArray, c, iHitMoves, protectScore, possibleMoves) {\n  pushAidN(k, l, k + 1, l + 2, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k + 1, l - 2, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k - 1, l + 2, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k - 1, l - 2, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n\n  pushAidN(k, l, k + 2, l + 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k + 2, l - 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k - 2, l + 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n  pushAidN(k, l, k - 2, l - 1, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves);\n}\n\nfunction whatsThereN(i, j, table) {\n  if (i >= 0 && j >= 0 && i <= 7 && j <= 7) return table[i][j];\n  return [0];\n}\n\nfunction whatsThereNN(i, j, table) {\n  if (i >= 0 && j >= 0 && i <= 7 && j <= 7) return table[i][j];\n  return [3]; // off the table\n}\n\nfunction pushAidN(k, l, x, y, c, table, protectedArray, iHitMoves, protectScore, possibleMoves) {\n  var isThere = whatsThereN(x, y, table);\n  if (isThere[0] !== 0) { //van ott vmi\n    if (isThere[0] === c) {\n      //my piece is there\n      protectScore[0] += 1;\n      protectedArray[x][y] = true; //protected\t\t//moveit will clear, fastmove not???!!!\n    } else {\n      //opps piece is there\n      possibleMoves[8 * x + y] = true; // TODO: did this break the stats?\n      iHitMoves[iHitMoves.length] = [k, l, x, y, table[k][l][1], table[x][y][1]]; //[who k,l where to x,y who, hits]\n    }\n    return true;\n  }\n  possibleMoves[8 * x + y] = true;\n  return false;\n}\n\nfunction pushAidXN(k, l, x, y, c, table, protectedArray, iHitMoves, protectScore, possibleMoves) {\n  if (x < 0 || x > 7) return false; // off the table\n  if (table[x][y][0] !== 0) { //van ott vmi\n    if (table[x][y][0] === c) {\n      //my piece is there\n      protectScore[0] += 1;\n      protectedArray[x][y] = true; //protected\t\t//moveit will clear, fastmove not???!!!\n    } else {\n      //opps piece is there\n      possibleMoves[8 * x + y] = true; // TODO: did this break the stats?\n      iHitMoves[iHitMoves.length] = [k, l, x, y, table[k][l][1], table[x][y][1]]; //[who k,l where to x,y who, hits]\n    }\n    return true;\n  }\n  possibleMoves[8 * x + y] = true;\n  return false;\n}\n\nfunction pushAidNN(k, l, x, y, c, table, protectedArray, iHitMoves, protectScore, possibleMoves) {\n  // returns gofurther for rook, bishop or queen \n\n  var isThere = whatsThereNN(x, y, table);\n  if (isThere[0] === 3) return false; // off the table, dont go further\n  if (isThere[0] === 0) { //ures mezo\n    possibleMoves[8 * x + y] = true;\n    return true; // go further\n  }\n  if (isThere[0] === c) {\n    //my piece is there\n    protectScore[0] += 1;\n    protectedArray[x][y] = true; //protected\t\t//moveit will clear, fastmove not???!!!\n  } else {\n    //opps piece is there\n    possibleMoves[8 * x + y] = true;\n    iHitMoves[iHitMoves.length] = [k, l, x, y, table[k][l][1], table[x][y][1]]; //[who k,l where to x,y who, hits]\n  }\n  return false;\n}\n\nfunction fastMove(moveCoords, intable, dontProtect, hitValue) {\n\n  var thistable = new Array(8);\n  for (var i = 0; i < 8; i += 1) {\n    thistable[i] = new Array(8);\n    for (var j = 0; j < 8; j += 1) {\n      thistable[i][j] = new Int8Array(2);\n      thistable[i][j][0] = intable[i][j][0];\n      thistable[i][j][1] = intable[i][j][1];\n    }\n  }\n\n\n\n  if (thistable[moveCoords[0]][moveCoords[1]][1] === 9 && thistable[moveCoords[0]][moveCoords[1]][3]) {\n    // moving a king that hasnt moved yet\n    switch (moveCoords[2]) {\n      case 2:\n        switch (moveCoords[3]) {\n          case 0:\n            thistable = fastMove([0, 0, 3, 0], thistable);\n            break;\n          case 7:\n            thistable = fastMove([7, 0, 5, 0], thistable);\n            break;\n          default:\n        }\n        break;\n      case 7:\n        switch (moveCoords[3]) {\n          case 0:\n            thistable = fastMove([0, 7, 3, 7], thistable);\n            break;\n          case 7:\n            thistable = fastMove([7, 7, 5, 7], thistable);\n            break;\n          default:\n        }\n        break;\n      default:\n    }\n  }\n\n  if (thistable[moveCoords[0]][moveCoords[1]][1] === 1 && ( //ha paraszt es\n    moveCoords[3] === 7 || //es 8asra lep vagy\n    moveCoords[3] === 0 //1re\n  )) {\n    // THEN\n    thistable[moveCoords[0]][moveCoords[1]][1] = 5; //kiralyno lett\n  }\n\n  thistable[moveCoords[2]][moveCoords[3]] =\n    thistable[moveCoords[0]][moveCoords[1]];\n  thistable[moveCoords[0]][moveCoords[1]] = [0, 0, 0]; //, false, false, false]\n\n  return thistable;\n}\n\nfunction newCanMove(k, l, c, moveTable, protectedArray, iHitMoves, protectScore, possibleMoves) {\n\n  //[who k,l where to x,y who, hits]\n\n  var what = moveTable[k][l][1];\n\n  switch (what) {\n\n    case 1:\n\n      pawnCanMoveN(k, l, moveTable, protectedArray, c, iHitMoves, protectScore, possibleMoves);\n\n      break;\n    case 2:\n      bishopCanMoveN(k, l, moveTable, protectedArray, c, iHitMoves, protectScore, possibleMoves);\n\n      break;\n    case 3:\n      horseCanMoveN(k, l, moveTable, protectedArray, c, iHitMoves, protectScore, possibleMoves);\n\n      break;\n    case 4:\n      rookCanMoveN(k, l, moveTable, protectedArray, c, iHitMoves, protectScore, possibleMoves);\n\n      break;\n    case 5:\n      queenCanMoveN(k, l, moveTable, protectedArray, c, iHitMoves, protectScore, possibleMoves);\n\n      break;\n    case 9:\n      kingCanMoveN(k, l, moveTable, protectedArray, c, iHitMoves, protectScore, possibleMoves);\n\n      break;\n\n  }\n\n}\n\nfunction getHitScores(origTable, wNext, flipIt, wPlayer, mod) {\n\n  var fwVdef = 1; //0.846;\n  var fwV = 1;\n\n  var bHKdef = 1;\n  var bHK = 1;\n\n  var hKMdef = 1;\n  var hKM = 1;\n\n  switch (mod && mod.modType) {\n    case 'fwV':\n      fwV = mod.modConst;\n      break;\n    case 'bHK':\n      bHK = mod.modConst;\n      break;\n    case 'hKM':\n      hKM = mod.modConst;\n      break;\n\n    default:\n  }\n\n  var pawnVal = 0;\n\n  var iHitCoords = []; //[who k,l where to x,y, who, hits]\n  var heHitsCoords = [];\n\n  var myprotectScore = new Uint8Array(1); //[0]\n  var hisprotectScore = new Uint8Array(1); //[0]\n\n  var myAllHit = 0;\n  var hisAllHit = 0;\n\n  var myBestHit = 0;\n  var hisBestHit = 0;\n\n  var myBestHitCoords = [];\n\n  var protectedArray = [ //new Array(8)\n\n    new Uint8Array(8),\n    new Uint8Array(8),\n    new Uint8Array(8),\n    new Uint8Array(8),\n\n    new Uint8Array(8),\n    new Uint8Array(8),\n    new Uint8Array(8),\n    new Uint8Array(8)\n\n  ];\n\n  var c;\n  var nc;\n\n  if (wNext) {\n    nc = 1;\n    c = 2;\n  } else {\n    c = 1;\n    nc = 2;\n  }\n\n  var allMyMoves = {};\n  var hisKingMoves = {};\n\n  for (var lookI = 0; lookI < 8; lookI += 1) {\n    for (var lookJ = 0; lookJ < 8; lookJ += 1) { //look through the table\n\n      if (origTable[lookI][lookJ][0] === c) {\n        ////////found my piece/////////\n        ////////get all my moves and places i protect\n        if (origTable[lookI][lookJ][1] === 1) {\n          if (c === 1) {\n            pawnVal += (7 - lookJ);\n          } else {\n            pawnVal += lookJ;\n          }\n        }\n        newCanMove(lookI, lookJ, c, origTable, protectedArray, iHitCoords, myprotectScore, allMyMoves); //newCanMove will protect the table\n        //and append all my hits to iHitCoords\n        //will increase myprotectscore, inaccurate!!!!!!!\t\t\t\t\n      } else {\n\n        if (origTable[lookI][lookJ][0] !== 0) { ////////found opponent's piece/////////\t\t\t\t\t\t\t\t\t\t\t\t\n          if (origTable[lookI][lookJ][1] === 1) {\n            if (nc === 1) {\n              pawnVal -= (7 - lookJ);\n            } else {\n              pawnVal -= lookJ;\n            }\n\n          }\n\n          newCanMove(lookI, lookJ, nc, origTable, protectedArray, heHitsCoords, hisprotectScore, origTable[lookI][lookJ][1] === 9 ? hisKingMoves : {});\n        }\n      }\n\n    }\n  }\n\n  iHitCoords.forEach(function (hitCoords) {\n    var thisValue = 0;\n\n    if (protectedArray[hitCoords[2]][hitCoords[3]]) { //if field is protected\n\n      thisValue = hitCoords[5] - hitCoords[4]; //kivonja amivel lep\n\n    } else {\n\n      thisValue = hitCoords[5]; //else normal hitvalue\n\n    }\n\n    if (thisValue > myBestHit) { //remember best\n\n      myBestHit = thisValue;\n\n      myBestHitCoords = hitCoords;\n    }\n\n    myAllHit += thisValue;\n\n  });\n\n  heHitsCoords.forEach(function (hitCoords) {\n\n    var thisValue = 0;\n\n    if (protectedArray[hitCoords[2]][hitCoords[3]]) { //if cell is protected\n\n      thisValue = hitCoords[5] - hitCoords[4]; //kivonja amivel lep\n\n    } else {\n\n      thisValue = hitCoords[5]; //normal hitvalue\n\n    }\n\n    if (thisValue > hisBestHit) { //remember best\n\n      hisBestHit = thisValue;\n      //\n    }\n\n    hisAllHit += thisValue;\n  });\n\n  var protecScore = myprotectScore[0] - hisprotectScore[0];\n  var allhitScore = myAllHit - hisAllHit;\n\n  var hisKingMArr = Object.keys(hisKingMoves);\n\n  var hisKingMoveScore = 8 - (hisKingMArr.length);\n  var blockHisKingScore = hisKingMArr.reduce((p, c) => allMyMoves[c] ? p + 1 : p, 0);\n\n\n  pawnVal *= fwV * fwVdef;\n  hisKingMoveScore *= hKM * hKMdef;\n  blockHisKingScore *= bHK * bHKdef;\n\n  var result = new Int32Array(1);\n  result[0] = (myBestHit * 65536) - (hisBestHit * 4096);\n\n  if (flipIt) {\n    result[0] -= (protecScore << 8) + (allhitScore << 4) + (pawnVal) + (hisKingMoveScore << 9) + (blockHisKingScore << 10); //*1633333\n  } else {\n    result[0] += (protecScore << 8) + (allhitScore << 4) + (pawnVal) + (hisKingMoveScore << 9) + (blockHisKingScore << 10); //*1633333\n  }\n\n  return result;\n\n}\n\n// if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') module.exports = {\n//   moveInTable: moveInTable\n// };\n\n\n////////////////http://stackoverflow.com/questions/728360/most-elegant-way-to-clone-a-javascript-object\nfunction clone(obj) {\n  var copy;\n\n  // Handle the 3 simple types, and null or undefined\n  if (null === obj || \"object\" !== typeof obj) return obj;\n\n  // Handle Date\n  if (obj instanceof Date) {\n    copy = new Date();\n    copy.setTime(obj.getTime());\n    return copy;\n  }\n\n  // Handle Array\n  if (obj instanceof Array) {\n    copy = [];\n    for (var i = 0, len = obj.length; i < len; i += 1) {\n      copy[i] = clone(obj[i]);\n    }\n    return copy;\n  }\n\n  // Handle Object\n  if (obj instanceof Object) {\n    copy = {};\n    for (var attr in obj) {\n      if (obj.hasOwnProperty(attr)) copy[attr] = clone(obj[attr]);\n    }\n    return copy;\n  }\n\n  throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n}\n\n////////////////////http://stackoverflow.com/questions/728360/most-elegant-way-to-clone-a-javascript-object end\n\nvar MoveTaskN = function (dbTable, mod) {\n  this.id = Math.random();\n\n  var shouldIDraw = evalFuncs.shouldIDraw(dbTable)\n  this.shouldIDraw = shouldIDraw\n\n  // console.log({shouldIDraw})\n\n  if (mod) this.mod = mod\n\n  this.sharedData = {\n\n    shouldIDraw: shouldIDraw,\n\n    origWNext: dbTable.wNext,\n\n    desiredDepth: dbTable.desiredDepth,\n    oppKingPos: whereIsTheKing(dbTable.table, !dbTable.wNext),\n    origProtect: protectTable(dbTable.table, dbTable.wNext),\n    origData: getTableData(dbTable.table, dbTable.wNext),\n    origDeepDatatt: getHitScores(dbTable.table, true, true, dbTable.wNext,\n      mod),\n    origDeepDatatf: getHitScores(dbTable.table, true, false, dbTable.wNext,\n      mod),\n    origDeepDataft: getHitScores(dbTable.table, false, true, dbTable.wNext,\n      mod),\n    origDeepDataff: getHitScores(dbTable.table, false, false, dbTable.wNext,\n      mod),\n  }\n\n  this.moveCoords = getAllMoves(dbTable.table, dbTable.wNext, false, 0, true)\n\n  var dontLoop = false\n  if (this.sharedData.origData[0] > 1) {\n    dontLoop = true\n  }\n\n  this.sharedData.dontLoop = dontLoop\n\n}\n\nfunction toTypedTable(table) {\n  var result = []; //new Array(8)\n  if (typeof table !== 'undefined') {\n    for (var i = 0; i < 8; i += 1) {\n      result[i] = []; //new Array(8)\n      if (typeof table[i] !== 'undefined') {\n        for (var j = 0; j < 8; j += 1) {\n          result[i][j] = new Int8Array(table[i][j])\n        }\n      }\n    }\n  }\n  return result\n}\n\n///////////////////////////// below the functions that run a million times ////////////////////////\n\nfunction solveSmallDeepeningTask(sdt, resolverArray) {\n\n  //**console.log(sdt.wPlayer)\n\n  //this is the function that runs a million times\n\n  // var sdt.depth = sdt.depth\n\n  // var sdt.table = sdt.table\n\n  // var sdt.score = new Int32Array(1)\n  // var sdt.score = sdt.score\n\n  //gets one task, produces an array of more tasks\n  //or empty array when done\n\n  var result = []\n\n  var newWNext = !sdt.wNext;\n\n  if (sdt.depth === 2) { //on 2nd level remove invalids\n    if (captured(sdt.table, newWNext)) {\n      //invalid move, sakkban maradt\n\n      result = [new SmallDeepeningTask(sdt.table, newWNext, sdt.depth + 1,\n        sdt.moveTree, sdt.desiredDepth, 100,\n        sdt.wPlayer, false, sdt.gameNum,\n        sdt.mod, sdt.shouldIDraw)]\n\n    }\n\n  }\n\n  //these new tasks go to a fifo array, we solve the tree bit by bit\n  //keeping movestrings only, not eating memory with tables\n\n  //get hitvalue for each move, keep best ones only\n  //end of tree check if we got it wrong and go back if treevalue gets less!!!!!!!!!!!!!!!!\n\n  if (sdt.trItm) { //we solved all moves for a table, time to go backwards\n\n    //do some work in resolverArray\t\t\n    //then clear that array\n\n    resolveDepth(sdt.depth, resolverArray)\n\n  } else {\n\n    if (sdt.depth > sdt.desiredDepth) { //depth +1\n\n      resolverArray[sdt.depth][resolverArray[sdt.depth].length] = new ResolverItem(sdt.score,\n        sdt.moveTree, sdt.wPlayer); //this will fill in and then gets reduced to best movevalue only\n\n    } else {\n\n      var isNegative = (sdt.depth & 1)\n\n      if (sdt.depth === sdt.desiredDepth) {\n        //////depth reached, eval table\n\n        var newScore;// = new Int32Array(1)\n\n        //**console.log(sdt.shouldIDraw)\n\n        if (isNegative) {\n\n          newScore = (sdt.score << 16) - getHitScores(sdt.table,\n            sdt.wNext, false, sdt.wPlayer,\n            sdt.mod, sdt.shouldIDraw)[0]\n\n        } else {\n\n          newScore = (sdt.score << 16) + getHitScores(sdt.table,\n            sdt.wNext, true, sdt.wPlayer,\n            sdt.mod, sdt.shouldIDraw)[0]\n        }\n\n        result[result.length] = new SmallDeepeningTask(\n          [], //no table\n          newWNext,\n          sdt.depth + 1,\n          sdt.moveTree,\n          sdt.desiredDepth,\n          newScore, //sdt.score + thisValue\n          sdt.wPlayer,\n          false,\n          sdt.gameNum,\n          sdt.mod,\n          sdt.shouldIDraw\n        )\n\n      } else {\n\n        //depth not solved, lets solve it further\n\n        var possibleMoves = []\n\n        //below returns a copied table, should opt out for speed!!!!!!!\n\n        addMovesToTable(sdt.table, sdt.wNext, true, possibleMoves) //this puts moves in strings, should keep it fastest possible\n\n        //true to \t\t\t\t//it will not remove invalid moves to keep fast \n        //keep illegal\t\t\t//we will remove them later when backward processing the tree\n\n        //here we have possiblemoves filled in with good, bad and illegal moves\n\n        for (var i = possibleMoves.length - 1; i >= 0; i -= 1) {\n\n          var moveCoords = possibleMoves[i]\n\n          var movedTable = []\n\n          movedTable = fastMove(moveCoords, sdt.table, true) //speed! put this if out of here, makeamove only false at the last run\n\n\n          var whatGetsHit = sdt.table[moveCoords[2]][moveCoords[3]];\n\n          var thisValue = whatGetsHit[1] //piece value, should += 1 when en-pass\n\n          var valueToSave\n\n          if (isNegative) { //does this work???!!!!!!!!!!!\n\n            valueToSave = sdt.score - thisValue\n          } else {\n\n            valueToSave = sdt.score + thisValue\n          }\n\n          var newMoveTree = sdt.moveTree.concat([moveCoords,\n            valueToSave])\n\n          result[result.length] = new SmallDeepeningTask(\n            movedTable,\n            newWNext,\n            sdt.depth + 1,\n            newMoveTree,\n            sdt.desiredDepth,\n            valueToSave, //sdt.score + thisValue\n            sdt.wPlayer,\n            false,\n            sdt.gameNum,\n            sdt.mod,\n            sdt.shouldIDraw\n          )\n\n\n        } //  )    //end of for each move\n\n      }\n\n      result[result.length] = new TriggerItem(sdt.depth + 1, sdt.moveTree,\n        sdt.wPlayer)\n      //this will trigger move calc when processing array (will be placed before each set of smalltasks)\n\n    }\n\n  }\n\n  return result\n\n}\n\nfunction solveDeepeningTask(deepeningTask, isSdt) { //designed to solve the whole deepening task on one thread\n  //will return number of smallTasks solved for testing??!!!!!!!!!!!!!!!\n  //var taskValue = deepeningTask.\n\n  var retProgress = deepeningTask.progress\n\n  var startedAt = new Date().getTime()\n\n  if (isSdt) {\n\n    //we are in worker, received 2nd depth table already processed with oneDeeper()\n    //this table is after his first return move\n    //not filtered move, could be that we can hit the king now\n    //if we can, then this is a wrong move, need to throw away the whole lot!!!!!!!!!!!!!!!!!\n\n    var tempDeepeningTask = {\n      desiredDepth: deepeningTask.desiredDepth,\n      smallDeepeningTasks: [deepeningTask],\n      wPlayer: deepeningTask.wPlayer,\n      mod: deepeningTask.mod,\n      shouldIDraw: deepeningTask.shouldIDraw\n    }\n    deepeningTask = tempDeepeningTask\n  }\n\n  var resolverArray = [] //multidim, for each depth the results, will be updated a million times\n\n  var p2 = deepeningTask.desiredDepth + 2;\n  for (var i = 0; i < p2; i += 1) {\n    resolverArray[i] = []\n  }\n\n  while (deepeningTask.smallDeepeningTasks.length > 0) {\n\n    //length is 1 at first, then just grows until all has reached the level. evetually there will be nothing to do and this loop exists\n\n    var smallDeepeningTask = deepeningTask.smallDeepeningTasks.pop()\n\n    // smallDeepeningTask.table = toTypedTable(smallDeepeningTask.table)\n\n    var resultingSDTs = solveSmallDeepeningTask(smallDeepeningTask, resolverArray)\n\n    for (var l = resultingSDTs.length - 1; l >= 0; l -= 1) {\n      deepeningTask.smallDeepeningTasks[deepeningTask.smallDeepeningTasks.length] = resultingSDTs[l]; //at the beginning the unsent array is just growing but then we run out\n    }\n\n    //call it again if there are tasks\n  }\n\n  var timeItTook = new Date()\n    .getTime() - startedAt\n\n  var ret = {\n\n    gameNum: deepeningTask.gameNum,\n    progress: retProgress,\n    timeItTook: timeItTook,\n    score: resolverArray[2][0].value,\n    moveTree: resolverArray[2][0].moveTree//.join(',')\n\n  }\n\n  if (isSdt !== true) {\n    ret.score = resolverArray[1][0].value\n\n  }\n\n  return ret\n}\n\nfunction deepMove(smallMoveTask) { //for 1 thread, smallmovetask has one of my possible 1st moves\n\n  // var started = new Date()\n  // \t.getTime()\n\n  var solvedTableCount = 0\n\n  // var value = 0\n\n  var deepeningTask = new DeepeningTask(smallMoveTask) //deepeningtask to be able to create 2nd level set for workers\n\n  //var tempCommand = ''\n\n  //var thisMoveValue=0\n\n  //var ranCount=\n  var totals = solveDeepeningTask(deepeningTask, '') //single thread calc\n\n  solvedTableCount += totals.solved\n\n  return { //this goes to console chat window\n    move: deepeningTask.moveCoords,\n    score: totals.score,\n    moveTree: totals.moveTree,\n    solved: totals.solved,\n    _id: smallMoveTask._id,\n    depth: deepeningTask.desiredDepth\n  }\n\n}\n\nfunction mtProcessDeepSplitMoves(data, thinker, mt, modConst, looped) {\n  var newData = []\n  var ranCount = 0\n  while (data.length > 0) {\n\n    var toPush = deepMove(data.pop(), ranCount)\n    toPush.thinker = thinker\n    newData[newData.length] = toPush;\n\n  }\n  newData.solved = ranCount\n  return newData\n}\n\nfunction oneDeeper(deepeningTask) { //only takes original first level deepeningtasks??\n\n  var resolverArray = []\n  var smallDeepeningTask = deepeningTask.smallDeepeningTasks.pop()\n\n  var tempTasks = solveSmallDeepeningTask(smallDeepeningTask,\n    smallDeepeningTask.resolverArray) //, counter)\n\n  while (tempTasks.length > 0) {\n\n    var tempTask = tempTasks.pop()\n\n    deepeningTask.smallDeepeningTasks[deepeningTask.smallDeepeningTasks.length] = tempTask;\n\n  }\n\n  deepeningTask.smallDeepeningTasksCopy = deepeningTask.smallDeepeningTasks.slice()\n\n  deepeningTask.resolverArray = resolverArray\n\n}\n\nexport function singleThreadAi(tempDbTable, depth, cb, mod) {\n\n  var dbTable = clone(tempDbTable)\n\n  dbTable.moveTask = new MoveTaskN(dbTable, mod)\n\n  dbTable.moveTask.sharedData.desiredDepth = depth\n\n  //from server\n  var tempMoves = new SplitMove(dbTable).movesToSend\n\n  //////////from mainworker\n  tempMoves.forEach(function (splitMove) {\n\n    splitMove.progress = {\n\n      moveCoords: splitMove.moveCoords,\n      moveIndex: splitMove.moveIndex,\n\n      done: false,\n      result: {},\n\n      expected: undefined,\n\n    }\n\n  })\n\n  var result = []\n\n  tempMoves.forEach(function (smallMoveTask, index) {\n    //var dTask=new DeepeningTask(smallMoveTask)\n\n    var deepeningTask = new DeepeningTask(smallMoveTask)\n\n    oneDeeper(deepeningTask) //this will make about 30 smalldeepeningtasks from the initial 1 and create deepeningtask.resolverarray\n    //first item in deepeningtask.smalldeepeningtasks is trigger\n\n    //!!!!!!!!!!!implement !!!!!!!!!!typedarray\n\n    var res = []\n\n    while (deepeningTask.smallDeepeningTasks.length > 1) {\n\n      var smallDeepeningTask = deepeningTask.smallDeepeningTasks.pop()\n\n      smallDeepeningTask.progress = deepeningTask.progress\n\n      ////////////////from subworker\n\n      var res2 = solveDeepeningTask(smallDeepeningTask, true)\n\n      res2.value = res2.score\n\n      res[res.length] = res2;\n\n    }\n\n    var tempResolveArray = []\n\n    tempResolveArray[1] = []\n    tempResolveArray[2] = res\n    tempResolveArray[3] = []\n\n    resolveDepth(2, tempResolveArray)\n\n    var pushAgain = tempResolveArray[1][0]\n\n    var moveCoords = pushAgain.moveTree[0]//.slice(0, 4)\n\n    var wouldLoop\n\n    if (!dbTable.moveTask.shouldIDraw) {\n\n      //**console.log('i shouldn\\'t draw')\n\n      var movedTable = moveIt(moveCoords, dbTable.table)\n      //**console.log(movedTable)\n      wouldLoop = evalFuncs.checkIfLooped(movedTable, dbTable.allPastTables)\n      //**console.log(wouldLoop)\n\n    } else {\n      //**console.log('i can draw')\n    }\n    if (wouldLoop) pushAgain.value -= Math.pow(wouldLoop, 5)\n    //pushAgain.moveIndex=resData.progress.moveIndex\n    //pushAgain._id = workingOnGameNum\n    pushAgain.score = pushAgain.value\n    //pushAgain.thinker = sendID.toString() //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!1\n    pushAgain.move = moveCoords\n\n    result[result.length] = pushAgain;\n\n  })\n\n  result.sort(function (a, b) {\n\n    if (a.score < b.score) {\n      return 1\n    } else {\n      if (a.score === b.score) {\n        return 0\n      } else {\n        return -1\n      }\n    }\n\n  })\n\n  var finalResult = {\n    result: result,\n    winningMove: result[0],\n    moveCoords: result[0].moveTree[0]//.slice(0, 4)\n  }\n  //res.winningMove=res[0]\n\n  if (cb) cb(finalResult)\n\n  return finalResult\n\n}\n\nfunction resolveDepth(depth, resolverArray) {\n\n  if (resolverArray[depth].length > 0) {\n    var raDm1 = resolverArray[depth - 1];\n    if (depth & 1) {\n\n      raDm1[raDm1.length] = resolverArray[depth].reduce(\n        function (previousValue, currentValue, index, array) {\n          if (currentValue.value > previousValue.value) {\n            return {\n              value: currentValue.value,\n              moveTree: currentValue.moveTree\n            } //currentValue\n\n          } else {\n            return {\n              value: previousValue.value,\n              moveTree: previousValue.moveTree\n            } //previousValue\n          }\n\n        }\n      )\n    } else {\n      raDm1[raDm1.length] = resolverArray[depth].reduce(\n        function (previousValue, currentValue, index, array) {\n          if (currentValue.value < previousValue.value) {\n            return {\n              value: currentValue.value,\n              moveTree: currentValue.moveTree\n            }\n          } else {\n            return {\n              value: previousValue.value,\n              moveTree: previousValue.moveTree\n            }\n          }\n\n        }\n      )\n    }\n\n  }\n  resolverArray[depth] = []\n}\n\n\nvar SmallDeepeningTask = function (table, wNext, depth, moveTree, desiredDepth, score, wPlayer, stopped, gameNum, mod, shouldIDraw) {\n\n  this.gameNum = gameNum\n\n  this.wPlayer = wPlayer\n\n  this.table = table\n\n  this.wNext = wNext\n\n  this.depth = depth\n\n  this.moveTree = moveTree\n\n  this.desiredDepth = desiredDepth\n\n  this.score = score\n\n  this.mod = mod\n\n  this.shouldIDraw = shouldIDraw\n\n  //if(shouldIDraw!=undefined)console.log(shouldIDraw)\n\n}\nvar MoveToSend = function (moveCoord, index, dbTableWithMoveTask, splitMoveId) {\n\n  var moveTask = dbTableWithMoveTask.moveTask\n\n  this.shouldIDraw = moveTask.shouldIDraw\n\n  this.mod = moveTask.mod\n\n  this.moveIndex = index\n\n  this.moveCoords = moveCoord //one move only\n\n  this.sharedData = moveTask.sharedData\n\n  this.sharedData.origTable = dbTableWithMoveTask.table\n\n  this.sharedData.gameNum = dbTableWithMoveTask._id\n\n  this.sharedData.desiredDepth = moveTask.sharedData.desiredDepth\n\n  this.sharedData.splitMoveID = splitMoveId\n\n  this.timer = {}\n\n  this.history = []\n\n}\n\n\n\n\nvar SplitMove = function (dbTableWithMoveTask) {\n\n  //**console.log(JSON.stringify(dbTableWithMoveTask.moveTask))\n\n  this.shouldIDraw = dbTableWithMoveTask.moveTask.shouldIDraw\n\n  this.started = new Date()\n\n  this.splitMoveIndex = undefined\n\n  this.splitMoveID = Math.random() * Math.random()\n\n  var movesToSend = []\n\n  dbTableWithMoveTask.moveTask.moveCoords.forEach((moveCoord, index) => {\n\n    movesToSend.push(new MoveToSend(moveCoord, index, dbTableWithMoveTask, this.splitMoveID))\n\n  })\n\n  this.movesToSend = movesToSend //this will get empty as we send the moves out for processing\n\n  this.moves = movesToSend.slice() //this should stay full\n\n  this.thinkers = [] //this will get filled with the clients working on this splitmove\n\n  this.gameNum = dbTableWithMoveTask._id\n\n  this.origTable = dbTableWithMoveTask.table\n\n  this.origMoveTask = dbTableWithMoveTask.moveTask\n\n  this.pendingMoveCount = dbTableWithMoveTask.moveTask.moveCoords.length\n\n}\nvar DeepeningTask = function (smallMoveTask) { //keep this fast, designed for main thread and mainWorker ???not sure..     //smallMoveTask is a smallMoveTask, to be deepend further\n\n  this.shouldIDraw = smallMoveTask.sharedData.shouldIDraw\n\n  this.mod = smallMoveTask.mod\n\n  this.gameNum = smallMoveTask.sharedData.gameNum\n\n  this.progress = smallMoveTask.progress\n\n  this.resolverArray = []\n\n\n\n  this.initialWNext = smallMoveTask.sharedData.origWNext\n\n\n  this.moveStr = [\n    smallMoveTask.moveCoords[0],\n    smallMoveTask.moveCoords[1],\n    smallMoveTask.moveCoords[2],\n    smallMoveTask.moveCoords[3]\n  ]            //smallMoveTask.stepMove //all resulting tables relate to this movestring: deppeningtask is made of smallmovetask..\n\n\n\n  this.initialTreeMoves = [this.moveStr] //to put in first smallmovetask\n\n  this.startingTable = smallMoveTask.sharedData.origTable //this was calculated in advance when getting the first moves: that resulted in this.everything\n  this.startingAllPastTables = smallMoveTask.sharedData.allPast\n  //**console.log(smallMoveTask)\n\n  this.thisTaskTable = moveIt(this.moveStr, this.startingTable, true) //this is the first and should be only time calculating this!!!!!\n  //takes time\n  this.firstDepthValue = this.startingTable[smallMoveTask.moveCoords[2]][smallMoveTask.moveCoords[3]][1]              //smallMoveTask.firstDepthValue\n\n  this.desiredDepth = smallMoveTask.sharedData.desiredDepth //we will deepen until depth reaches this number\n\n  this.actualDepth = 1 //its 1 because we have 1st level resulting table fixed. \n  //increase this when generating deeper tables, loop while this is smaller than desiredDepth\n\n  //this task should be sent back to the server so lets ke\n\n\n  this.tableTree = [] //fill multiDIM array with resulting tables during processing\n  this.moveStrTree = [] //twin array with movesString\n\n\n  this.tableTree[0] = [this.startingTable] // depth 0 table, startingTable: only one in an array\n\n  this.tableTree[1] = [this.thisTaskTable] // depth 1 tables, we only have one in this task but there are more in total\n\n  this.tableTree[2] = [] // depth 2 tables are empty at init, we will fill these in when processing this deepeningTask. after each depth we'll create the next empty array\n\n  //there will be more levels here with a lot of tables\n\n  //moveStings is one level deeper array, strings get longer each level to keep track of table!!!!!!\n\n  this.moveStrTree[0] = [\n    []\n  ] //???\t\t\t\t\t// depth 0 movestrings, meaning 'how did we get here?'\tthese are always unknown\n\n  this.moveStrTree[1] = [\n    [this.moveStr]\n  ] // depth 1 movestrings, meaning 'how did we get here?', we only have one in this task but there are more in total\n\n  this.moveStrTree[2] = [\n    []\n  ] // depth 2 movestrings, meaning 'how did we get here?', we will fill these together with the tableTree, all indexes will match as move=>resulting table\n\n  //there will be more levels here with a lot of moveStrings\n\n\n\n  this.smallDeepeningTaskCounts = [0, 1] //this will be an array of the total created smalldeepeningtasks per depth, depth 0 has 0, depth 1 has one in this splitmove\n\n\n  var initialSmallDeepeningTask = new SmallDeepeningTask(this.thisTaskTable, !this.initialWNext, this.actualDepth, this.initialTreeMoves, this.desiredDepth, this.firstDepthValue, smallMoveTask.cfColor, false, this.gameNum, this.mod, this.shouldIDraw)\n\n  //this.value=initialSmallDeepeningTask.score\n\n  this.smallDeepeningTasks = [initialSmallDeepeningTask] //to be sent out for multiplying when processing for level 2 (unless desireddepth is 1)\n\n  //this.pendingSmallDeepeningTasks=[]\t\t\t\t//here we will keep the pending smalltasks: sent out \n\n  this.solvedSmallDeepeningTasks = [] //here we will keep the results until stepping to next depth, ready for next level when this.length equals count\n\n\n}\n\n\n\n\n\nvar SmallMoveTask = function (moveCoord, index, dbTable) { //deptObj has data to keep track of deepening\n\n\n\n  this.firstDepthValue = dbTable.table[moveCoord[2]][moveCoord[3]][1]\t//doesnt care about enPass!!     //--\n\n  if (dbTable.desiredDepth > 0) {                                    //#\n    this.desiredDepth = dbTable.desiredDepth\n  } else {\n    this.desiredDepth = 3 //should be good, on 4th we check what he could hit but not generate any tables and this should match the old styles performance\n  }\n\n\n  this.oppKingPos = dbTable.oppKingPos //aTK will need this, should be the moved kings pos is moved!!!!  //#\n\n  this._id = dbTable._id //server will need this when receiving solved moves //#\n\n  this.cfMoveCoords = moveCoord //4 numbers      //##\n\n  var stepMove = moveCoord//[0], moveCoord[1], moveCoord[2], moveCoord[3])      //-- do it on client\n\n  this.stepMove = stepMove //4 char string       //--above\n\n  this.moveStrings = []\n\n  this.moveStrings.push(stepMove)\n\n\n  this.retMoves = [] //ai will fill\n\n  //this.table=moveIt(this.moveStr,dbTable.table,true)\t//dontprotect works?? !!!!\n\n  //this.value=dbTable.value\n\n  this.allPast = dbTable.allPastTables //ai needs it to avoid loop  //#\n\n  this.cfTable = dbTable.table //ai needs to know original table             //#\n  //this.cfMoveCoords=moveCoord\n  this.moveIndex = index //who needs this??!!!!!!!\n\n  this.origProtect = dbTable.origProtect //this should go in origData!!!!\n\n  this.cfColor = dbTable.wNext //this could too...\n\n  //this.deepWNext=dbTable.wNext\n\n  //this.stepMove=0\n\n  this.origData = dbTable.origData // itt adom at ami kozos az osszes smalltaskban\n\n  this.value = this.origData //ez meg minek is\n\n\n  this.fHitValue = [0] //initial value, should happen masutt     //--\n\n\n\n}\n\nvar ResolverItem = function (inscore, inmoveTree, wPlayer) {\n  this.value = inscore\n  this.moveTree = inmoveTree\n\n  this.wPlayer = wPlayer\n\n}\n\nvar TriggerItem = function (depth, moveTree, wPlayer) {\t\t//these will be put in main deepeningTaskArray to trigger calculation of totals for each level\n  this.trItm = true\n\n\n  this.depth = depth\n  //this.parentMove=parentMoveStr\t\t\t//4 char string\n  this.moveTree = moveTree\n  this.wPlayer = wPlayer\n}\n\n\n\nvar TempMoveTask = function (dbTable) {\n\n  //this.rnd=Math.random()\n  // this.created = new Date()\n  // \t.getTime()\n\n  //this.allTempTables = []\n\n  this.desiredDepth = dbTable.desiredDepth\n\n  dbTable.oppKingPos = whereIsTheKing(dbTable.table, !dbTable.wNext)\n\n\n  var moveCoords = getAllMoves(dbTable.table, dbTable.wNext, false, 0, true)\n\n\n\n  dbTable.origProtect = protectTable(dbTable.table, dbTable.wNext)\n  dbTable.origData = getTableData(dbTable.table, dbTable.wNext)\n\n  dbTable.origDeepDatatt = getHitScores(dbTable.table, true, true)\n\n  dbTable.origDeepDatatf = getHitScores(dbTable.table, true, false)\n\n  dbTable.origDeepDataft = getHitScores(dbTable.table, false, true)\n\n  dbTable.origDeepDataff = getHitScores(dbTable.table, false, false)\n\n\n\n  this.dontLoop = false\n\n  if (dbTable.origData[0] > 1) {\n    this.dontLoop = true\n  }\n\n\n\n\n  var moves = []\n\n  moveCoords.forEach(function (moveCoord, index) {\n    moves.push(new SmallMoveTask(moveCoord, index, dbTable))\n    //movesToSend.push(moves[moves.length-1])\n\n\n  })\n\n  this.movesToSend = moves.slice() //copy it, these we vill sen out\n\n\n  this.moves = moves\n\n\n\n\n\n\n}\n\n\n\nvar Task = function (command, data, message, taskNum) {\n\n  var rnd = Math.random()\n  this.rnd = rnd\n\n  if (taskNum) {\n    this.taskNum = taskNum\n  }\n  else {\n    this.taskNum = rnd\n  }\n\n\n\n  this.command = command\n  this.message = message\n  this.data = data\n  this.response = {}\n\n  var fstTime = new Date()\n    .getTime()\n\n  this.created = fstTime\n  this.called = fstTime\n\n\n\n\n}\n\nvar Dbuser = function (name, pwd) {\n  this.name = name\n  this.pwd = pwd\n  this.games = [] //his recent games \n\n}\n////\nvar FakeDbTable = function (_id, wName, bName) { //used for speed testing only\n\n\n  this.pendingMoveCount = 0\n\n  this.returnedMoves = []\n\n  this._id = _id\n  this.wName = wName\n  this.bName = bName\n\n\n  this.aiToMove = false //unused\n  this.toBeChecked = true //unused\n  this.gameIsOn = true\n  this.whiteWon = false\n  this.blackWon = false\n  this.isDraw = false\n\n  this.askWhiteDraw = false\n  this.askBlackDraw = false\n\n  this.whiteCanForceDraw = false\n  this.blackCanForceDraw = false\n\n\n  this.learner = false\n  this.learnerIsBusy = false\n\n\n\n  this.wNext = true\n  this.aiOn = false\n  this.chat = []\n  this.moves = []\n  this.pollNum = 1\n  this.allPastTables = []\n\n  this.created = new Date()\n    .getTime()\n  this.moved = this.created\n\n  this.table = new Array(8) //create 8x8 array\n  for (var i = 0; i < 8; i++) {\n    this.table[i] = new Array(8)\n  }\n\n  for (var j = 2; j < 6; j++) { //make the blanks blank\n    for (i = 0; i < 8; i++) {\n      this.table[i][j] = [0, 0, 0, false, false]\n    }\n  }\n\n  for (var i = 0; i < 8; i++) { //row of white pawns\n\n    this.table[i][1] = [0, 0, 0, false, false] //,pawnCanMove]\n  }\n  for (var i = 0; i < 8; i++) { //row of black pawns\n    this.table[i][6] = [1, 1, 0, false, false] //,pawnCanMove]\n  }\n\n  this.table[0][0] = [0, 0, 0, true, false] //,rookCanMove]\t\t\t\t//rooks\t\t//0 stands for times it moved\n  this.table[7][0] = [0, 0, 0, true, false] //,rookCanMove]\n  this.table[0][7] = [0, 0, 0, true, false] //,rookCanMove]\n  this.table[7][7] = [0, 0, 0, true, false] //,rookCanMove]\n\n  this.table[1][0] = [2, 3, 0, true, false] //,horseCanMove]\t\t\t\t\t//knights\n  this.table[6][0] = [2, 3, 0, true, false] //,horseCanMove]\n  this.table[1][7] = [1, 3, 0, true, false] //,horseCanMove]\n  this.table[6][7] = [1, 3, 0, true, false] //,horseCanMove]\n\n  this.table[2][0] = [0, 0, 0, true, false] //,bishopCanMove]\t\t\t\t//bishops\n  this.table[5][0] = [0, 0, 0, true, false] //,bishopCanMove]\n  this.table[2][7] = [0, 0, 0, true, false] //,bishopCanMove]\n  this.table[5][7] = [0, 0, 0, true, false] //,bishopCanMove]\n\n  this.table[3][0] = [0, 0, 0, true, false] //,queenCanMove]\t\t\t\t//w queen\n  this.table[4][0] = [2, 9, 0, true, false] //,kingCanMove]\t\t\t\t//w king\n\n  this.table[3][7] = [0, 0, 0, true, false] //,queenCanMove]\t\t\t\t//b q\n  this.table[4][7] = [1, 9, 0, true, false] //,kingCanMove]\t\t\t\t//b k\n\n  this.table = addMovesToTable(this.table, true)\n  //protectPieces(this.table,true)\n  //protectPieces(this.table,false)\n}\n\nvar Dbtable = function (_id, wName, bName) { //class\n\n  this.moveCount = 0\n\n  this.pendingMoveCount = 0\n  this.desiredDepth = 0\t//will set after creating, at each move step\n  this.returnedMoves = []\n\n  this._id = _id\n  this.wName = wName\n  this.bName = bName\n\n\n  this.aiToMove = false //unused\n  this.toBeChecked = true //unused\n  this.gameIsOn = true\n  this.whiteWon = false\n  this.blackWon = false\n  this.isDraw = false\n\n  this.askWhiteDraw = false\n  this.askBlackDraw = false\n\n  this.whiteCanForceDraw = false\n  this.blackCanForceDraw = false\n\n\n  this.learner = false\n  this.learnerIsBusy = false\n\n\n\n  this.wNext = true\n  this.aiOn = false\n  this.chat = []\n  this.moves = []\n  this.pollNum = 1\n  this.allPastTables = []\n\n  this.created = new Date()\n    .getTime()\n  this.moved = this.created\n\n  this.table = new Array(8) //create 8x8 array\n  for (var i = 0; i < 8; i++) {\n    this.table[i] = new Array(8)\n  }\n\n  for (var j = 2; j < 6; j++) { //make the blanks blank\n    for (i = 0; i < 8; i++) {\n      this.table[i][j] = [0, 0, 0, false, false]\n    }\n  }\n\n  for (var i = 0; i < 8; i++) { //row of white pawns\n\n    this.table[i][1] = [2, 1, 0, false, false] //,pawnCanMove]\n  }\n  for (var i = 0; i < 8; i++) { //row of black pawns\n    this.table[i][6] = [1, 1, 0, false, false] //,pawnCanMove]\n  }\n\n  this.table[0][0] = [2, 4, 0, true, false] //,rookCanMove]\t\t\t\t//rooks\t\t//0 stands for times it moved\n  this.table[7][0] = [2, 4, 0, true, false] //,rookCanMove]\n  this.table[0][7] = [1, 4, 0, true, false] //,rookCanMove]\n  this.table[7][7] = [1, 4, 0, true, false] //,rookCanMove]\n\n  this.table[1][0] = [2, 3, 0, true, false] //,horseCanMove]\t\t\t\t\t//knights\n  this.table[6][0] = [2, 3, 0, true, false] //,horseCanMove]\n  this.table[1][7] = [1, 3, 0, true, false] //,horseCanMove]\n  this.table[6][7] = [1, 3, 0, true, false] //,horseCanMove]\n\n  this.table[2][0] = [2, 2, 0, true, false] //,bishopCanMove]\t\t\t\t//bishops\n  this.table[5][0] = [2, 2, 0, true, false] //,bishopCanMove]\n  this.table[2][7] = [1, 2, 0, true, false] //,bishopCanMove]\n  this.table[5][7] = [1, 2, 0, true, false] //,bishopCanMove]\n\n  this.table[3][0] = [2, 5, 0, true, false] //,queenCanMove]\t\t\t\t//w queen\n  this.table[4][0] = [2, 9, 0, true, false] //,kingCanMove]\t\t\t\t//w king\n\n  this.table[3][7] = [1, 5, 0, true, false] //,queenCanMove]\t\t\t\t//b q\n  this.table[4][7] = [1, 9, 0, true, false] //,kingCanMove]\t\t\t\t//b k\n\n  this.table = addMovesToTable(this.table, true)\n  //protectPieces(this.table,true)\n  //protectPieces(this.table,false)\n}","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n/**\n * Keep track of the previous component so that we can set\n * `currentComponent` to `null` and throw when a hook is invoked\n * outside of render\n * @type {import('./internal').Component}\n */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\thooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks && c.__hooks._pendingEffects.length) {\n\t\tafterPaint(afterPaintEffects.push(c));\n\t}\n\tcurrentComponent = previousComponent;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\ttry {\n\t\t\tc.__hooks._list.forEach(invokeCleanup);\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') ref(createHandle());\n\t\t\telse if (ref) ref.current = createHandle();\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tafterPaintEffects.forEach(component => {\n\t\tif (component._parentDom) {\n\t\t\ttry {\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t} catch (e) {\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t\toptions._catchError(e, component._vnode);\n\t\t\t}\n\t\t}\n\t});\n\tafterPaintEffects = [];\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tif (typeof hook._cleanup == 'function') hook._cleanup();\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","import { createContext } from 'preact';\n\nconst GameContext = createContext('test');\nexport default GameContext;","import { getInitialTable } from \"./table\";\n\nexport class GameModel {\n  constructor() {\n    this.moveCount = 0\n\n    this.pendingMoveCount = 0\n    this.desiredDepth = 0\t//will set after creating, at each move step\n    this.returnedMoves = []\n\n    // this._id = _id,\n    //   this.wName = wName,\n    //   this.bName = bName,\n\n\n    //   this.aiToMove = false //unused\n    // this.toBeChecked = true //unused\n    this.gameIsOn = true\n    this.whiteWon = false\n    this.blackWon = false\n    this.isDraw = false\n\n    this.askWhiteDraw = false\n    this.askBlackDraw = false\n\n    this.whiteCanForceDraw = false\n    this.blackCanForceDraw = false\n\n\n    // this.learner = false\n    // this.learnerIsBusy = false\n\n\n\n    this.wNext = true;\n      // this.aiOn = false;\n      // this.chat = [];\n      this.moves = [];\n      // this.pollNum = 1;\n      this.allPastTables = []\n\n    this.created = Date.now();\n    this.moved = null\n\n    this.table = getInitialTable();\n\n    // this.table = new Array(8) //create 8x8 array\n    // for (var i = 0; i < 8; i++) {\n    //   this.table[i] = new Array(8)\n    // }\n\n    // for (var j = 2; j < 6; j++) { //make the blanks blank\n    //   for (i = 0; i < 8; i++) {\n    //     this.table[i][j] = [0, 0, 0, false, false]\n    //   }\n    // }\n\n    // for (var i = 0; i < 8; i++) { //row of white pawns\n\n    //   this.table[i][1] = [2, 1, 0, false, false] //,pawnCanMove]\n    // }\n    // for (var i = 0; i < 8; i++) { //row of black pawns\n    //   this.table[i][6] = [1, 1, 0, false, false] //,pawnCanMove]\n    // }\n\n    // this.table[0][0] = [2, 4, 0, true, false] //,rookCanMove]\t\t\t\t//rooks\t\t//0 stands for times it moved\n    // this.table[7][0] = [2, 4, 0, true, false] //,rookCanMove]\n    // this.table[0][7] = [1, 4, 0, true, false] //,rookCanMove]\n    // this.table[7][7] = [1, 4, 0, true, false] //,rookCanMove]\n\n    // this.table[1][0] = [2, 3, 0, true, false] //,horseCanMove]\t\t\t\t\t//knights\n    // this.table[6][0] = [2, 3, 0, true, false] //,horseCanMove]\n    // this.table[1][7] = [1, 3, 0, true, false] //,horseCanMove]\n    // this.table[6][7] = [1, 3, 0, true, false] //,horseCanMove]\n\n    // this.table[2][0] = [2, 2, 0, true, false] //,bishopCanMove]\t\t\t\t//bishops\n    // this.table[5][0] = [2, 2, 0, true, false] //,bishopCanMove]\n    // this.table[2][7] = [1, 2, 0, true, false] //,bishopCanMove]\n    // this.table[5][7] = [1, 2, 0, true, false] //,bishopCanMove]\n\n    // this.table[3][0] = [2, 5, 0, true, false] //,queenCanMove]\t\t\t\t//w queen\n    // this.table[4][0] = [2, 9, 0, true, false] //,kingCanMove]\t\t\t\t//w king\n\n    // this.table[3][7] = [1, 5, 0, true, false] //,queenCanMove]\t\t\t\t//b q\n    // this.table[4][7] = [1, 9, 0, true, false] //,kingCanMove]\t\t\t\t//b k\n\n    // this.table = addMovesToTable(this.table, true)\n    //protectPieces(this.table,true)\n    //protectPieces(this.table,false)\n  }\n}","import { addMovesToTable } from \"../engine/engine\";\n\nexport const getInitialTable = () => {\n  const table = [];\n\n  // create 8 rows\n  for (let i = 0; i < 8; i += 1) {\n    table[i] = [];\n  }\n\n  //make blank cells blank\n  for (let j = 2; j < 6; j += 1) {\n    for (let i = 0; i < 8; i += 1) {\n      table[i][j] = [0, 0, 0, false, false]\n    }\n  }\n\n  for (let i = 0; i < 8; i++) { //row of white pawns\n\n    table[i][1] = [2, 1, 0, false, false] //,pawnCanMove]\n  }\n  for (let i = 0; i < 8; i++) { //row of black pawns\n    table[i][6] = [1, 1, 0, false, false] //,pawnCanMove]\n  }\n\n  table[0][0] = [2, 4, 0, true, false] //,rookCanMove]\t\t\t\t//rooks\t\t//0 stands for times it moved\n  table[7][0] = [2, 4, 0, true, false] //,rookCanMove]\n  table[0][7] = [1, 4, 0, true, false] //,rookCanMove]\n  table[7][7] = [1, 4, 0, true, false] //,rookCanMove]\n\n  table[1][0] = [2, 3, 0, true, false] //,horseCanMove]\t\t\t\t\t//knights\n  table[6][0] = [2, 3, 0, true, false] //,horseCanMove]\n  table[1][7] = [1, 3, 0, true, false] //,horseCanMove]\n  table[6][7] = [1, 3, 0, true, false] //,horseCanMove]\n\n  table[2][0] = [2, 2, 0, true, false] //,bishopCanMove]\t\t\t\t//bishops\n  table[5][0] = [2, 2, 0, true, false] //,bishopCanMove]\n  table[2][7] = [1, 2, 0, true, false] //,bishopCanMove]\n  table[5][7] = [1, 2, 0, true, false] //,bishopCanMove]\n\n  table[3][0] = [2, 5, 0, true, false] //,queenCanMove]\t\t\t\t//w queen\n  table[4][0] = [2, 9, 0, true, false] //,kingCanMove]\t\t\t\t//w king\n\n  table[3][7] = [1, 5, 0, true, false] //,queenCanMove]\t\t\t\t//b q\n  table[4][7] = [1, 9, 0, true, false] //,kingCanMove]\t\t\t\t//b k\n\n  // table = addMovesToTable(table, true)\n\n  return addMovesToTable(table, true);\n  // table;\n};\n","import { h } from 'preact';\nimport style from './style.scss';\n\nimport { useContext, useState } from 'preact/hooks';\nimport GameContext from '../../context/GameContext';\nimport { moveInTable, singleThreadAi } from '../../engine/engine';\n\nexport const Board = () => {\n  const { gameState, setGameState } = useContext(GameContext);\n  const { table } = gameState;\n  const [firstClickedCellAddress, setFirstClickedCellAddress] = useState();\n\n  const cellSize = Math.min(window.innerHeight, window.innerWidth) / 9;\n\n  const whiteState = [];\n  for (let i = 0; i < 8; i += 1) {\n    whiteState[i] = [];\n    for (let j = 0; j < 8; j += 1) {\n      // if(oldValue&&oldValue[i][j][0] != newValue[i][j][0]) scope.input[i][j][15] = true       //highlight moved\n      whiteState[i][j] = table[j][7 - i]\n      if ((i + j) & 1) whiteState[i][j][7] = true     //grey fields\n    }\n  }\n\n  const clearHighlights = (game) => Object.assign({}, game, {\n    table: game.table.map(row => row.map(cell => Object.assign({}, cell, { 9: null })))\n  });\n\n  const cellClickHandler = (rowIndex, colIndex, cell) => {\n    if (!firstClickedCellAddress) {\n      cell[9] = true; // selected\n      cell[5].forEach(([x, y]) => {\n        table[x][y][9] = true; //highlighted\n      })\n      setFirstClickedCellAddress({ rowIndex, colIndex });\n      return;\n    }\n\n    const moveToMake = [\n      firstClickedCellAddress.colIndex,\n      7 - firstClickedCellAddress.rowIndex,\n      colIndex,\n      7 - rowIndex\n    ];\n\n    if (moveToMake[0] === moveToMake[2] && moveToMake[1] === moveToMake[3]) {\n      setFirstClickedCellAddress(null);\n      setGameState(clearHighlights(gameState));\n      return;\n    }\n\n    const nextGameState = moveInTable(moveToMake, gameState)\n    setGameState(nextGameState);\n    setFirstClickedCellAddress(null);\n\n    setTimeout(() => {\n      const { moveCoords } = singleThreadAi(nextGameState, 3)\n      setGameState(Object.assign({}, moveInTable(moveCoords, nextGameState)));\n    }, 0);\n  };\n\n  return (<div>\n    <table className=\"main-table unselectable\">\n      <tbody>\n        <tr className=\"heading row0\" style={{ width: cellSize, height: 1 }}>\n          <td></td>\n          <td>A</td>\n          <td>B</td>\n          <td>C</td>\n          <td>D</td>\n          <td>E</td>\n          <td>F</td>\n          <td>G</td>\n          <td>H</td>\n        </tr>\n        {whiteState.map((row, rowIndex) => (<tr key={rowIndex} style={{ height: cellSize }}>\n          <td>{8 - rowIndex}</td>\n          {row.map((cell, colIndex) => (<td key={colIndex} className={cell[7] ? style.darker : style.square}>\n            <div style={{ height: cellSize }} onClick={() => cellClickHandler(rowIndex, colIndex, cell)}>\n              <img src={`/assets/pieces/${cell[0]}${cell[1]}.png`} height={cellSize} width={cellSize} class={`${cell[8] || cell[9] ? style.selected : ''}${cell[15] ? style.selected2 : ''}`} />\n            </div>\n          </td>))}\n        </tr>))}\n      </tbody>\n    </table>\n  </div>);\n};\n","import { h } from 'preact';\nimport { Link } from 'preact-router/match';\nimport style from './style.css';\nimport GameContext from '../../context/GameContext';\nimport { GameModel } from '../../model/Game';\nimport { useState } from 'preact/hooks';\nimport { Board } from '../board';\n\nconst Game = () => {\n\tconst [gameState, setGameState] = useState(new GameModel());\n  const context = { gameState, setGameState };\n\n\treturn (\n\t\t<GameContext.Provider value={context}>\n        <Board />\n    </GameContext.Provider>\n\t);\n};\n\nexport default Game;\n","import { h } from 'preact';\n// import style from './style.css';\nimport Game from '../../components/game';\n\n// Note: `user` comes from the URL, courtesy of our router\nconst GameRoute = () => {\n\treturn (<Game />);\n};\n\nexport default GameRoute;\n"],"sourceRoot":""}